[["index.html", "AlberdiLab | Aizpurua et al. 2024 New pond metagenomics Chapter 1 Introduction 1.1 Prepare the R environment", " AlberdiLab | Aizpurua et al. 2024 New pond metagenomics Ostaizka Aizpurua1 Carlos Cabido2 Garazi Martin Bideguren3 Antton Alberdi4 2024-06-20 Chapter 1 Introduction This webbook contains all the code used for data analysis in study of gut microbiomes of newts across ponds included in a restoration plan. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/alberdilab/newt_pond_metagenomics.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(rairtable) library(rmarkdown) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) library(UpSetR) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(ANCOMBC) library(lme4) library(nlme) library(emmeans) library(pairwiseAdonis) University of Copenhagen, ostaizka.aizpurua@sund.ku.dk↩︎ Aranzadi Science Society↩︎ University of Copenhagen, garazi.bideguren@sund.ku.dk↩︎ University of Copenhagen, antton.alberdi@sund.ku.dk↩︎ "],["prepare-data.html", "Chapter 2 Prepare data 2.1 Load data 2.2 Create working objects 2.3 Prepare color scheme 2.4 Prepare a phyloseq object 2.5 Wrap working objects", " Chapter 2 Prepare data 2.1 Load data Load the original data files outputted by the bioinformatic pipeline. 2.1.1 Sample metadata sample_metadata &lt;- read_tsv(&quot;data/DMB0157_metadata.tsv.gz&quot;) %&gt;% rename(sample=1) %&gt;% mutate(season = case_when( startsWith(sample, &quot;EHI01&quot;) ~ &quot;spring&quot;, startsWith(sample, &quot;EHI02&quot;) ~ &quot;autumn&quot;, TRUE ~ NA_character_ # Default case if no match )) %&gt;% mutate(type = case_when( region %in% c(&quot;Villabona&quot;,&quot;Oñati&quot;,&quot;Irun&quot;,&quot;Usurbil&quot;) ~ &quot;natural&quot;, region %in% c(&quot;Eskoriatza&quot;,&quot;Aia&quot;,&quot;Errenteria&quot;,&quot;Zarautz&quot;) ~ &quot;protected&quot;, region %in% c(&quot;Donostia&quot;,&quot;Orio&quot;) ~ &quot;urban&quot;, TRUE ~ NA_character_ # Default case if no match ))%&gt;% filter(sample_type==&quot;Faecal&quot;) 2.1.2 Read counts read_counts &lt;- read_tsv(&quot;data/DMB0157_counts.tsv.gz&quot;) %&gt;% rename(genome=1) %&gt;% select(c(&quot;genome&quot;,sample_metadata$sample)) 2.1.3 Genome taxonomy genome_metadata &lt;- read_tsv(&quot;data/DMB0157_mag_info.tsv.gz&quot;) %&gt;% rename(length=mag_size) %&gt;% semi_join(., read_counts, by = &quot;genome&quot;) %&gt;% arrange(match(genome,read_counts$genome)) 2.1.4 Genome base hits genome_coverage &lt;- read_tsv(&quot;data/DMB0157_coverage.tsv.gz&quot;) %&gt;% rename(genome=1) %&gt;% dplyr::select(c(&quot;genome&quot;,sample_metadata$sample)) %&gt;% semi_join(., genome_metadata, by = &quot;genome&quot;)%&gt;% arrange(match(genome, genome_metadata$genome)) 2.1.5 Genome tree genome_tree &lt;- read_tree(&quot;data/DMB0157.tree&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names genome_tree &lt;- keep.tip(genome_tree, tip=genome_metadata$genome) # keep only MAG tips 2.1.6 Genome annotations genome_annotations &lt;- read_tsv(&quot;data/genome_annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) 2.2 Create working objects Transform the original data files into working objects for downstream analyses. 2.2.1 Filter reads by coverage min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.2.2 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) ****Sample without genome counts**** genome_counts_filt %&gt;% select_if(~ !is.numeric(.) || sum(.) == 0)%&gt;% select(-genome) %&gt;% colnames() ****Mag without reads**** genome_counts_filt %&gt;% filter(rowSums(across(where(is.numeric)))==0) %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% rownames() 2.2.3 Filter the data genome_counts_filt &lt;- genome_counts_filt %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0)%&gt;% filter(rowSums(across(where(is.numeric)))!=0) genome_metadata &lt;- genome_metadata %&gt;% semi_join(., genome_counts_filt, by = &quot;genome&quot;) sample_metadata &lt;- sample_metadata %&gt;% filter(sample %in% colnames(genome_counts_filt)) genome_tree &lt;- keep.tip(genome_tree, tip=genome_metadata$genome) 2.2.4 Distill annotations into GIFTs genome_gifts_raw &lt;- distill(genome_annotations,GIFT_db,genomecol=2,annotcol=c(9,10,19), verbosity=F) genome_counts_filt_func &lt;- genome_counts_filt[genome_counts_filt$genome %in% rownames(genome_gifts),] genome_gifts &lt;- genome_gifts_raw[genome_counts_filt_func$genome,] genome_gifts &lt;- genome_gifts[, colSums(genome_gifts != 0) &gt; 0] 2.3 Prepare color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) location_colors &lt;- c(&quot;#444D4F&quot;,&#39;#3D5C61&#39;,&#39;#41B6C0&#39;,&#39;#90C8C5&#39;,&#39;#E5D388&#39;,&#39;#BFA366&#39;,&quot;#bb6749&quot;,&quot;#834630&quot;,&#39;#6E5244&#39;) type_colors &lt;- c(&quot;#e6c9e0&quot;,&quot;#bd70ae&quot;,&quot;#753568&quot;) season_colors &lt;- c(&quot;#009270&quot;,&quot;#ac5c4c&quot;) 2.4 Prepare a phyloseq object phylo_samples &lt;- sample_metadata %&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() #convert to phyloseq sample_data object phylo_genome &lt;- genome_counts_filt %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% as.matrix() %&gt;% tax_table() #convert to phyloseq tax_table object phylo_tree &lt;- phy_tree(genome_tree) physeq_genome &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples,phylo_tree) physeq_genome_clr &lt;- microbiome::transform(physeq_genome, &#39;clr&#39;) 2.5 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, genome_gifts_raw, genome_gifts, phylum_colors, location_colors, type_colors, physeq_genome, physeq_genome_clr, file = &quot;data/data.Rdata&quot;) "],["data-statistics.html", "Chapter 3 Data statistics 3.1 Sequencing reads statistics 3.2 DNA fractions 3.3 Recovered microbial fraction", " Chapter 3 Data statistics load(&quot;data/data.Rdata&quot;) 3.1 Sequencing reads statistics sample_metadata %&gt;% summarise(Total=sum(reads_post_fastp * 150 / 1000000000) %&gt;% round(2), mean=mean(reads_post_fastp * 150 / 1000000000) %&gt;% round(2), sd=sd(reads_post_fastp * 150 / 1000000000) %&gt;% round(2)) %&gt;% unite(&quot;Average&quot;,mean, sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% tt() tinytable_cke736cmv6kfa1jgoeu8 .table td.tinytable_css_5qwmpeqipkcn4a0i35qa, .table th.tinytable_css_5qwmpeqipkcn4a0i35qa { border-bottom: solid 0.1em #d3d8dc; } Total Average 398.22 4.33 ± 1.45 3.2 DNA fractions sequence_fractions &lt;- read_counts %&gt;% pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;value&quot;) %&gt;% group_by(sample) %&gt;% summarise(mags = sum(value)) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% dplyr::select(sample,mags,metagenomic_bases,host_bases,bases_lost_fastp_percent) %&gt;% mutate(mags_bases = mags*146) %&gt;% mutate(lowqual_bases = ((metagenomic_bases+host_bases)/(1-bases_lost_fastp_percent))-(metagenomic_bases+host_bases)) %&gt;% mutate(unmapped_bases = metagenomic_bases - mags_bases) %&gt;% mutate(unmapped_bases = ifelse(unmapped_bases &lt; 0, 0, unmapped_bases)) %&gt;% dplyr::select(sample, lowqual_bases, host_bases, unmapped_bases, mags_bases) sequence_fractions %&gt;% mutate_at(vars(-sample), ~./1000000000) %&gt;% rename(&quot;Sample&quot;=1, &quot;Low quality&quot;=2, &quot;Mapped to host&quot;=3, &quot;Unmapped&quot;=4, &quot;Mapped to MAGs&quot;=5) %&gt;% tt() tinytable_1702o9fvltg748bknlei .table td.tinytable_css_eajyob5939s4e324oxur, .table th.tinytable_css_eajyob5939s4e324oxur { border-bottom: solid 0.1em #d3d8dc; } Sample Low quality Mapped to host Unmapped Mapped to MAGs EHI01436 0.10323450 0.002155664 1.9223563 0.14057376 EHI01437 0.14688974 0.001776019 1.3951997 3.75777530 EHI01438 0.11341031 0.001443667 1.0781908 2.93324556 EHI01439 0.09710566 0.000553848 0.7633965 2.39854085 EHI01440 0.08161119 0.000412702 0.6588022 2.80294070 EHI01441 0.09842650 0.001532668 0.9259464 2.26467053 EHI01442 0.09044909 0.003948668 1.3099571 1.91223033 EHI01443 0.08349080 0.001670709 0.7703155 1.97118600 EHI01444 0.15356698 0.008828658 1.8761546 2.25276496 EHI01445 0.24321310 0.000493809 0.6808145 2.86800064 EHI01447 0.07308100 0.000928745 0.5335369 1.86430335 EHI01448 0.16654049 0.001447619 1.2343569 4.00302946 EHI01449 0.08086772 0.000712056 1.9015472 0.56772173 EHI01450 0.09513485 0.000808493 0.6801877 2.40271908 EHI01451 0.15486528 0.006054971 1.2002374 3.09457074 EHI01584 0.31311426 0.001124632 1.1945509 4.46459065 EHI01585 0.43461750 0.010705116 4.7173126 5.56319787 EHI01610 0.09609182 0.002231717 0.7319288 2.22137350 EHI01611 0.12854248 0.002113926 2.0768251 1.11056915 EHI01612 0.09445979 0.000396947 0.8434826 2.27477884 EHI01613 0.11771235 0.003535185 0.8236243 2.34411760 EHI01616 0.13311594 0.000846441 1.0689190 2.28105071 EHI01617 0.10496582 0.000600034 0.7624687 1.66612338 EHI01618 0.15796519 0.001938639 1.4700412 1.45306500 EHI01619 0.21423836 0.001610432 2.1137921 2.57152267 EHI01620 0.15125219 0.002882104 1.5452853 1.20720363 EHI01621 0.14437434 0.000908440 0.8938030 2.84473642 EHI01623 0.13905131 0.000111578 0.8158237 2.89356495 EHI01625 0.13457413 0.004361014 0.9973074 3.14405452 EHI01627 0.11510846 0.000652453 0.8491846 2.40277675 EHI01628 0.13073679 0.002521283 1.2403353 1.86084796 EHI01631 0.09932800 0.001705834 0.8044096 1.77531722 EHI02085 0.57919563 0.018462021 2.6410532 1.29059649 EHI02095 0.48834211 0.013513952 3.4049831 3.18378200 EHI02104 0.53195157 0.007010599 2.7354830 0.81316072 EHI02109 1.28374828 0.008847543 4.9223937 0.24490536 EHI02115 0.92901178 0.003428911 3.9141515 0.19065498 EHI02128 0.96743572 0.007418441 4.7627289 0.16898799 EHI02571 0.13287769 0.000830065 1.3326271 2.42337662 EHI02572 0.23097718 0.001104376 4.2180228 0.66197962 EHI02573 0.23772138 0.000919831 1.4201215 2.90177102 EHI02574 0.18641515 0.001105944 1.2909807 2.51445595 EHI02575 0.16800006 0.000451116 0.7701716 3.10908854 EHI02576 0.27054446 0.001466596 1.2373298 4.37179582 EHI02577 0.13875010 0.000159264 0.6656173 3.11920576 EHI02578 0.18840997 0.000370817 0.9281657 3.79342865 EHI02579 0.17040671 0.000316117 1.1304582 2.89912711 EHI02580 0.14585212 0.002285096 1.1005491 2.55888783 EHI02581 0.31534501 0.004222759 1.1406810 3.45948869 EHI02583 0.19024490 0.002688647 2.5186672 1.41498835 EHI02586 0.16808497 0.000634686 1.2191413 2.86012073 EHI02588 0.22724830 0.000620576 1.3616533 3.96253913 EHI02589 0.17868765 0.001172553 1.3032228 2.88262020 EHI02590 NA NA NA 0.01003195 EHI02591 0.24672078 0.005870858 5.1327559 0.11609000 EHI02593 0.28535188 0.001047289 1.7734727 3.51223396 EHI02594 0.14799113 0.001254245 2.2455458 0.78283346 EHI02595 0.17594927 0.000390443 0.8947388 2.65116816 EHI02596 0.19552510 0.000402096 0.8853602 3.90930111 EHI02597 0.16997179 0.003302624 1.8718822 2.27029869 EHI02599 0.24535794 0.002994709 1.6290468 3.25617683 EHI02600 0.16539330 0.000372951 2.5885522 0.78914504 EHI02601 0.20440033 0.000546487 1.2005389 3.29478799 EHI02604 0.13350290 0.000033019 0.5459000 2.24831357 EHI02605 0.23336073 0.000578456 0.7867636 4.00240210 EHI02606 0.21269906 0.000840830 0.9069484 4.52838330 EHI02608 0.16608092 0.000868246 1.2007537 2.21539480 EHI02609 0.18162303 0.000620091 1.2032065 3.45803993 EHI02610 0.18029349 0.000359149 1.0625221 3.04269811 EHI02611 0.14935861 0.000280047 0.9678059 2.31031466 EHI02613 0.13705908 0.001431597 0.6736314 2.75385288 EHI02614 0.18096790 0.000783821 1.1284081 2.27501989 EHI02616 0.14713007 0.000239190 0.5108695 2.35465880 EHI02618 0.17147141 0.000675857 0.9085123 2.63753628 EHI02620 0.15234767 0.000669926 0.8504433 2.26631084 EHI02621 0.18176981 0.000880545 2.0099358 2.33263631 EHI02622 0.20546598 0.000285185 1.1929782 3.39019490 EHI02623 0.14304619 0.000230072 0.5719310 2.72557253 EHI02626 0.20016240 0.000600853 0.9178175 2.61054132 EHI02627 0.16663385 0.001572916 2.4785902 0.65110510 EHI02628 0.14066292 0.000620136 0.5260281 1.86407529 EHI02629 0.15442873 0.001035638 1.3085973 2.62663840 EHI02631 0.28751065 0.003383238 4.2392404 1.34326512 EHI02634 0.27934868 0.001091891 2.4750414 3.24088595 EHI02635 0.30611130 0.001240215 1.3218018 4.73514062 EHI02636 0.33858819 0.000408731 1.2870087 6.26143207 EHI02637 0.25767107 0.000313024 1.3477516 5.69477117 EHI02638 0.26777696 0.001869868 1.9786471 3.30618562 EHI02640 0.20192954 0.002568987 1.1840044 3.29878050 EHI02641 0.53193661 0.006973676 3.8010965 4.56692336 EHI02642 0.35162886 0.000765507 5.4173877 1.45875812 EHI02643 0.33426863 0.001865962 5.7701855 1.11141741 EHI02646 0.35059944 0.008032777 6.5018324 1.15256692 sequence_fractions %&gt;% mutate_at(vars(-sample), ~./1000000000) %&gt;% rename(&quot;Sample&quot;=1, &quot;Low quality&quot;=2, &quot;Mapped to host&quot;=3, &quot;Unmapped&quot;=4, &quot;Mapped to MAGs&quot;=5) %&gt;% summarise(across(where(is.numeric), mean, na.rm = TRUE)) %&gt;% tt() tinytable_v377ilvaiwzz2ovzbs6w .table td.tinytable_css_shyejeqb72icskufs3vi, .table th.tinytable_css_shyejeqb72icskufs3vi { border-bottom: solid 0.1em #d3d8dc; } Low quality Mapped to host Unmapped Mapped to MAGs 0.2261139 0.002232012 1.70865 2.507462 sequence_fractions %&gt;% pivot_longer(!sample, names_to = &quot;fraction&quot;, values_to = &quot;value&quot;) %&gt;% mutate(value = value / 1000000000) %&gt;% mutate(fraction = factor(fraction, levels = c(&quot;lowqual_bases&quot;,&quot;host_bases&quot;,&quot;unmapped_bases&quot;,&quot;mags_bases&quot;))) %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% ggplot(., aes(x = sample, y = value, fill=fraction)) + geom_bar(position=&quot;stack&quot;, stat = &quot;identity&quot;) + scale_fill_manual(name=&quot;Sequence type&quot;, breaks=c(&quot;lowqual_bases&quot;,&quot;host_bases&quot;,&quot;unmapped_bases&quot;,&quot;mags_bases&quot;), labels=c(&quot;Low quality&quot;,&quot;Mapped to host&quot;,&quot;Unmapped&quot;,&quot;Mapped to MAGs&quot;), values=c(&quot;#CCCCCC&quot;, &quot;#bcdee1&quot;, &quot;#d8b8a3&quot;,&quot;#93655c&quot;))+ facet_grid(~region, scales=&quot;free&quot;)+ labs(x = &quot;Samples&quot;, y = &quot;Amount of data (GB)&quot;) + theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size=6),legend.position = &quot;bottom&quot;) 3.3 Recovered microbial fraction singlem_table &lt;- sequence_fractions %&gt;% mutate(mags_proportion = round((mags_bases / (mags_bases + unmapped_bases))*100,2)) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% mutate(singlem_proportion = round(singlem_fraction*100,2)) %&gt;% dplyr::select(sample,mags_proportion,singlem_proportion) %&gt;% mutate(mags_proportion = ifelse(singlem_proportion == 0, 0, mags_proportion)) %&gt;% #convert zeros to NA mutate(singlem_proportion = ifelse(singlem_proportion == 0, NA, singlem_proportion)) %&gt;% #convert zeros to NA mutate(singlem_proportion = ifelse(singlem_proportion &lt; mags_proportion, NA, singlem_proportion)) %&gt;% #if singlem is smaller, then NA, to simplify plot mutate(singlem_proportion = ifelse(singlem_proportion &gt; 100, 100, singlem_proportion)) #simplify singlem_table %&gt;% pivot_longer(!sample, names_to = &quot;proportion&quot;, values_to = &quot;value&quot;) %&gt;% mutate(proportion = factor(proportion, levels = c(&quot;mags_proportion&quot;,&quot;singlem_proportion&quot;))) %&gt;% ggplot(., aes(x = value, y = sample, color=proportion)) + geom_line(aes(group = sample), color = &quot;#f8a538&quot;) + geom_point() + scale_color_manual(name=&quot;Proportion&quot;, breaks=c(&quot;mags_proportion&quot;,&quot;singlem_proportion&quot;), labels=c(&quot;Recovered&quot;,&quot;Estimated&quot;), values=c(&quot;#52e1e8&quot;, &quot;#876b53&quot;))+ theme_classic() + labs(y = &quot;Samples&quot;, x = &quot;Prokaryotic fraction (%)&quot;) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size=6),legend.position = &quot;right&quot;) damr &lt;- singlem_table %&gt;% mutate(damr=ifelse(is.na(singlem_proportion),100,mags_proportion/singlem_proportion*100)) %&gt;% dplyr::select(sample,damr) damr %&gt;% tt() tinytable_qpznwrvm3ovv8nxv184n .table td.tinytable_css_jm5ycnxszl9n2ol5w5qx, .table th.tinytable_css_jm5ycnxszl9n2ol5w5qx { border-bottom: solid 0.1em #d3d8dc; } sample damrdamr %&gt;% filter(damr&gt;95) %&gt;% nrow() [1] 73 damr %&gt;% summarise(mean=mean(damr),sd=sd(damr)) %&gt;% tt() tinytable_34znmjjd144q992v7rcx .table td.tinytable_css_kgz0q732hknoco1fnuh8, .table th.tinytable_css_kgz0q732hknoco1fnuh8 { border-bottom: solid 0.1em #d3d8dc; } mean sd 88.21507 25.46559 "],["mag-catalogue.html", "Chapter 4 MAG catalogue 4.1 Genome phylogeny 4.2 Taxonomy overview 4.3 Genome quality 4.4 Functional overview 4.5 Functional ordination", " Chapter 4 MAG catalogue load(&quot;data/data.Rdata&quot;) 4.1 Genome phylogeny # Generate the phylum color heatmap phylum_heatmap &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% dplyr::select(genome,phylum) %&gt;% mutate(phylum = factor(phylum, levels = unique(phylum))) %&gt;% column_to_rownames(var = &quot;genome&quot;) # Generate basal tree circular_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% # extend to ultrametric for the sake of visualisation ggtree(., layout=&quot;fan&quot;, open.angle=10, size=0.5) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** # Add phylum ring circular_tree &lt;- gheatmap(circular_tree, phylum_heatmap, offset=0.55, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + geom_tiplab2(size=1, hjust=-0.1) + theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) # Flush color scale to enable a new color scheme in the next ring circular_tree &lt;- circular_tree + new_scale_fill() # Add completeness ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_gradient(low = &quot;#d1f4ba&quot;, high = &quot;#f4baba&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=completeness, y=genome, fill=contamination), offset = 0.55, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add genome-size ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_manual(values = &quot;#cccccc&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=length, y=genome), offset = 0.05, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add text circular_tree &lt;- circular_tree + annotate(&#39;text&#39;, x=3.5, y=0, label=&#39; Phylum&#39;, family=&#39;arial&#39;, size=3.5) + annotate(&#39;text&#39;, x=4.5, y=0, label=&#39; Genome quality&#39;, family=&#39;arial&#39;, size=3.5) + annotate(&#39;text&#39;, x=5.0, y=0, label=&#39; Genome size&#39;, family=&#39;arial&#39;, size=3.5) #Plot circular tree circular_tree %&gt;% open_tree(30) %&gt;% rotate_tree(90) 4.2 Taxonomy overview Number of MAGs 1034 Domains genome_metadata %&gt;% group_by(domain) %&gt;% summarise(mag_n=n()) %&gt;% arrange(-mag_n) %&gt;% tt() tinytable_8nwcmfo034pc9c1fv6pm .table td.tinytable_css_9qc467yaqql0gikmaigo, .table th.tinytable_css_9qc467yaqql0gikmaigo { border-bottom: solid 0.1em #d3d8dc; } domain mag_n d__Bacteria 1025 d__Archaea 9 Archaea genome_metadata %&gt;% filter(domain == &quot;d__Archaea&quot;) %&gt;% group_by(phylum) %&gt;% summarise(mag_n=n()) %&gt;% arrange(-mag_n) %&gt;% tt() tinytable_qc5jttjdwfkyioj6au0s .table td.tinytable_css_keepjfnh02azirly6pwb, .table th.tinytable_css_keepjfnh02azirly6pwb { border-bottom: solid 0.1em #d3d8dc; } phylum mag_n p__Halobacteriota 4 p__Thermoproteota 2 p__Iainarchaeota 1 p__Methanobacteriota 1 p__Nanoarchaeota 1 Bacteria genome_metadata %&gt;% filter(domain == &quot;d__Bacteria&quot;) %&gt;% group_by(phylum) %&gt;% summarise(mag_n=n()) %&gt;% arrange(-mag_n) %&gt;% tt() tinytable_9pjh8hgee4dp15rzb744 .table td.tinytable_css_15pr7rw2qrkttr9jy1aj, .table th.tinytable_css_15pr7rw2qrkttr9jy1aj { border-bottom: solid 0.1em #d3d8dc; } phylum mag_n p__Bacteroidota 369 p__Bacillota_A 251 p__Pseudomonadota 156 p__Bacillota 54 p__Desulfobacterota 37 p__Verrucomicrobiota 29 p__Patescibacteria 27 p__Cyanobacteriota 23 p__Fusobacteriota 12 p__Chloroflexota 10 p__Bacillota_C 9 p__Deferribacterota 8 p__Acidobacteriota 6 p__Bacillota_B 5 p__Desulfobacterota_F 5 p__Actinomycetota 4 p__Planctomycetota 4 p__Spirochaetota 4 p__Campylobacterota 3 p__Myxococcota 2 p__ 1 p__Chlamydiota 1 p__Desulfobacterota_G 1 p__Fibrobacterota 1 p__J088 1 p__JAKLEM01 1 p__Omnitrophota 1 Number of MAGs without phyla-level annotation 1 # A tibble: 1 × 2 completeness contamination &lt;dbl&gt; &lt;dbl&gt; 1 50.1 3.44 Number of MAGs without class-level annotation 2 # A tibble: 1 × 2 completeness contamination &lt;dbl&gt; &lt;dbl&gt; 1 57.6 2.37 Number of MAGs without order-level annotation 4 # A tibble: 1 × 2 completeness contamination &lt;dbl&gt; &lt;dbl&gt; 1 76.2 1.21 Number of MAGs without family-level annotation 32 # A tibble: 1 × 2 completeness contamination &lt;dbl&gt; &lt;dbl&gt; 1 83.1 1.97 Number of MAGs without genus-level annotation 276 Percentage of MAGs without species-level annotation 26.69246 Number of MAGs without species-level annotation 978 Percentage of MAGs without species-level annotation 94.58414 Number of MAGs with species-level annotation 56 4.2.1 MAGs shared across locations 4.3 Genome quality 4.3.1 Mean completeness and contamination genome_metadata %&gt;% summarise(completeness_mean=mean(completeness) %&gt;% round(2) %&gt;% as.character(), completeness_sd=sd(completeness) %&gt;% round(2) %&gt;% as.character(), contamination_mean=mean(contamination) %&gt;% round(2), contamination_sd=sd(contamination) %&gt;% round(2)) %&gt;% unite(&quot;Completeness&quot;,completeness_mean, completeness_sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% unite(&quot;Contamination&quot;,contamination_mean, contamination_sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% tt() tinytable_usteap7lfu3ijwg5h3iq .table td.tinytable_css_7vuwb5f3uvp52kzecyad, .table th.tinytable_css_7vuwb5f3uvp52kzecyad { border-bottom: solid 0.1em #d3d8dc; } Completeness Contamination 82.77 ± 17.28 1.91 ± 2.36 4.3.2 Medium-quality Mags (&gt;70% completeness, &lt;10% contamination) genome_metadata %&gt;% filter(completeness &gt;=70 &amp; contamination &lt;=10) %&gt;% nrow() [1] 750 4.3.3 High-quality Mags (&gt;95% completeness, &lt;5% contamination) genome_metadata %&gt;% filter(completeness &gt;=95 &amp; contamination &lt;=5) %&gt;% nrow() [1] 404 #Generate quality biplot genome_biplot &lt;- genome_metadata %&gt;% dplyr::select(c(genome,domain,phylum,completeness,contamination,length)) %&gt;% arrange(match(genome, rev(genome_tree$tip.label))) %&gt;% #sort MAGs according to phylogenetic tree ggplot(aes(x=completeness,y=contamination,size=length,color=phylum)) + geom_point(alpha=0.7) + ylim(c(10,0)) + scale_color_manual(values=phylum_colors) + labs(y= &quot;Contamination&quot;, x = &quot;Completeness&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;) #Generate contamination boxplot genome_contamination &lt;- genome_metadata %&gt;% ggplot(aes(y=contamination)) + ylim(c(10,0)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0.40, 0),&quot;inches&quot;)) #add bottom-margin (top, right, bottom, left) #Generate completeness boxplot genome_completeness &lt;- genome_metadata %&gt;% ggplot(aes(x=completeness)) + xlim(c(50,100)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0, 0.50),&quot;inches&quot;)) #add left-margin (top, right, bottom, left) #Render composite figure grid.arrange(grobs = list(genome_completeness,genome_biplot,genome_contamination), layout_matrix = rbind(c(1,1,1,1,1,1,1,1,1,1,1,4), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3))) 4.4 Functional overview # Aggregate basal GIFT into elements function_table &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) # Generate basal tree function_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% ggtree(., size = 0.3) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** #Add phylum colors next to the tree tips function_tree &lt;- gheatmap(function_tree, phylum_heatmap, offset=0, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + labs(fill=&quot;Phylum&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() #Add functions heatmap function_tree &lt;- gheatmap(function_tree, function_table, offset=0.5, width=3.5, colnames=FALSE) + vexpand(.08) + coord_cartesian(clip = &quot;off&quot;) + scale_fill_gradient(low = &quot;#f4f4f4&quot;, high = &quot;steelblue&quot;, na.value=&quot;white&quot;) + labs(fill=&quot;GIFT&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() # Add completeness barplots function_tree &lt;- function_tree + geom_fruit(data=genome_metadata, geom=geom_bar, grid.params=list(axis=&quot;x&quot;, text.size=2, nbreak = 1), axis.params=list(vline=TRUE), mapping = aes(x=length, y=genome, fill=completeness), offset = 3.8, orientation=&quot;y&quot;, stat=&quot;identity&quot;) + scale_fill_gradient(low = &quot;#cf8888&quot;, high = &quot;#a2cc87&quot;) + labs(fill=&quot;Genome\\ncompleteness&quot;) function_tree 4.5 Functional ordination # Generate the tSNE ordination tSNE_function &lt;- Rtsne(X=function_table, dims = 2, check_duplicates = FALSE) # Plot the ordination function_ordination &lt;- tSNE_function$Y %&gt;% as.data.frame() %&gt;% mutate(genome=rownames(function_table)) %&gt;% inner_join(genome_metadata, by=&quot;genome&quot;) %&gt;% rename(tSNE1=&quot;V1&quot;, tSNE2=&quot;V2&quot;) %&gt;% dplyr::select(genome,phylum,tSNE1,tSNE2, length) %&gt;% ggplot(aes(x = tSNE1, y = tSNE2, color = phylum, size=length))+ geom_point(shape=16, alpha=0.7) + scale_color_manual(values=phylum_colors) + theme_minimal() + labs(color=&quot;Phylum&quot;, size=&quot;Genome size&quot;) + guides(color = guide_legend(override.aes = list(size = 5))) # enlarge Phylum dots in legend function_ordination "],["community-composition.html", "Chapter 5 Community composition 5.1 Taxonomy overview", " Chapter 5 Community composition load(&quot;data/data.Rdata&quot;) 5.1 Taxonomy overview Mean percentage of Bacteria and Archaea in the samples domain_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% group_by(sample,domain) %&gt;% summarise(relabun=sum(count)) domain_summary %&gt;% group_by(domain) %&gt;% summarise(mean=mean(relabun, na.rm=T)*100,sd=sd(relabun, na.rm=T)*100) %&gt;% arrange(-mean) %&gt;% tt() tinytable_qbuwcgmaloqnrvrfbsbz .table td.tinytable_css_kx5gjkzsbkzg2mxwpu1x, .table th.tinytable_css_kx5gjkzsbkzg2mxwpu1x { border-bottom: solid 0.1em #d3d8dc; } domain mean sd d__Bacteria 99.5141306 1.71795 d__Archaea 0.4858694 1.71795 #ggsave(&quot;figures/mtcars.png&quot;, width = 10, height = 6) genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata filter(count &gt; 0) %&gt;% #filter 0 counts # filter(!region %in% c(&quot;Eskoriatza&quot;,&quot;Villabona&quot;)) %&gt;% mutate(season=factor(season,levels=c(&quot;spring&quot;,&quot;autumn&quot;))) %&gt;% ggplot(., aes(x=sample,y=count, fill=phylum, group=phylum)) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1, show.legend = FALSE) + #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + facet_nested(. ~ type + region+season, scales=&quot;free&quot;) + #facet per day and treatment guides(fill = guide_legend(ncol = 2)) + theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), panel.border = element_rect(colour = &quot;black&quot;, fill = NA), strip.background = element_rect(fill = &quot;white&quot;, color = &quot;black&quot;), strip.text = element_text(size = 8, lineheight = 0.6)) + labs(fill=&quot;Phylum&quot;,y = &quot;Relative abundance&quot;,x=&quot;Samples&quot;) Number of bacteria phyla [1] 27 Bacteria phyla in natural ponds phylum EHA02325_bin.10 p__Bacillota_A EHA02325_bin.13 p__Pseudomonadota EHA02325_bin.39 p__Bacteroidota EHA02329_bin.18 p__Verrucomicrobiota EHA02330_bin.9 p__Cyanobacteriota EHA02331_bin.2 p__Bacillota EHA02336_bin.41 p__Bacillota_C EHA02338_bin.7 p__Desulfobacterota EHA02341_bin.14 p__Spirochaetota EHA02343_bin.12 p__Acidobacteriota EHA02355_bin.3 p__Bacillota_B EHA02388_bin.85 p__Deferribacterota EHA02392_bin.43 p__Chloroflexota EHA02398_bin.48 p__Fusobacteriota EHA02398_bin.53 p__Campylobacterota EHA04294_bin.16 p__Desulfobacterota_F EHA04302_bin.12 p__Patescibacteria EHA04302_bin.18 p__J088 EHA04321_bin.47 p__Planctomycetota EHA04321_bin.50 p__Omnitrophota EHA04321_bin.55 p__Chlamydiota EHA04321_bin.69 p__Actinomycetota EHA04337_bin.58 p__Desulfobacterota_G EHA04343_bin.186 p__ Bacteria phyla in protected ponds phylum EHA02325_bin.10 p__Bacillota_A EHA02325_bin.13 p__Pseudomonadota EHA02325_bin.19 p__Bacteroidota EHA02329_bin.18 p__Verrucomicrobiota EHA02330_bin.9 p__Cyanobacteriota EHA02331_bin.2 p__Bacillota EHA02336_bin.41 p__Bacillota_C EHA02338_bin.7 p__Desulfobacterota EHA02355_bin.3 p__Bacillota_B EHA02374_bin.97 p__Fusobacteriota EHA02388_bin.64 p__Chloroflexota EHA02388_bin.85 p__Deferribacterota EHA04305_bin.59 p__Spirochaetota EHA04352_bin.62 p__Campylobacterota Bacteria phyla in urban ponds phylum EHA02325_bin.10 p__Bacillota_A EHA02325_bin.13 p__Pseudomonadota EHA02325_bin.39 p__Bacteroidota EHA02329_bin.18 p__Verrucomicrobiota EHA02331_bin.2 p__Bacillota EHA02336_bin.41 p__Bacillota_C EHA02338_bin.7 p__Desulfobacterota EHA02340_bin.1 p__Cyanobacteriota EHA02341_bin.14 p__Spirochaetota EHA02341_bin.28 p__Fusobacteriota EHA02355_bin.3 p__Bacillota_B EHA02378_bin.75 p__Deferribacterota EHA02398_bin.53 p__Campylobacterota EHA04304_bin.13 p__JAKLEM01 EHA04304_bin.1 p__Patescibacteria EHA04304_bin.21 p__Chloroflexota EHA04321_bin.69 p__Actinomycetota EHA04337_bin.116 p__Acidobacteriota EHA04337_bin.35 p__Fibrobacterota EHA04337_bin.58 p__Desulfobacterota_G EHA04337_bin.88 p__Myxococcota EHA04343_bin.186 p__ Number of Archaea phyla [1] 5 Archaea phyla in natural ponds phylum EHA02392_bin.10 p__Methanobacteriota EHA04302_bin.11 p__Nanoarchaeota EHA04304_bin.19 p__Halobacteriota EHA04321_bin.111 p__Iainarchaeota EHA04343_bin.4 p__Thermoproteota Archaea phyla in protected ponds phylum EHA04312_bin.192 p__Halobacteriota EHA04352_bin.100 p__Thermoproteota Archaea phyla in urban ponds phylum EHA02392_bin.10 p__Methanobacteriota EHA04304_bin.19 p__Halobacteriota 5.1.1 Phylum relative abundances phylum_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% group_by(sample,phylum,type, season) %&gt;% summarise(relabun=sum(count)) phylum_arrange &lt;- phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(mean=mean(relabun)) %&gt;% arrange(-mean) %&gt;% dplyr::select(phylum) %&gt;% pull() phylum_summary %&gt;% filter(phylum %in% phylum_arrange) %&gt;% mutate(phylum=factor(phylum,levels=rev(phylum_arrange))) %&gt;% ggplot(aes(x=relabun, y=phylum, group=phylum, color=phylum)) + scale_color_manual(values=phylum_colors[rev(phylum_arrange)]) + geom_jitter(alpha=0.5, show.legend = FALSE) + theme_minimal() + theme(legend.position=&quot;none&quot;) + labs(y=&quot;Phylum&quot;,x=&quot;Relative abundance&quot;) 5.1.1.1 Per pond phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), natural_mean=mean(relabun[type==&quot;natural&quot;]*100, na.rm=T), natural_sd=sd(relabun[type==&quot;natural&quot;]*100, na.rm=T), protected_mean=mean(relabun[type==&quot;protected&quot;]*100, na.rm=T), protected_sd=sd(relabun[type==&quot;protected&quot;]*100, na.rm=T), urban_mean=mean(relabun[type==&quot;urban&quot;]*100, na.rm=T), urban_sd=sd(relabun[type==&quot;urban&quot;]*100, na.rm=T)) %&gt;% mutate(total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2)), natural=str_c(round(natural_mean,2),&quot;±&quot;,round(natural_sd,2)), protected=str_c(round(protected_mean,2),&quot;±&quot;,round(protected_sd,2)), urban=str_c(round(urban_mean,2),&quot;±&quot;,round(urban_sd,2))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(phylum,total,natural,protected,urban) %&gt;% tt() tinytable_bu02c9llr54ihbizbj9y .table td.tinytable_css_b7yhh9hhssm6dkacv7vp, .table th.tinytable_css_b7yhh9hhssm6dkacv7vp { border-bottom: solid 0.1em #d3d8dc; } phylum total natural protected urban p__Bacteroidota 53.53±20.47 50.72±21.6 57.47±21.28 53.47±17.18 p__Bacillota_A 15.07±11.48 11.93±9.38 19.02±15.51 15.52±6.64 p__Pseudomonadota 13.1±18.44 15.4±21.12 11.62±18.14 10.95±13.43 p__Bacillota 5.62±7.54 7.41±9.62 3.76±4.74 4.85±5.6 p__Verrucomicrobiota 4.16±5.07 5.14±5.61 3.09±4.44 3.82±4.69 p__Desulfobacterota 2.11±2.92 1.51±1.68 1.51±1.92 3.91±4.59 p__Cyanobacteriota 1.4±6.77 2.03±9.69 1.08±4.04 0.69±0.83 p__Chloroflexota 1.04±3.88 1.23±2.97 0.69±3.69 1.13±5.38 p__Fusobacteriota 0.52±1.23 0.26±0.51 0.45±1.36 1.05±1.74 p__Myxococcota 0.5±4.84 0±0 0±0 2.02±9.68 p__Bacillota_C 0.47±0.77 0.39±0.72 0.71±1.04 0.31±0.27 p__Patescibacteria 0.37±1.58 0.81±2.31 0±0 0.1±0.46 p__Acidobacteriota 0.34±1.44 0.58±2 0±0 0.33±1.11 p__Deferribacterota 0.31±0.9 0.52±1.33 0.12±0.21 0.17±0.24 p__Bacillota_B 0.24±0.36 0.08±0.22 0.32±0.31 0.43±0.48 p__Desulfobacterota_F 0.23±1.04 0.53±1.54 0±0 0±0 p__Halobacteriota 0.21±1.41 0.09±0.27 0.04±0.18 0.62±2.8 p__Planctomycetota 0.17±1.16 0.39±1.75 0±0 0±0 p__Thermoproteota 0.15±0.55 0.28±0.78 0.1±0.29 0±0 p__Nanoarchaeota 0.07±0.65 0.17±0.99 0±0 0±0 p__Spirochaetota 0.07±0.31 0.02±0.07 0.02±0.09 0.24±0.59 p__Campylobacterota 0.06±0.3 0.1±0.43 0.01±0.03 0.07±0.22 p__Methanobacteriota 0.04±0.28 0.09±0.42 0±0 0.01±0.05 p__Actinomycetota 0.04±0.2 0.08±0.3 0±0 0.01±0.02 p__Fibrobacterota 0.04±0.35 0±0 0±0 0.14±0.69 p__ 0.04±0.29 0.07±0.44 0±0 0.02±0.09 p__Chlamydiota 0.03±0.14 0.06±0.21 0±0 0±0 p__Desulfobacterota_G 0.03±0.2 0.01±0.08 0±0 0.08±0.39 p__J088 0.02±0.11 0.05±0.17 0±0 0±0 p__Iainarchaeota 0.01±0.1 0.03±0.15 0±0 0±0 p__JAKLEM01 0.01±0.11 0±0 0±0 0.05±0.22 p__Omnitrophota 0.01±0.05 0.02±0.07 0±0 0±0 phylum_summary %&gt;% filter(phylum %in% phylum_arrange) %&gt;% mutate(phylum=factor(phylum,levels=rev(phylum_arrange))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=phylum, group=phylum, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5, show.legend = FALSE) + facet_grid(.~type)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) 5.1.1.2 Per pond phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), spring_mean=mean(relabun[season==&quot;spring&quot;]*100, na.rm=T), spring_sd=sd(relabun[season==&quot;spring&quot;]*100, na.rm=T), autumn_mean=mean(relabun[season==&quot;autumn&quot;]*100, na.rm=T), autumn_sd=sd(relabun[season==&quot;autumn&quot;]*100, na.rm=T)) %&gt;% mutate(total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2)), spring=str_c(round(spring_mean,2),&quot;±&quot;,round(spring_sd,2)), autumn=str_c(round(autumn_mean,2),&quot;±&quot;,round(autumn_sd,2))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(phylum,total,spring,autumn) %&gt;% tt() tinytable_3supkc5ah35bjpvqt5dt .table td.tinytable_css_jibt7sw4utvcfbzqvq2h, .table th.tinytable_css_jibt7sw4utvcfbzqvq2h { border-bottom: solid 0.1em #d3d8dc; } phylum total spring autumn p__Bacteroidota 53.53±20.47 49.04±16.42 55.93±22.09 p__Bacillota_A 15.07±11.48 17.89±9.58 13.56±12.18 p__Pseudomonadota 13.1±18.44 15.38±16.87 11.89±19.25 p__Bacillota 5.62±7.54 5.54±5.29 5.66±8.54 p__Verrucomicrobiota 4.16±5.07 5.09±5.05 3.67±5.05 p__Desulfobacterota 2.11±2.92 2.64±2.09 1.83±3.26 p__Cyanobacteriota 1.4±6.77 1.34±3.83 1.43±7.93 p__Chloroflexota 1.04±3.88 1.11±4.11 1±3.78 p__Fusobacteriota 0.52±1.23 0.31±0.53 0.62±1.47 p__Myxococcota 0.5±4.84 0±0 0.77±6 p__Bacillota_C 0.47±0.77 0.43±0.77 0.49±0.78 p__Patescibacteria 0.37±1.58 0±0 0.57±1.93 p__Acidobacteriota 0.34±1.44 0.39±1.58 0.31±1.37 p__Deferribacterota 0.31±0.9 0.21±0.23 0.36±1.11 p__Bacillota_B 0.24±0.36 0.29±0.34 0.22±0.37 p__Desulfobacterota_F 0.23±1.04 0.08±0.37 0.31±1.26 p__Halobacteriota 0.21±1.41 0.02±0.05 0.31±1.75 p__Planctomycetota 0.17±1.16 0±0 0.26±1.44 p__Thermoproteota 0.15±0.55 0.06±0.25 0.2±0.65 p__Nanoarchaeota 0.07±0.65 0±0 0.11±0.81 p__Spirochaetota 0.07±0.31 0.13±0.43 0.04±0.22 p__Campylobacterota 0.06±0.3 0.04±0.13 0.08±0.36 p__Methanobacteriota 0.04±0.28 0.03±0.11 0.05±0.34 p__Actinomycetota 0.04±0.2 0±0 0.06±0.24 p__Fibrobacterota 0.04±0.35 0±0 0.06±0.43 p__ 0.04±0.29 0±0 0.05±0.36 p__Chlamydiota 0.03±0.14 0±0 0.04±0.18 p__Desulfobacterota_G 0.03±0.2 0±0 0.04±0.25 p__J088 0.02±0.11 0±0 0.03±0.14 p__Iainarchaeota 0.01±0.1 0±0 0.02±0.12 p__JAKLEM01 0.01±0.11 0±0 0.02±0.14 p__Omnitrophota 0.01±0.05 0±0 0.01±0.06 phylum_summary %&gt;% filter(phylum %in% phylum_arrange) %&gt;% mutate(phylum=factor(phylum,levels=rev(phylum_arrange))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=phylum, group=phylum, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5, show.legend = FALSE) + facet_grid(.~season)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) 5.1.2 Family relative abundances family_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,family, type, region, season) %&gt;% summarise(relabun=sum(count)) family_summary %&gt;% left_join(genome_metadata %&gt;% dplyr::select(family,phylum) %&gt;% unique(),by=join_by(family==family)) %&gt;% # left_join(sample_metadata,by=join_by(sample==sample)) %&gt;% filter(family %in% family_arrange[1:20]) %&gt;% mutate(family=factor(family,levels=rev(family_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=family, group=family, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) 5.1.2.1 Per pond family_summary %&gt;% group_by(family) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), natural_mean=mean(relabun[type==&quot;natural&quot;]*100, na.rm=T), natural_sd=sd(relabun[type==&quot;natural&quot;]*100, na.rm=T), protected_mean=mean(relabun[type==&quot;protected&quot;]*100, na.rm=T), protected_sd=sd(relabun[type==&quot;protected&quot;]*100, na.rm=T), urban_mean=mean(relabun[type==&quot;urban&quot;]*100, na.rm=T), urban_sd=sd(relabun[type==&quot;urban&quot;]*100, na.rm=T)) %&gt;% mutate(total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2)), natural=str_c(round(natural_mean,2),&quot;±&quot;,round(natural_sd,2)), protected=str_c(round(protected_mean,2),&quot;±&quot;,round(protected_sd,2)), urban=str_c(round(urban_mean,2),&quot;±&quot;,round(urban_sd,2))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(family,total,natural,protected,urban) %&gt;% tt() tinytable_6yrtlfclfthv5pxwhyey .table td.tinytable_css_sp52g6ypl57hw9l7gr0x, .table th.tinytable_css_sp52g6ypl57hw9l7gr0x { border-bottom: solid 0.1em #d3d8dc; } family total natural protected urban f__Rikenellaceae 19.24±15.88 21.56±16 16.39±18.36 18.8±11.83 f__Bacteroidaceae 17.76±15.59 13.58±15.39 24.32±16.86 16.77±11.57 f__Tannerellaceae 8.3±7.4 5.02±6.44 11.2±8.17 10.33±5.71 f__Lachnospiraceae 4.6±4.74 2.96±3.69 6.66±6.02 4.87±3.47 f__Mycoplasmoidaceae 4.22±6.93 5.61±8.92 2.78±4.29 3.63±5.26 f__Aeromonadaceae 4.15±10.69 3.35±9.89 4.22±9.85 5.47±13.15 f__Ruminococcaceae 4.08±3.91 4.28±4.41 3.9±3.98 3.97±2.91 f__Marinifilaceae 3±3.32 1.91±2.49 3.93±4.15 3.73±2.97 f__Akkermansiaceae 2.9±4.04 2.81±3.77 2.97±4.33 2.97±4.31 f__Enterobacteriaceae 2.67±6.28 2.28±5.65 3.73±8.03 2.03±4.75 f__ 2.22±2.48 2.37±2.89 2.02±2.22 2.21±2.06 f__Clostridiaceae 2.14±3.23 1.67±1.76 2.37±5 2.65±2.24 f__Desulfovibrionaceae 1.73±1.88 1.49±1.68 1.51±1.92 2.44±2.03 f__Chlorobiaceae 1.52±9.28 3.48±13.92 0±0 0.02±0.07 f__Chromatiaceae 1.33±5.58 2.36±7.66 0.76±4.07 0.27±0.66 f__Butyricicoccaceae 1.32±5.64 0.44±0.85 3.28±9.8 0.39±0.86 f__Erysipelotrichaceae 1.25±2.02 1.62±2.77 0.87±1.09 1.08±1.15 f__Diplorickettsiaceae 0.99±8.81 2.21±13.36 0.03±0.11 0.08±0.25 f__Cellulosilyticaceae 0.69±1.35 0.42±0.72 0.34±0.73 1.59±2.2 f__FACHB-T130 0.68±6.41 1.57±9.72 0±0 0±0 f__CAG-239 0.64±1.08 0.33±0.46 0.89±1.55 0.86±1.04 f__VadinHA17 0.55±1.87 0.99±2.41 0±0 0.48±1.85 f__Methylococcaceae 0.55±3.81 1.26±5.75 0±0 0±0 f__Fusobacteriaceae 0.52±1.23 0.26±0.51 0.45±1.36 1.05±1.74 f__Polyangiaceae 0.5±4.84 0±0 0±0 2.02±9.68 f__EnvOPS12 0.47±1.77 0.71±1.82 0.09±0.48 0.53±2.55 f__Oscillospiraceae 0.41±0.45 0.28±0.36 0.6±0.56 0.4±0.34 f__Rhodocyclaceae 0.41±2.05 0.88±3.06 0±0 0.09±0.2 f__Gastranaerophilaceae 0.39±0.67 0.3±0.62 0.31±0.56 0.64±0.81 f__Anaerovoracaceae 0.37±0.46 0.39±0.54 0.25±0.32 0.48±0.44 f__Pumilibacteraceae 0.34±1.11 0.57±1.61 0.15±0.22 0.2±0.5 f__P3 0.34±0.64 0.36±0.53 0.27±0.67 0.39±0.78 f__UBA1997 0.34±0.81 0.32±0.72 0.1±0.3 0.67±1.2 f__Mucispirillaceae 0.31±0.9 0.52±1.33 0.12±0.21 0.17±0.24 f__CAIVKH01 0.3±2.01 0.69±3.03 0±0 0±0 f__UBA3637 0.3±0.65 0.18±0.52 0.36±0.74 0.45±0.74 f__UBA11358 0.28±1.11 0.65±1.62 0±0 0±0 f__Peptostreptococcaceae 0.26±0.66 0.3±0.51 0.33±1 0.1±0.17 f__Burkholderiaceae_B 0.26±1.3 0.3±1.53 0±0 0.52±1.65 f__Methylomonadaceae 0.25±1.68 0.57±2.53 0±0.01 0±0 f__Competibacteraceae 0.25±2.33 0.01±0.05 0.77±4.15 0.01±0.04 f__Chitinophagaceae 0.25±1.22 0.57±1.81 0±0 0.01±0.03 f__Peptococcaceae 0.24±0.36 0.08±0.22 0.32±0.31 0.43±0.48 f__CHK158-818 0.23±0.4 0.13±0.3 0.18±0.26 0.47±0.58 f__Muribaculaceae 0.22±0.37 0.31±0.45 0.1±0.22 0.23±0.32 f__SHND01 0.21±1.4 0.48±2.1 0±0 0±0 f__Chromobacteriaceae 0.2±1.39 0.44±2.1 0±0 0.04±0.12 f__Smithellaceae 0.19±1.78 0±0 0±0 0.78±3.55 f__Chloroflexaceae 0.19±1.8 0±0 0.6±3.21 0±0 f__UBA6186 0.17±1.46 0±0 0.51±2.59 0.03±0.12 f__Pseudopelobacteraceae 0.17±0.98 0.38±1.46 0±0 0±0 f__Microcystaceae_B 0.17±1.54 0.01±0.05 0.51±2.74 0±0 f__Saprospiraceae 0.16±0.89 0.37±1.33 0±0 0±0 f__Succinispiraceae 0.14±0.24 0.17±0.27 0.04±0.11 0.22±0.26 f__Anaerotignaceae 0.14±0.24 0.12±0.26 0.14±0.21 0.18±0.22 f__Prolixibacteraceae 0.14±0.71 0.16±0.5 0±0 0.26±1.26 f__Palsa-965 0.13±0.89 0.3±1.33 0±0 0±0 f__UBA4823 0.13±1.22 0±0 0±0 0.51±2.44 f__Opitutaceae 0.13±1.2 0±0 0±0 0.5±2.41 f__Microcoleaceae 0.12±0.81 0.09±0.48 0.26±1.33 0±0 f__UBA3700 0.12±0.44 0.08±0.21 0.19±0.71 0.11±0.24 f__B-1AR 0.12±0.81 0.1±0.56 0±0 0.3±1.44 f__Massilibacillaceae 0.12±0.56 0±0 0.34±0.97 0.04±0.16 f__UBA5066 0.11±0.78 0.26±1.17 0±0 0±0 f__HGW-15 0.1±0.78 0±0 0±0 0.41±1.55 f__UBA5704 0.1±0.96 0.23±1.45 0±0 0±0 f__Planctomycetaceae 0.1±0.94 0.23±1.43 0±0 0±0 f__Methanoregulaceae 0.09±0.74 0.03±0.19 0±0 0.3±1.45 f__Staskawiczbacteraceae 0.09±0.77 0.2±1.17 0±0 0±0 f__B-17BO 0.08±0.54 0.19±0.82 0±0 0±0 f__CAG-465 0.07±0.36 0±0 0.17±0.59 0.09±0.25 f__Paludibacteraceae 0.07±0.56 0.04±0.25 0±0 0.23±1.07 f__GW2011-AR1 0.07±0.65 0.17±0.99 0±0 0±0 f__UBA10030 0.07±0.42 0.17±0.62 0±0 0±0 f__Methanotrichaceae 0.07±0.68 0±0 0±0 0.29±1.35 f__UBA932 0.07±0.19 0.03±0.11 0.08±0.23 0.13±0.24 f__Ignavibacteriaceae 0.07±0.58 0.16±0.88 0±0 0±0 f__Acutalibacteraceae 0.07±0.39 0.13±0.58 0.03±0.13 0±0 f__CAIRTM01 0.06±0.39 0.15±0.59 0±0 0±0 f__OLB5 0.06±0.35 0.14±0.52 0±0 0±0 f__Beijerinckiaceae 0.06±0.28 0.14±0.42 0±0 0±0 f__Victivallaceae 0.06±0.28 0.02±0.06 0±0 0.2±0.54 f__UBA4417 0.06±0.33 0.13±0.5 0±0 0±0 f__Methylophilaceae 0.06±0.29 0.11±0.43 0±0 0.03±0.08 f__UBA3830 0.06±0.15 0.04±0.08 0.02±0.08 0.13±0.26 f__UBA12108 0.05±0.43 0.12±0.65 0±0 0±0 f__TH1-2 0.05±0.31 0.11±0.47 0±0 0±0 f__Shewanellaceae 0.05±0.22 0.03±0.2 0.09±0.3 0.02±0.07 f__F082 0.05±0.37 0.11±0.57 0±0 0±0 f__Arcobacteraceae 0.05±0.28 0.1±0.43 0.01±0.03 0±0.01 f__WRBN01 0.04±0.26 0.01±0.04 0±0 0.17±0.51 f__Methanocorpusculaceae 0.04±0.16 0.06±0.2 0.04±0.18 0.03±0.06 f__Acidobacteriaceae 0.04±0.41 0±0 0±0 0.17±0.82 f__Hepatoplasmataceae 0.04±0.29 0.04±0.26 0±0 0.1±0.48 f__Methanobacteriaceae 0.04±0.28 0.09±0.42 0±0 0.01±0.05 f__UBA660 0.04±0.23 0.04±0.26 0.07±0.29 0±0.02 f__DYRC01 0.04±0.39 0±0 0±0 0.16±0.79 f__RUG14156 0.04±0.23 0.06±0.33 0±0 0.05±0.14 f__JADJPG01 0.04±0.27 0.09±0.41 0±0 0±0 f__SZUA-47 0.04±0.22 0.09±0.33 0±0 0±0 f__Pyrinomonadaceae 0.04±0.24 0.09±0.37 0±0 0±0 f__LL51 0.04±0.17 0.01±0.05 0.1±0.29 0±0 f__Pirellulaceae 0.04±0.29 0.08±0.44 0±0 0±0 f__FEN-979 0.04±0.21 0.08±0.31 0±0 0±0 f__UBA9973 0.03±0.15 0.05±0.18 0±0 0.04±0.18 f__Rhizobiaceae 0.03±0.15 0.07±0.22 0±0 0±0 f__SHXO01 0.03±0.14 0.07±0.21 0±0 0±0 f__Rhabdochlamydiaceae 0.03±0.14 0.06±0.21 0±0 0±0 f__2-12-FULL-35-15 0.03±0.22 0.06±0.33 0±0 0±0 f__Aestuariivirgaceae 0.03±0.11 0.06±0.17 0±0 0±0 f__Syntrophorhabdaceae 0.03±0.2 0.01±0.08 0±0 0.08±0.39 f__Sedimentibacteraceae 0.03±0.07 0.01±0.03 0.06±0.11 0.02±0.07 f__UBA2023 0.02±0.2 0.06±0.31 0±0 0±0 f__Coprobacillaceae 0.02±0.07 0.03±0.06 0.03±0.1 0±0.01 f__Spirosomaceae 0.02±0.12 0.03±0.15 0.03±0.11 0±0 f__UBA3375 0.02±0.11 0.05±0.16 0±0 0.01±0.02 f__Sphingomonadaceae 0.02±0.11 0.05±0.16 0±0 0±0 f__Thermoanaerobaculaceae 0.02±0.22 0±0 0±0 0.09±0.43 f__Fen-1058 0.02±0.2 0±0 0±0 0.09±0.39 f__DUVY01 0.02±0.06 0.02±0.05 0.03±0.08 0.02±0.06 f__UBA927 0.02±0.1 0.04±0.14 0±0 0.02±0.1 f__JAAUTT01 0.02±0.12 0.05±0.17 0±0 0±0 f__GWF2-50-10 0.02±0.13 0.05±0.2 0±0 0±0 f__UBA3254 0.02±0.13 0.04±0.2 0±0 0±0 f__GWA2-36-10 0.02±0.15 0.04±0.22 0±0 0±0 f__JAAYKM01 0.02±0.18 0±0 0±0 0.08±0.36 f__SG8-41 0.02±0.15 0.04±0.22 0±0 0±0 f__Crocinitomicaceae 0.02±0.12 0±0 0±0 0.07±0.24 f__Holophagaceae 0.02±0.18 0±0 0±0 0.07±0.35 f__Absconditicoccaceae 0.02±0.15 0.04±0.23 0±0 0±0 f__Rectinemataceae 0.02±0.17 0±0 0±0 0.07±0.34 f__Ilumatobacteraceae 0.02±0.12 0.04±0.18 0±0 0±0 f__UBA6016 0.02±0.11 0±0 0±0 0.07±0.21 f__Lutisporaceae 0.02±0.04 0.01±0.03 0.01±0.03 0.04±0.06 f__4484-276 0.02±0.1 0.04±0.16 0±0 0±0 f__Terrimicrobiaceae 0.02±0.06 0.03±0.09 0±0 0±0.02 f__UBA4778 0.02±0.09 0.02±0.08 0±0 0.03±0.14 f__Eubacteriaceae 0.02±0.05 0±0 0.02±0.04 0.04±0.09 f__SPBP01 0.01±0.09 0.03±0.13 0±0 0±0 f__Gemmataceae 0.01±0.14 0.03±0.21 0±0 0±0 f__UBA1568 0.01±0.1 0.03±0.16 0±0 0±0 f__XYD1-FULL-46-19 0.01±0.11 0.03±0.16 0±0 0±0 f__UBA920 0.01±0.1 0.03±0.15 0±0 0±0 f__CAG-508 0.01±0.08 0.02±0.12 0±0.02 0.01±0.03 f__Steroidobacteraceae 0.01±0.08 0.03±0.11 0±0 0±0 f__JAAZKV01 0.01±0.1 0.03±0.15 0±0 0±0 f__UBA5976 0.01±0.08 0.03±0.11 0±0 0±0.02 f__Burkholderiaceae_A 0.01±0.09 0.03±0.14 0±0 0±0 f__JAKLEM01 0.01±0.11 0±0 0±0 0.05±0.22 f__Brevinemataceae 0.01±0.07 0.01±0.06 0.02±0.09 0±0 f__Amoebophilaceae 0.01±0.05 0.02±0.07 0±0 0±0 f__Profunditerraquicolaceae 0.01±0.05 0.02±0.07 0±0 0±0 f__JAGOQP01 0.01±0.09 0±0 0±0 0.04±0.17 f__Mycoplasmataceae 0.01±0.06 0±0 0±0 0.04±0.11 f__Microbacteriaceae 0.01±0.06 0.02±0.08 0±0 0±0.01 f__UBA1709 0.01±0.08 0.02±0.12 0±0 0±0 f__UBA1820 0.01±0.02 0.01±0.02 0.01±0.02 0.01±0.02 f__Burkholderiaceae 0.01±0.03 0.01±0.04 0±0 0±0.01 f__JAGQMS01 0.01±0.03 0.02±0.05 0±0 0±0 f__Tenuifilaceae 0.01±0.05 0.01±0.07 0±0 0±0 f__UBA5272 0.01±0.05 0.01±0.07 0±0 0±0 f__Flavobacteriaceae 0.01±0.05 0.01±0.07 0±0 0±0 f__Moraxellaceae 0±0.04 0±0 0.02±0.06 0±0 f__Zambryskibacteraceae 0±0.04 0.01±0.06 0±0 0±0 f__JAFDDL01 0±0.04 0±0 0±0 0.02±0.09 f__2-12-FULL-60-25 0±0.02 0.01±0.04 0±0 0±0 f__UBA12049 0±0.03 0.01±0.04 0±0 0±0 f__PALSA-1337 0±0.02 0.01±0.03 0±0 0±0 f__CAIOMD01 0±0.01 0±0.02 0±0 0±0 family_arrange &lt;- family_summary %&gt;% group_by(family) %&gt;% summarise(mean=sum(relabun)) %&gt;% arrange(-mean) %&gt;% dplyr::select(family) %&gt;% pull() family_summary %&gt;% left_join(genome_metadata %&gt;% dplyr::select(family,phylum) %&gt;% unique(),by=join_by(family==family)) %&gt;% # left_join(sample_metadata,by=join_by(sample==sample)) %&gt;% filter(family %in% family_arrange[1:20]) %&gt;% mutate(family=factor(family,levels=rev(family_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=family, group=family, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + facet_grid(.~type)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) # Per origin # family_summary %&gt;% # left_join(genome_metadata %&gt;% dplyr::select(family,phylum) %&gt;% unique(),by=join_by(family==family)) %&gt;% # # left_join(sample_metadata,by=join_by(sample==sample)) %&gt;% # filter(family %in% family_arrange[1:20]) %&gt;% # mutate(family=factor(family,levels=rev(family_arrange[1:20]))) %&gt;% # filter(relabun &gt; 0) %&gt;% # ggplot(aes(x=relabun, y=family, group=family, color=phylum)) + # scale_color_manual(values=phylum_colors[-8]) + # geom_jitter(alpha=0.5) + # facet_grid(.~region)+ # theme_minimal() + # labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) 5.1.2.2 Per season family_summary %&gt;% group_by(family) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), spring_mean=mean(relabun[season==&quot;spring&quot;]*100, na.rm=T), spring_sd=sd(relabun[season==&quot;spring&quot;]*100, na.rm=T), autumn_mean=mean(relabun[season==&quot;autumn&quot;]*100, na.rm=T), autumn_sd=sd(relabun[season==&quot;autumn&quot;]*100, na.rm=T)) %&gt;% mutate(total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2)), spring=str_c(round(spring_mean,2),&quot;±&quot;,round(spring_sd,2)), autumn=str_c(round(autumn_mean,2),&quot;±&quot;,round(autumn_sd,2))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(family,total,spring,autumn) %&gt;% tt() tinytable_1p8nr6mg4wwd5dwrgsd4 .table td.tinytable_css_150tzfr0f3vwffqtziip, .table th.tinytable_css_150tzfr0f3vwffqtziip { border-bottom: solid 0.1em #d3d8dc; } family total spring autumn f__Rikenellaceae 19.24±15.88 21.24±11.62 18.17±17.74 f__Bacteroidaceae 17.76±15.59 12.4±8.63 20.62±17.65 f__Tannerellaceae 8.3±7.4 7.78±5.55 8.57±8.24 f__Lachnospiraceae 4.6±4.74 4.99±5.37 4.4±4.4 f__Mycoplasmoidaceae 4.22±6.93 4.36±4.98 4.15±7.82 f__Aeromonadaceae 4.15±10.69 4.36±9.73 4.04±11.25 f__Ruminococcaceae 4.08±3.91 6.17±4.42 2.97±3.11 f__Marinifilaceae 3±3.32 4.8±3.78 2.04±2.61 f__Akkermansiaceae 2.9±4.04 3.9±4.69 2.37±3.58 f__Enterobacteriaceae 2.67±6.28 3.18±7.34 2.4±5.69 f__ 2.22±2.48 2.83±2.55 1.89±2.4 f__Clostridiaceae 2.14±3.23 2.22±2.57 2.09±3.55 f__Desulfovibrionaceae 1.73±1.88 2.63±2.09 1.25±1.57 f__Chlorobiaceae 1.52±9.28 0±0 2.33±11.44 f__Chromatiaceae 1.33±5.58 2.04±6.47 0.95±5.07 f__Butyricicoccaceae 1.32±5.64 0.78±1.39 1.61±6.91 f__Erysipelotrichaceae 1.25±2.02 1.05±1.03 1.35±2.39 f__Diplorickettsiaceae 0.99±8.81 0±0 1.52±10.91 f__Cellulosilyticaceae 0.69±1.35 0.66±0.83 0.7±1.57 f__FACHB-T130 0.68±6.41 0±0 1.05±7.94 f__CAG-239 0.64±1.08 1.18±1.46 0.35±0.66 f__VadinHA17 0.55±1.87 0.03±0.17 0.83±2.27 f__Methylococcaceae 0.55±3.81 1.35±6.41 0.12±0.59 f__Fusobacteriaceae 0.52±1.23 0.31±0.53 0.62±1.47 f__Polyangiaceae 0.5±4.84 0±0 0.77±6 f__EnvOPS12 0.47±1.77 0.08±0.46 0.67±2.14 f__Oscillospiraceae 0.41±0.45 0.59±0.47 0.32±0.41 f__Rhodocyclaceae 0.41±2.05 0.15±0.63 0.54±2.5 f__Gastranaerophilaceae 0.39±0.67 0.49±0.65 0.33±0.67 f__Anaerovoracaceae 0.37±0.46 0.45±0.49 0.32±0.44 f__Pumilibacteraceae 0.34±1.11 0.64±1.77 0.19±0.4 f__P3 0.34±0.64 0.51±0.7 0.25±0.59 f__UBA1997 0.34±0.81 0.31±0.64 0.35±0.89 f__Mucispirillaceae 0.31±0.9 0.21±0.23 0.36±1.11 f__CAIVKH01 0.3±2.01 0±0 0.46±2.48 f__UBA3637 0.3±0.65 0.68±0.92 0.1±0.32 f__UBA11358 0.28±1.11 0.22±0.86 0.32±1.23 f__Peptostreptococcaceae 0.26±0.66 0.38±0.67 0.2±0.65 f__Burkholderiaceae_B 0.26±1.3 0.01±0.05 0.39±1.6 f__Methylomonadaceae 0.25±1.68 0±0 0.38±2.07 f__Competibacteraceae 0.25±2.33 0.71±3.95 0±0 f__Chitinophagaceae 0.25±1.22 0±0 0.38±1.49 f__Peptococcaceae 0.24±0.36 0.29±0.34 0.22±0.37 f__CHK158-818 0.23±0.4 0.39±0.55 0.14±0.26 f__Muribaculaceae 0.22±0.37 0.46±0.48 0.1±0.21 f__SHND01 0.21±1.4 0.48±2.27 0.06±0.48 f__Chromobacteriaceae 0.2±1.39 0.58±2.34 0±0 f__Smithellaceae 0.19±1.78 0±0 0.3±2.2 f__Chloroflexaceae 0.19±1.8 0.54±3.06 0±0.01 f__UBA6186 0.17±1.46 0.46±2.47 0.01±0.08 f__Pseudopelobacteraceae 0.17±0.98 0±0 0.25±1.2 f__Microcystaceae_B 0.17±1.54 0.46±2.6 0.01±0.04 f__Saprospiraceae 0.16±0.89 0±0 0.25±1.09 f__Succinispiraceae 0.14±0.24 0.12±0.17 0.15±0.27 f__Anaerotignaceae 0.14±0.24 0.15±0.23 0.13±0.24 f__Prolixibacteraceae 0.14±0.71 0±0 0.21±0.87 f__Palsa-965 0.13±0.89 0±0 0.2±1.09 f__UBA4823 0.13±1.22 0±0 0.19±1.51 f__Opitutaceae 0.13±1.2 0±0 0.19±1.49 f__Microcoleaceae 0.12±0.81 0.35±1.35 0±0.01 f__UBA3700 0.12±0.44 0.21±0.68 0.07±0.2 f__B-1AR 0.12±0.81 0±0 0.18±0.99 f__Massilibacillaceae 0.12±0.56 0.16±0.78 0.09±0.42 f__UBA5066 0.11±0.78 0.3±1.3 0.02±0.13 f__HGW-15 0.1±0.78 0±0 0.16±0.96 f__UBA5704 0.1±0.96 0±0 0.15±1.19 f__Planctomycetaceae 0.1±0.94 0±0 0.15±1.17 f__Methanoregulaceae 0.09±0.74 0±0 0.14±0.91 f__Staskawiczbacteraceae 0.09±0.77 0±0 0.13±0.95 f__B-17BO 0.08±0.54 0±0 0.13±0.67 f__CAG-465 0.07±0.36 0.19±0.58 0.01±0.07 f__Paludibacteraceae 0.07±0.56 0±0 0.11±0.69 f__GW2011-AR1 0.07±0.65 0±0 0.11±0.81 f__UBA10030 0.07±0.42 0±0 0.11±0.51 f__Methanotrichaceae 0.07±0.68 0±0 0.11±0.84 f__UBA932 0.07±0.19 0.12±0.24 0.04±0.16 f__Ignavibacteriaceae 0.07±0.58 0.02±0.12 0.09±0.72 f__Acutalibacteraceae 0.07±0.39 0.07±0.19 0.06±0.47 f__CAIRTM01 0.06±0.39 0.08±0.37 0.06±0.41 f__OLB5 0.06±0.35 0±0 0.1±0.43 f__Beijerinckiaceae 0.06±0.28 0±0 0.1±0.35 f__Victivallaceae 0.06±0.28 0.02±0.07 0.08±0.34 f__UBA4417 0.06±0.33 0.02±0.11 0.07±0.41 f__Methylophilaceae 0.06±0.29 0±0 0.09±0.35 f__UBA3830 0.06±0.15 0.06±0.13 0.06±0.16 f__UBA12108 0.05±0.43 0±0 0.08±0.53 f__TH1-2 0.05±0.31 0±0 0.08±0.38 f__Shewanellaceae 0.05±0.22 0±0 0.07±0.26 f__F082 0.05±0.37 0.03±0.11 0.06±0.46 f__Arcobacteraceae 0.05±0.28 0.04±0.13 0.05±0.34 f__WRBN01 0.04±0.26 0.12±0.43 0±0.03 f__Methanocorpusculaceae 0.04±0.16 0.02±0.05 0.06±0.2 f__Acidobacteriaceae 0.04±0.41 0±0 0.07±0.51 f__Hepatoplasmataceae 0.04±0.29 0±0 0.07±0.36 f__Methanobacteriaceae 0.04±0.28 0.03±0.11 0.05±0.34 f__UBA660 0.04±0.23 0.12±0.39 0±0.01 f__DYRC01 0.04±0.39 0±0 0.06±0.49 f__RUG14156 0.04±0.23 0.03±0.12 0.04±0.27 f__JADJPG01 0.04±0.27 0±0 0.06±0.33 f__SZUA-47 0.04±0.22 0±0 0.06±0.27 f__Pyrinomonadaceae 0.04±0.24 0.09±0.4 0.01±0.07 f__LL51 0.04±0.17 0.08±0.27 0.01±0.05 f__Pirellulaceae 0.04±0.29 0±0 0.06±0.36 f__FEN-979 0.04±0.21 0±0 0.06±0.25 f__UBA9973 0.03±0.15 0±0 0.05±0.19 f__Rhizobiaceae 0.03±0.15 0±0 0.05±0.18 f__SHXO01 0.03±0.14 0±0 0.04±0.18 f__Rhabdochlamydiaceae 0.03±0.14 0±0 0.04±0.18 f__2-12-FULL-35-15 0.03±0.22 0±0 0.04±0.27 f__Aestuariivirgaceae 0.03±0.11 0±0 0.04±0.14 f__Syntrophorhabdaceae 0.03±0.2 0±0 0.04±0.25 f__Sedimentibacteraceae 0.03±0.07 0.02±0.07 0.03±0.07 f__UBA2023 0.02±0.2 0±0 0.04±0.25 f__Coprobacillaceae 0.02±0.07 0.01±0.04 0.03±0.08 f__Spirosomaceae 0.02±0.12 0.02±0.1 0.03±0.13 f__UBA3375 0.02±0.11 0±0 0.04±0.13 f__Sphingomonadaceae 0.02±0.11 0±0 0.04±0.13 f__Thermoanaerobaculaceae 0.02±0.22 0±0 0.03±0.27 f__Fen-1058 0.02±0.2 0±0 0.03±0.24 f__DUVY01 0.02±0.06 0.01±0.05 0.03±0.07 f__UBA927 0.02±0.1 0±0 0.03±0.13 f__JAAUTT01 0.02±0.12 0±0 0.03±0.14 f__GWF2-50-10 0.02±0.13 0±0 0.03±0.16 f__UBA3254 0.02±0.13 0±0 0.03±0.16 f__GWA2-36-10 0.02±0.15 0±0 0.03±0.18 f__JAAYKM01 0.02±0.18 0±0 0.03±0.23 f__SG8-41 0.02±0.15 0±0 0.03±0.18 f__Crocinitomicaceae 0.02±0.12 0±0 0.03±0.15 f__Holophagaceae 0.02±0.18 0±0 0.03±0.22 f__Absconditicoccaceae 0.02±0.15 0±0 0.03±0.19 f__Rectinemataceae 0.02±0.17 0±0 0.03±0.21 f__Ilumatobacteraceae 0.02±0.12 0±0 0.03±0.15 f__UBA6016 0.02±0.11 0±0 0.03±0.13 f__Lutisporaceae 0.02±0.04 0.03±0.05 0.01±0.03 f__4484-276 0.02±0.1 0±0 0.03±0.13 f__Terrimicrobiaceae 0.02±0.06 0±0.02 0.02±0.07 f__UBA4778 0.02±0.09 0.01±0.03 0.02±0.1 f__Eubacteriaceae 0.02±0.05 0.03±0.07 0.01±0.03 f__SPBP01 0.01±0.09 0±0 0.02±0.11 f__Gemmataceae 0.01±0.14 0±0 0.02±0.17 f__UBA1568 0.01±0.1 0±0 0.02±0.13 f__XYD1-FULL-46-19 0.01±0.11 0±0 0.02±0.13 f__UBA920 0.01±0.1 0±0 0.02±0.12 f__CAG-508 0.01±0.08 0.03±0.13 0±0.02 f__Steroidobacteraceae 0.01±0.08 0±0 0.02±0.09 f__JAAZKV01 0.01±0.1 0±0 0.02±0.12 f__UBA5976 0.01±0.08 0±0 0.02±0.09 f__Burkholderiaceae_A 0.01±0.09 0.03±0.16 0±0 f__JAKLEM01 0.01±0.11 0±0 0.02±0.14 f__Brevinemataceae 0.01±0.07 0.01±0.04 0.01±0.08 f__Amoebophilaceae 0.01±0.05 0±0 0.01±0.06 f__Profunditerraquicolaceae 0.01±0.05 0±0 0.01±0.06 f__JAGOQP01 0.01±0.09 0±0 0.01±0.11 f__Mycoplasmataceae 0.01±0.06 0±0.01 0.01±0.07 f__Microbacteriaceae 0.01±0.06 0±0 0.01±0.07 f__UBA1709 0.01±0.08 0±0 0.01±0.1 f__UBA1820 0.01±0.02 0.01±0.02 0.01±0.02 f__Burkholderiaceae 0.01±0.03 0±0 0.01±0.04 f__JAGQMS01 0.01±0.03 0±0 0.01±0.04 f__Tenuifilaceae 0.01±0.05 0±0 0.01±0.06 f__UBA5272 0.01±0.05 0±0 0.01±0.06 f__Flavobacteriaceae 0.01±0.05 0±0 0.01±0.06 f__Moraxellaceae 0±0.04 0±0 0.01±0.04 f__Zambryskibacteraceae 0±0.04 0±0 0.01±0.05 f__JAFDDL01 0±0.04 0±0 0.01±0.05 f__2-12-FULL-60-25 0±0.02 0±0 0.01±0.03 f__UBA12049 0±0.03 0±0 0.01±0.04 f__PALSA-1337 0±0.02 0±0 0±0.02 f__CAIOMD01 0±0.01 0±0 0±0.02 family_summary %&gt;% left_join(genome_metadata %&gt;% dplyr::select(family,phylum) %&gt;% unique(),by=join_by(family==family)) %&gt;% # left_join(sample_metadata,by=join_by(sample==sample)) %&gt;% filter(family %in% family_arrange[1:20]) %&gt;% mutate(family=factor(family,levels=rev(family_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=family, group=family, color=phylum)) + scale_color_manual(values=phylum_colors) +#[-8] geom_jitter(alpha=0.5) + facet_grid(.~season)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) 5.1.3 Genus relative abundances genus_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,phylum,genus, type, season) %&gt;% summarise(relabun=sum(count)) %&gt;% filter(genus != &quot;g__&quot;) %&gt;% mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) 5.1.3.1 Per pond genus_summary %&gt;% group_by(genus) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), natural_mean=mean(relabun[type==&quot;natural&quot;]*100, na.rm=T), natural_sd=sd(relabun[type==&quot;natural&quot;]*100, na.rm=T), protected_mean=mean(relabun[type==&quot;protected&quot;]*100, na.rm=T), protected_sd=sd(relabun[type==&quot;protected&quot;]*100, na.rm=T), urban_mean=mean(relabun[type==&quot;urban&quot;]*100, na.rm=T), urban_sd=sd(relabun[type==&quot;urban&quot;]*100, na.rm=T)) %&gt;% mutate(total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2)), natural=str_c(round(natural_mean,2),&quot;±&quot;,round(natural_sd,2)), protected=str_c(round(protected_mean,2),&quot;±&quot;,round(protected_sd,2)), urban=str_c(round(urban_mean,2),&quot;±&quot;,round(urban_sd,2))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(genus,total,natural,protected,urban) %&gt;% tt() tinytable_nh1fq7k6btg4yq4h7dai .table td.tinytable_css_bquz4h0gy2hl5jrr3jk0, .table th.tinytable_css_bquz4h0gy2hl5jrr3jk0 { border-bottom: solid 0.1em #d3d8dc; } genus total natural protected urban Bacteroides 17.27±15.59 13.16±15.3 23.86±16.92 16.12±11.68 Mucinivorans 10.39±12.9 11.41±9.36 9.48±19.23 9.76±7.66 Parabacteroides 7.07±6.44 4.45±5.59 9.58±7.48 8.47±4.71 Aeromonas 4.15±10.69 3.35±9.89 4.22±9.85 5.47±13.15 Mycoplasma_L 3.78±6.81 5.42±8.83 2.17±4.18 2.96±4.7 Rikenella 2.79±5.08 3.21±5.27 2.46±4.91 2.48±5.12 JADFUS01 2.22±2.02 2.13±2.26 2.31±2.09 2.27±1.5 Odoribacter 1.87±2.46 1.12±1.88 2.74±3.29 2.1±1.73 Akkermansia 1.63±3.1 0.86±1.42 2.06±3.58 2.41±4.22 Clostridium 1.41±1.84 1.53±1.71 1.3±2.38 1.33±1.22 Chlorobaculum 1.26±7.85 2.88±11.79 0±0 0.01±0.04 UBA866 1.2±2.17 1.36±2.95 1.04±1.43 1.12±1.14 Parabacteroides_B 1.13±1.58 0.5±1.14 1.49±1.76 1.76±1.66 Aquirickettsiella 0.99±8.81 2.21±13.36 0.03±0.11 0.08±0.25 Hafnia 0.97±3.83 0.92±3.53 1.36±4.94 0.57±2.68 Buttiauxella 0.94±4.16 0.25±0.97 1.84±6.63 1.01±3.47 Mobilisporobacter 0.84±2.27 0.86±2.41 1.11±2.79 0.46±0.93 Thiodictyon 0.81±3.44 1.25±3.9 0.76±4.07 0.11±0.3 UMGS1251 0.77±1.13 0.26±0.59 1.04±1.48 1.29±1.02 Sarcina 0.73±1.94 0.14±0.53 1.07±2.89 1.32±1.83 Alistipes 0.68±0.97 1.03±1.24 0.28±0.47 0.58±0.65 FACHB-831 0.68±6.41 1.57±9.72 0±0 0±0 Hydrogenoanaerobacterium 0.66±1.76 0.89±2.49 0.45±0.81 0.53±0.89 Clostridium_Q 0.66±0.78 0.57±0.7 0.89±0.98 0.51±0.55 SZUA-378 0.57±1.52 0.09±0.28 1.57±2.41 0.13±0.26 Angelakisella 0.56±0.72 0.56±0.73 0.4±0.69 0.77±0.74 LD21 0.55±1.87 0.99±2.41 0±0 0.48±1.85 Malacoplasma 0.44±1.76 0.19±0.54 0.61±1.65 0.67±2.95 Tidjanibacter 0.41±0.75 0.51±0.85 0.34±0.79 0.34±0.49 Hungatella_A 0.4±0.64 0.29±0.56 0.42±0.68 0.57±0.71 OLB14 0.39±1.69 0.59±1.67 0±0 0.53±2.55 Budvicia 0.38±1.36 0.41±1.55 0.45±1.48 0.23±0.8 JAGNZR01 0.35±0.94 0.13±0.37 0.4±1.24 0.67±1.13 Anaerorhabdus 0.35±1.17 0.55±1.62 0.08±0.3 0.34±0.85 Anaerotruncus 0.31±0.48 0.27±0.47 0.35±0.56 0.35±0.41 OM05-12 0.3±0.5 0.27±0.37 0.28±0.63 0.39±0.5 CAIVKH01 0.3±2.01 0.69±3.03 0±0 0±0 Chlorobium 0.26±1.63 0.6±2.44 0±0 0.01±0.06 RXIV01 0.25±2.33 0.01±0.05 0.77±4.15 0.01±0.04 Gallalistipes 0.25±0.71 0.44±1.03 0.07±0.14 0.12±0.14 CAKVBE01 0.25±0.69 0.25±0.65 0.09±0.3 0.45±1.03 Dielma 0.23±0.36 0.15±0.32 0.26±0.36 0.34±0.39 HGM05232 0.22±0.37 0.31±0.45 0.1±0.22 0.23±0.32 SHND01 0.21±1.4 0.48±2.1 0±0 0±0 Avirikenella 0.2±0.64 0.33±0.91 0.1±0.3 0.12±0.3 UBA4132 0.2±1.49 0.47±2.25 0±0.01 0±0 Bilophila 0.2±0.32 0.25±0.36 0.14±0.29 0.2±0.3 Craterilacuibacter 0.2±1.39 0.43±2.1 0±0 0.04±0.12 Gallibacteroides 0.2±0.38 0.11±0.27 0.12±0.2 0.44±0.57 CAJGBR01 0.19±0.26 0.26±0.31 0.1±0.18 0.19±0.23 Chloroploca 0.19±1.8 0±0 0.6±3.21 0±0 Lamprocystis 0.18±0.88 0.35±1.3 0±0 0.12±0.28 FEN-1139 0.18±1.71 0±0 0±0 0.71±3.43 RUG14305 0.18±0.25 0.14±0.23 0.19±0.3 0.23±0.2 Alistipes_A 0.17±0.32 0.23±0.44 0.05±0.09 0.21±0.23 Smithella 0.17±1.55 0±0 0±0 0.68±3.09 UBA6186 0.17±1.46 0±0 0.51±2.59 0.03±0.12 Anaerovorax 0.17±0.32 0.22±0.38 0.04±0.13 0.23±0.33 Phocea 0.16±0.35 0.06±0.12 0.22±0.53 0.27±0.31 M3007 0.16±0.89 0.37±1.33 0±0 0±0 Romboutsia_D 0.16±0.34 0.26±0.39 0.09±0.36 0.07±0.15 Cetobacterium 0.16±0.45 0.12±0.31 0.04±0.15 0.38±0.74 JADLHS01 0.16±0.93 0.36±1.39 0±0 0±0 Scandinavium 0.15±0.85 0.23±1.23 0.04±0.19 0.14±0.49 Amedibacillus 0.15±0.43 0.2±0.54 0.14±0.41 0.06±0.15 JAGAJR01 0.14±0.29 0.15±0.29 0.12±0.26 0.17±0.31 Luteolibacter 0.14±0.53 0.32±0.78 0±0.01 0.02±0.07 GCA-2737665 0.13±0.89 0.3±1.33 0±0 0±0 Aminipila 0.13±0.18 0.13±0.2 0.13±0.18 0.13±0.15 CAIQJJ01 0.13±1.22 0±0 0±0 0.51±2.44 JADKHC01 0.13±1.2 0±0 0±0 0.5±2.41 JJ008 0.12±0.69 0.29±1.03 0±0 0±0 Intestinimonas 0.12±0.2 0.06±0.12 0.25±0.26 0.06±0.13 Citrobacter 0.12±1.12 0.28±1.69 0±0 0±0 Planktothrix 0.12±0.81 0.09±0.48 0.26±1.33 0±0 FEN-1279 0.12±0.81 0.1±0.56 0±0 0.3±1.44 Harryflintia 0.12±0.32 0.02±0.12 0.28±0.5 0.06±0.12 UBA5066 0.11±0.78 0.26±1.17 0±0 0±0 JACRCG01 0.11±0.7 0.26±1.05 0±0 0±0 Negativibacillus 0.11±0.35 0.03±0.19 0.21±0.51 0.13±0.3 Rhodoferax_C 0.11±0.86 0.25±1.3 0±0 0±0 CAIPUE01 0.11±0.28 0.13±0.35 0.09±0.24 0.09±0.19 WRKB01 0.11±0.21 0.05±0.11 0.12±0.24 0.19±0.28 Anaerotignum 0.1±0.23 0.12±0.26 0.04±0.15 0.16±0.23 Spyradomonas 0.1±0.3 0.06±0.24 0.03±0.11 0.25±0.47 TH-plancto1 0.1±0.94 0.23±1.43 0±0 0±0 Azonexus 0.09±0.43 0.17±0.63 0±0 0.07±0.2 Methanoregula 0.09±0.74 0.03±0.19 0±0 0.3±1.45 Pseudoflavonifractor 0.09±0.22 0.04±0.1 0.17±0.34 0.07±0.12 RGIG7389 0.08±0.15 0.04±0.1 0.1±0.18 0.12±0.16 UBA7488 0.08±0.28 0.03±0.15 0.13±0.42 0.11±0.21 UBA3961 0.08±0.37 0.18±0.55 0±0 0±0 RPPU01 0.08±0.75 0±0 0±0 0.31±1.5 RGIG5057 0.07±0.36 0±0 0.17±0.59 0.09±0.25 UMGS1202 0.07±0.14 0.04±0.08 0.1±0.16 0.11±0.18 CAIQQL01 0.07±0.65 0.17±0.99 0±0 0±0 Methanothrix 0.07±0.68 0±0 0±0 0.29±1.35 Egerieousia 0.07±0.19 0.03±0.11 0.08±0.23 0.13±0.24 UBA11358 0.07±0.35 0.16±0.52 0±0 0±0 IGN3 0.07±0.58 0.16±0.88 0±0 0±0 14-2 0.07±0.32 0.02±0.08 0.06±0.27 0.15±0.56 SKHV01 0.07±0.63 0±0 0±0 0.26±1.26 Butyribacter 0.06±0.61 0.15±0.93 0±0 0±0 CAIRTM01 0.06±0.39 0.15±0.59 0±0 0±0 OLB5 0.06±0.35 0.14±0.52 0±0 0±0 Methylocystis 0.06±0.28 0.14±0.42 0±0 0±0 Robinsoniella 0.06±0.21 0.02±0.08 0.13±0.31 0.05±0.19 UBA2475 0.06±0.39 0.14±0.58 0±0 0±0 JABFSR01 0.06±0.31 0.13±0.46 0±0 0±0 Paludibacter 0.06±0.54 0±0 0±0 0.23±1.07 Ruthenibacterium 0.06±0.2 0.12±0.29 0.01±0.04 0±0.01 UBA12294 0.06±0.31 0.07±0.25 0.09±0.48 0±0 Edwardsiella 0.05±0.17 0.1±0.24 0±0 0.04±0.12 CAJAUT01 0.05±0.43 0.12±0.65 0±0 0±0 JAKAJH01 0.05±0.39 0.12±0.59 0±0 0±0 CAIPTY01 0.05±0.28 0.12±0.43 0±0 0±0 Romboutsia_A 0.05±0.26 0.02±0.08 0.12±0.44 0.01±0.04 Bacteroides_G 0.05±0.25 0.12±0.37 0±0 0±0 Novimethylophilus 0.05±0.29 0.11±0.43 0±0 0±0 Vitreimonas 0.05±0.31 0.11±0.47 0±0 0±0 Shewanella 0.05±0.22 0.03±0.2 0.09±0.3 0.02±0.07 JAERTD01 0.05±0.37 0.11±0.57 0±0 0±0 JAGPHI01 0.05±0.25 0.11±0.38 0±0 0±0 Aliarcobacter 0.05±0.28 0.1±0.43 0.01±0.03 0±0.01 CAJLXD01 0.05±0.19 0.07±0.27 0.03±0.08 0.02±0.05 Methyloglobulus 0.05±0.22 0.1±0.32 0±0 0±0 JAHHUI01 0.04±0.26 0.01±0.04 0±0 0.17±0.51 Methanocorpusculum 0.04±0.16 0.06±0.2 0.04±0.18 0.03±0.06 Terracidiphilus 0.04±0.41 0±0 0±0 0.17±0.82 Methanobacterium_A 0.04±0.28 0.09±0.42 0±0 0.01±0.05 DYRC01 0.04±0.39 0±0 0±0 0.16±0.79 JAHHTP01 0.04±0.14 0.04±0.16 0.03±0.14 0.05±0.12 RGIG5270 0.04±0.22 0±0 0±0 0.16±0.42 Hylemonella 0.04±0.38 0±0 0±0 0.16±0.76 CALXSC01 0.04±0.22 0±0.03 0.01±0.02 0.14±0.42 Eubacterium_R 0.04±0.38 0.09±0.57 0±0 0±0 Scatenecus 0.04±0.15 0.04±0.18 0.02±0.09 0.06±0.16 Copranaerobaculum 0.04±0.16 0.04±0.2 0.04±0.11 0.04±0.13 RFTN01 0.04±0.22 0.09±0.33 0±0 0±0 JAEUNJ01 0.04±0.15 0.09±0.23 0±0 0±0 OLB17 0.04±0.24 0.09±0.37 0±0 0±0 Aureliella 0.04±0.29 0.08±0.44 0±0 0±0 FEN-979 0.04±0.21 0.08±0.31 0±0 0±0 Draconibacterium 0.04±0.16 0.08±0.23 0±0 0±0 UBA6024 0.03±0.21 0.08±0.31 0±0 0±0 Hespellia 0.03±0.19 0.05±0.28 0.01±0.05 0.03±0.06 Evtepia 0.03±0.06 0.03±0.06 0.05±0.07 0.02±0.04 Ferruginibacter 0.03±0.15 0.07±0.22 0±0 0.01±0.03 JAJBUQ01 0.03±0.06 0.02±0.05 0.02±0.06 0.07±0.09 Anaerobium 0.03±0.1 0.01±0.04 0.08±0.16 0±0 SHXO01 0.03±0.14 0.07±0.21 0±0 0±0 Bacilliculturomica 0.03±0.06 0.02±0.06 0.03±0.06 0.04±0.08 PALSA-1444 0.03±0.14 0.06±0.21 0±0 0±0 MGBC133411 0.03±0.16 0±0.01 0.06±0.28 0.02±0.06 2-12-FULL-35-15 0.03±0.22 0.06±0.33 0±0 0±0 Aestuariivirga 0.03±0.11 0.06±0.17 0±0 0±0 Syntrophorhabdus 0.03±0.2 0.01±0.08 0±0 0.08±0.39 Limnohabitans 0.03±0.16 0.04±0.23 0±0 0.03±0.09 JAAYQI01 0.03±0.1 0±0 0.07±0.16 0.02±0.06 IOR16 0.03±0.05 0.02±0.06 0.03±0.05 0.03±0.05 Coprobacillus 0.02±0.07 0.03±0.06 0.03±0.1 0±0.01 UBA5026 0.02±0.16 0±0 0.07±0.29 0±0.02 Massilioclostridium 0.02±0.08 0.05±0.11 0±0 0±0.02 JAFGIC01 0.02±0.23 0±0 0±0 0.1±0.46 CALURL01 0.02±0.1 0.02±0.09 0.04±0.13 0.01±0.03 AM-1111 0.02±0.16 0.05±0.23 0±0 0±0 Leadbetterella 0.02±0.12 0.03±0.15 0.03±0.11 0±0 Sulfuritalea 0.02±0.13 0.05±0.19 0±0 0±0 Aquisediminimonas 0.02±0.11 0.05±0.16 0±0 0±0 JAGOBP01 0.02±0.2 0±0 0±0 0.09±0.39 UBA8515 0.02±0.12 0.05±0.18 0±0 0±0 CHH4-2 0.02±0.06 0.01±0.05 0.04±0.07 0.02±0.05 GWF2-50-10 0.02±0.13 0.05±0.2 0±0 0±0 JAGOMW01 0.02±0.18 0.05±0.28 0±0 0±0 Merdenecus 0.02±0.08 0±0.02 0.06±0.14 0.01±0.03 UBA5195 0.02±0.12 0.05±0.18 0±0 0±0 Avimicrobium 0.02±0.04 0.01±0.02 0.02±0.03 0.05±0.05 UBA4417 0.02±0.19 0.05±0.29 0±0 0±0 JACRFF01 0.02±0.1 0.05±0.15 0±0 0±0 UBA3254 0.02±0.13 0.04±0.2 0±0 0±0 Plesiomonas 0.02±0.19 0.04±0.28 0±0 0±0 GWA2-36-10 0.02±0.15 0.04±0.22 0±0 0±0 Serratia_A 0.02±0.11 0.02±0.06 0.04±0.19 0±0 JAAYKM01 0.02±0.18 0±0 0±0 0.08±0.36 RGIG4140 0.02±0.12 0±0 0.03±0.16 0.04±0.18 UBA1794 0.02±0.08 0.01±0.03 0±0 0.07±0.15 PALSA-1004 0.02±0.15 0.04±0.22 0±0 0±0 WRDF01 0.02±0.05 0.01±0.04 0±0.01 0.06±0.09 M0103 0.02±0.12 0±0 0±0 0.07±0.24 Holophaga 0.02±0.18 0±0 0±0 0.07±0.35 MGBC102946 0.02±0.17 0.04±0.26 0±0 0±0 Hepatoplasma 0.02±0.17 0.04±0.26 0±0 0±0 UBA1306 0.02±0.17 0±0 0±0 0.07±0.34 UBA668 0.02±0.12 0.04±0.18 0±0 0±0 JAFGVL01 0.02±0.16 0.04±0.25 0±0 0±0 CAJATL01 0.02±0.1 0.04±0.16 0±0 0±0 Fluviibacter 0.02±0.05 0.03±0.07 0±0 0.02±0.05 CAJBLF01 0.02±0.15 0.04±0.23 0±0 0±0 UBA2192 0.02±0.09 0.02±0.08 0±0 0.03±0.14 Lacibacter 0.01±0.13 0.03±0.2 0±0 0±0 Massiliimalia 0.01±0.06 0.03±0.09 0±0 0±0 CAZU01 0.01±0.07 0±0 0.02±0.09 0.03±0.09 RGDT01 0.01±0.14 0.03±0.21 0±0 0±0 SSEF01 0.01±0.1 0.03±0.16 0±0 0±0 JAKJEI01 0.01±0.11 0.03±0.16 0±0 0±0 Intestinibacillus 0.01±0.05 0.02±0.05 0.01±0.02 0.02±0.06 RGIG8482 0.01±0.08 0.02±0.12 0±0.02 0.01±0.03 CADEED01 0.01±0.08 0.03±0.11 0±0 0±0 JAAZKV01 0.01±0.1 0.03±0.15 0±0 0±0 Morganella 0.01±0.09 0.02±0.13 0.01±0.05 0±0 JAEZVV01 0.01±0.09 0.03±0.14 0±0 0±0 HGM16780 0.01±0.05 0.01±0.03 0.02±0.07 0.01±0.03 JAJQEJ01 0.01±0.04 0±0.01 0.01±0.03 0.02±0.06 JAAYCI01 0.01±0.04 0.02±0.06 0±0 0±0.01 UBA9973 0.01±0.09 0±0 0±0 0.04±0.18 Cardinium 0.01±0.05 0.02±0.07 0±0 0±0 Rahnella 0.01±0.06 0±0 0±0 0.03±0.12 Brevinema 0.01±0.06 0.01±0.04 0.02±0.09 0±0 Polynucleobacter 0.01±0.03 0.01±0.04 0±0 0±0.01 JAGQMS01 0.01±0.03 0.02±0.05 0±0 0±0 Methylopumilus_A 0.01±0.04 0±0 0±0 0.03±0.08 UBA8529 0.01±0.05 0.01±0.07 0±0 0±0 UBA11704 0.01±0.05 0.01±0.07 0±0 0±0 Lumbricidophila 0.01±0.05 0.01±0.08 0±0 0±0 Flavobacterium 0.01±0.05 0.01±0.07 0±0 0±0 UBA10108 0.01±0.05 0±0 0±0 0.02±0.1 Rhodoferax 0±0.03 0±0 0±0 0.02±0.07 Acinetobacter 0±0.04 0±0 0.02±0.06 0±0 C7867-006 0±0.04 0.01±0.06 0±0 0±0 MWCR01 0±0.02 0.01±0.04 0±0 0±0 2-01-FULL-39-10-A 0±0.03 0.01±0.04 0±0 0±0 Aurantimicrobium 0±0.01 0.01±0.02 0±0 0±0.01 Cetobacterium_A 0±0.02 0±0 0.01±0.03 0±0 JACRJP01 0±0.02 0.01±0.03 0±0 0±0 Vogesella 0±0.01 0±0.02 0±0 0±0 genus_summary %&gt;% # left_join(sample_metadata,by=join_by(sample==sample)) %&gt;% mutate(genus=factor(genus, levels=rev(genus_summary_sort %&gt;% pull(genus)))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=genus, group=genus, color=phylum)) + scale_color_manual(values=phylum_colors) + geom_jitter(alpha=0.5) + facet_grid(.~type)+ theme_minimal() + theme( axis.text = element_text(size=6), )+ labs(y=&quot;Genus&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) 5.1.3.2 Per season genus_summary %&gt;% group_by(genus) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), spring_mean=mean(relabun[season==&quot;spring&quot;]*100, na.rm=T), spring_sd=sd(relabun[season==&quot;spring&quot;]*100, na.rm=T), autumn_mean=mean(relabun[season==&quot;autumn&quot;]*100, na.rm=T), autumn_sd=sd(relabun[season==&quot;autumn&quot;]*100, na.rm=T)) %&gt;% mutate(total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2)), spring=str_c(round(spring_mean,2),&quot;±&quot;,round(spring_sd,2)), autumn=str_c(round(autumn_mean,2),&quot;±&quot;,round(autumn_sd,2))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(genus,total,spring,autumn) %&gt;% tt() tinytable_ud0jegzmx3rlnlhgse8z .table td.tinytable_css_lkb3jz5o20167k68vsz8, .table th.tinytable_css_lkb3jz5o20167k68vsz8 { border-bottom: solid 0.1em #d3d8dc; } genus total spring autumn Bacteroides 17.27±15.59 11.72±8.32 20.24±17.69 Mucinivorans 10.39±12.9 9.74±6.68 10.74±15.26 Parabacteroides 7.07±6.44 6.62±4.73 7.31±7.22 Aeromonas 4.15±10.69 4.36±9.73 4.04±11.25 Mycoplasma_L 3.78±6.81 4.07±4.75 3.63±7.72 Rikenella 2.79±5.08 4.08±5.83 2.11±4.53 JADFUS01 2.22±2.02 2.31±1.62 2.18±2.22 Odoribacter 1.87±2.46 3±2.79 1.27±2.05 Akkermansia 1.63±3.1 3.23±4.43 0.77±1.54 Clostridium 1.41±1.84 1.64±1.83 1.28±1.85 Chlorobaculum 1.26±7.85 0±0 1.93±9.68 UBA866 1.2±2.17 2.2±3.23 0.66±0.96 Parabacteroides_B 1.13±1.58 1.06±1.18 1.16±1.77 Aquirickettsiella 0.99±8.81 0±0 1.52±10.91 Hafnia 0.97±3.83 2.28±5.92 0.27±1.67 Buttiauxella 0.94±4.16 0.09±0.43 1.4±5.1 Mobilisporobacter 0.84±2.27 0.72±1.45 0.9±2.61 Thiodictyon 0.81±3.44 1.64±5.45 0.37±1.44 UMGS1251 0.77±1.13 0.66±0.83 0.82±1.27 Sarcina 0.73±1.94 0.57±1.25 0.81±2.23 Alistipes 0.68±0.97 1.02±0.84 0.5±0.99 FACHB-831 0.68±6.41 0±0 1.05±7.94 Hydrogenoanaerobacterium 0.66±1.76 0.82±1.04 0.58±2.05 Clostridium_Q 0.66±0.78 0.66±0.88 0.65±0.73 SZUA-378 0.57±1.52 1.04±2.3 0.31±0.76 Angelakisella 0.56±0.72 0.83±0.84 0.41±0.61 LD21 0.55±1.87 0.03±0.17 0.83±2.27 Malacoplasma 0.44±1.76 0.29±0.73 0.52±2.12 Tidjanibacter 0.41±0.75 0.31±0.35 0.47±0.89 Hungatella_A 0.4±0.64 0.28±0.61 0.46±0.65 OLB14 0.39±1.69 0±0 0.6±2.06 Budvicia 0.38±1.36 0.27±1.15 0.43±1.47 JAGNZR01 0.35±0.94 0.17±0.38 0.45±1.13 Anaerorhabdus 0.35±1.17 0.37±0.67 0.34±1.37 Anaerotruncus 0.31±0.48 0.25±0.33 0.35±0.55 OM05-12 0.3±0.5 0.4±0.57 0.25±0.45 CAIVKH01 0.3±2.01 0±0 0.46±2.48 Chlorobium 0.26±1.63 0±0 0.4±2.01 RXIV01 0.25±2.33 0.71±3.95 0±0 Gallalistipes 0.25±0.71 0.5±1.13 0.11±0.22 CAKVBE01 0.25±0.69 0.22±0.48 0.26±0.79 Dielma 0.23±0.36 0.29±0.4 0.2±0.33 HGM05232 0.22±0.37 0.46±0.48 0.1±0.21 SHND01 0.21±1.4 0.48±2.27 0.06±0.48 Avirikenella 0.2±0.64 0.24±0.45 0.18±0.73 UBA4132 0.2±1.49 0±0 0.31±1.84 Bilophila 0.2±0.32 0.27±0.36 0.17±0.3 Craterilacuibacter 0.2±1.39 0.57±2.34 0±0 Gallibacteroides 0.2±0.38 0.37±0.53 0.11±0.21 CAJGBR01 0.19±0.26 0.28±0.22 0.15±0.27 Chloroploca 0.19±1.8 0.54±3.06 0±0.01 Lamprocystis 0.18±0.88 0.27±0.97 0.13±0.82 FEN-1139 0.18±1.71 0±0 0.27±2.12 RUG14305 0.18±0.25 0.23±0.29 0.15±0.22 Alistipes_A 0.17±0.32 0.25±0.46 0.13±0.21 Smithella 0.17±1.55 0±0 0.26±1.92 UBA6186 0.17±1.46 0.46±2.47 0.01±0.08 Anaerovorax 0.17±0.32 0.19±0.31 0.15±0.32 Phocea 0.16±0.35 0.33±0.52 0.07±0.18 M3007 0.16±0.89 0±0 0.25±1.09 Romboutsia_D 0.16±0.34 0.28±0.49 0.1±0.21 Cetobacterium 0.16±0.45 0.13±0.33 0.17±0.5 JADLHS01 0.16±0.93 0.22±0.86 0.13±0.97 Scandinavium 0.15±0.85 0.06±0.36 0.19±1.02 Amedibacillus 0.15±0.43 0.03±0.15 0.2±0.51 JAGAJR01 0.14±0.29 0.21±0.29 0.11±0.28 Luteolibacter 0.14±0.53 0±0 0.22±0.65 GCA-2737665 0.13±0.89 0±0 0.2±1.09 Aminipila 0.13±0.18 0.17±0.21 0.11±0.16 CAIQJJ01 0.13±1.22 0±0 0.19±1.51 JADKHC01 0.13±1.2 0±0 0.19±1.49 JJ008 0.12±0.69 0±0 0.19±0.85 Intestinimonas 0.12±0.2 0.11±0.19 0.13±0.2 Citrobacter 0.12±1.12 0.33±1.89 0.01±0.07 Planktothrix 0.12±0.81 0.35±1.35 0±0.01 FEN-1279 0.12±0.81 0±0 0.18±0.99 Harryflintia 0.12±0.32 0.08±0.15 0.13±0.38 UBA5066 0.11±0.78 0.3±1.3 0.02±0.13 JACRCG01 0.11±0.7 0±0 0.18±0.86 Negativibacillus 0.11±0.35 0.16±0.39 0.09±0.33 Rhodoferax_C 0.11±0.86 0.01±0.05 0.16±1.06 CAIPUE01 0.11±0.28 0.15±0.26 0.09±0.29 WRKB01 0.11±0.21 0.15±0.24 0.09±0.2 Anaerotignum 0.1±0.23 0.09±0.21 0.11±0.24 Spyradomonas 0.1±0.3 0.14±0.29 0.08±0.3 TH-plancto1 0.1±0.94 0±0 0.15±1.17 Azonexus 0.09±0.43 0.15±0.63 0.06±0.28 Methanoregula 0.09±0.74 0±0 0.14±0.91 Pseudoflavonifractor 0.09±0.22 0.09±0.23 0.09±0.21 RGIG7389 0.08±0.15 0.15±0.18 0.04±0.11 UBA7488 0.08±0.28 0.21±0.43 0.01±0.08 UBA3961 0.08±0.37 0±0 0.12±0.45 RPPU01 0.08±0.75 0±0 0.12±0.93 RGIG5057 0.07±0.36 0.19±0.58 0.01±0.07 UMGS1202 0.07±0.14 0.16±0.2 0.03±0.06 CAIQQL01 0.07±0.65 0±0 0.11±0.81 Methanothrix 0.07±0.68 0±0 0.11±0.84 Egerieousia 0.07±0.19 0.12±0.24 0.04±0.16 UBA11358 0.07±0.35 0±0 0.11±0.43 IGN3 0.07±0.58 0.02±0.12 0.09±0.72 14-2 0.07±0.32 0.15±0.53 0.02±0.08 SKHV01 0.07±0.63 0±0 0.1±0.78 Butyribacter 0.06±0.61 0±0 0.1±0.76 CAIRTM01 0.06±0.39 0.08±0.37 0.06±0.41 OLB5 0.06±0.35 0±0 0.1±0.43 Methylocystis 0.06±0.28 0±0 0.1±0.35 Robinsoniella 0.06±0.21 0.02±0.07 0.08±0.25 UBA2475 0.06±0.39 0±0 0.09±0.48 JABFSR01 0.06±0.31 0±0 0.09±0.38 Paludibacter 0.06±0.54 0±0 0.09±0.67 Ruthenibacterium 0.06±0.2 0.06±0.23 0.05±0.18 UBA12294 0.06±0.31 0.08±0.46 0.04±0.21 Edwardsiella 0.05±0.17 0.04±0.13 0.06±0.19 CAJAUT01 0.05±0.43 0±0 0.08±0.53 JAKAJH01 0.05±0.39 0±0 0.08±0.48 CAIPTY01 0.05±0.28 0±0 0.08±0.35 Romboutsia_A 0.05±0.26 0.05±0.12 0.05±0.31 Bacteroides_G 0.05±0.25 0.1±0.4 0.03±0.11 Novimethylophilus 0.05±0.29 0±0 0.08±0.35 Vitreimonas 0.05±0.31 0±0 0.08±0.38 Shewanella 0.05±0.22 0±0 0.07±0.26 JAERTD01 0.05±0.37 0.03±0.11 0.06±0.46 JAGPHI01 0.05±0.25 0.01±0.03 0.07±0.31 Aliarcobacter 0.05±0.28 0.04±0.13 0.05±0.34 CAJLXD01 0.05±0.19 0.06±0.12 0.04±0.22 Methyloglobulus 0.05±0.22 0±0 0.07±0.26 JAHHUI01 0.04±0.26 0.12±0.43 0±0.03 Methanocorpusculum 0.04±0.16 0.02±0.05 0.06±0.2 Terracidiphilus 0.04±0.41 0±0 0.07±0.51 Methanobacterium_A 0.04±0.28 0.03±0.11 0.05±0.34 DYRC01 0.04±0.39 0±0 0.06±0.49 JAHHTP01 0.04±0.14 0.08±0.19 0.02±0.1 RGIG5270 0.04±0.22 0±0.01 0.06±0.27 Hylemonella 0.04±0.38 0±0 0.06±0.47 CALXSC01 0.04±0.22 0.05±0.22 0.04±0.21 Eubacterium_R 0.04±0.38 0±0 0.06±0.47 Scatenecus 0.04±0.15 0.02±0.09 0.05±0.18 Copranaerobaculum 0.04±0.16 0.01±0.04 0.06±0.19 RFTN01 0.04±0.22 0±0 0.06±0.27 JAEUNJ01 0.04±0.15 0±0 0.06±0.19 OLB17 0.04±0.24 0.09±0.4 0.01±0.07 Aureliella 0.04±0.29 0±0 0.06±0.36 FEN-979 0.04±0.21 0±0 0.06±0.25 Draconibacterium 0.04±0.16 0±0 0.05±0.19 UBA6024 0.03±0.21 0±0 0.05±0.25 Hespellia 0.03±0.19 0.02±0.06 0.04±0.23 Evtepia 0.03±0.06 0.06±0.08 0.02±0.04 Ferruginibacter 0.03±0.15 0±0 0.05±0.18 JAJBUQ01 0.03±0.06 0.04±0.07 0.02±0.06 Anaerobium 0.03±0.1 0.01±0.03 0.04±0.12 SHXO01 0.03±0.14 0±0 0.04±0.18 Bacilliculturomica 0.03±0.06 0.04±0.08 0.02±0.05 PALSA-1444 0.03±0.14 0±0 0.04±0.18 MGBC133411 0.03±0.16 0.07±0.26 0±0.02 2-12-FULL-35-15 0.03±0.22 0±0 0.04±0.27 Aestuariivirga 0.03±0.11 0±0 0.04±0.14 Syntrophorhabdus 0.03±0.2 0±0 0.04±0.25 Limnohabitans 0.03±0.16 0±0 0.04±0.2 JAAYQI01 0.03±0.1 0.05±0.14 0.01±0.06 IOR16 0.03±0.05 0.03±0.05 0.02±0.06 Coprobacillus 0.02±0.07 0.01±0.04 0.03±0.08 UBA5026 0.02±0.16 0.07±0.27 0±0.01 Massilioclostridium 0.02±0.08 0±0.02 0.03±0.09 JAFGIC01 0.02±0.23 0±0 0.04±0.28 CALURL01 0.02±0.1 0.04±0.13 0.01±0.07 AM-1111 0.02±0.16 0±0 0.04±0.19 Leadbetterella 0.02±0.12 0.02±0.1 0.03±0.13 Sulfuritalea 0.02±0.13 0±0 0.04±0.16 Aquisediminimonas 0.02±0.11 0±0 0.04±0.13 JAGOBP01 0.02±0.2 0±0 0.03±0.24 UBA8515 0.02±0.12 0±0 0.03±0.15 CHH4-2 0.02±0.06 0.02±0.04 0.02±0.07 GWF2-50-10 0.02±0.13 0±0 0.03±0.16 JAGOMW01 0.02±0.18 0±0 0.03±0.23 Merdenecus 0.02±0.08 0.02±0.04 0.02±0.1 UBA5195 0.02±0.12 0±0 0.03±0.15 Avimicrobium 0.02±0.04 0.03±0.05 0.02±0.03 UBA4417 0.02±0.19 0±0 0.03±0.24 JACRFF01 0.02±0.1 0±0 0.03±0.12 UBA3254 0.02±0.13 0±0 0.03±0.16 Plesiomonas 0.02±0.19 0.06±0.32 0±0 GWA2-36-10 0.02±0.15 0±0 0.03±0.18 Serratia_A 0.02±0.11 0.06±0.19 0±0 JAAYKM01 0.02±0.18 0±0 0.03±0.23 RGIG4140 0.02±0.12 0.03±0.15 0.02±0.11 UBA1794 0.02±0.08 0.04±0.13 0±0.02 PALSA-1004 0.02±0.15 0±0 0.03±0.18 WRDF01 0.02±0.05 0.01±0.04 0.02±0.06 M0103 0.02±0.12 0±0 0.03±0.15 Holophaga 0.02±0.18 0±0 0.03±0.22 MGBC102946 0.02±0.17 0.05±0.29 0±0 Hepatoplasma 0.02±0.17 0±0 0.03±0.21 UBA1306 0.02±0.17 0±0 0.03±0.21 UBA668 0.02±0.12 0±0 0.03±0.15 JAFGVL01 0.02±0.16 0±0 0.03±0.2 CAJATL01 0.02±0.1 0±0 0.03±0.13 Fluviibacter 0.02±0.05 0±0 0.02±0.06 CAJBLF01 0.02±0.15 0±0 0.02±0.18 UBA2192 0.02±0.09 0.01±0.03 0.02±0.1 Lacibacter 0.01±0.13 0±0 0.02±0.16 Massiliimalia 0.01±0.06 0±0.01 0.02±0.07 CAZU01 0.01±0.07 0.02±0.09 0.01±0.05 RGDT01 0.01±0.14 0±0 0.02±0.17 SSEF01 0.01±0.1 0±0 0.02±0.13 JAKJEI01 0.01±0.11 0±0 0.02±0.13 Intestinibacillus 0.01±0.05 0±0.01 0.02±0.06 RGIG8482 0.01±0.08 0.03±0.13 0±0.02 CADEED01 0.01±0.08 0±0 0.02±0.09 JAAZKV01 0.01±0.1 0±0 0.02±0.12 Morganella 0.01±0.09 0±0 0.02±0.11 JAEZVV01 0.01±0.09 0.03±0.16 0±0 HGM16780 0.01±0.05 0.01±0.05 0.01±0.05 JAJQEJ01 0.01±0.04 0.03±0.06 0±0.01 JAAYCI01 0.01±0.04 0.01±0.04 0.01±0.04 UBA9973 0.01±0.09 0±0 0.01±0.11 Cardinium 0.01±0.05 0±0 0.01±0.06 Rahnella 0.01±0.06 0±0 0.01±0.07 Brevinema 0.01±0.06 0.01±0.04 0.01±0.07 Polynucleobacter 0.01±0.03 0±0 0.01±0.04 JAGQMS01 0.01±0.03 0±0 0.01±0.04 Methylopumilus_A 0.01±0.04 0±0 0.01±0.05 UBA8529 0.01±0.05 0±0 0.01±0.06 UBA11704 0.01±0.05 0±0 0.01±0.06 Lumbricidophila 0.01±0.05 0±0 0.01±0.07 Flavobacterium 0.01±0.05 0±0 0.01±0.06 UBA10108 0.01±0.05 0±0 0.01±0.06 Rhodoferax 0±0.03 0±0 0.01±0.04 Acinetobacter 0±0.04 0±0 0.01±0.04 C7867-006 0±0.04 0±0 0.01±0.05 MWCR01 0±0.02 0±0 0.01±0.03 2-01-FULL-39-10-A 0±0.03 0±0 0.01±0.04 Aurantimicrobium 0±0.01 0±0 0±0.02 Cetobacterium_A 0±0.02 0.01±0.03 0±0 JACRJP01 0±0.02 0±0 0±0.02 Vogesella 0±0.01 0±0.02 0±0 genus_summary %&gt;% # left_join(sample_metadata,by=join_by(sample==sample)) %&gt;% mutate(genus=factor(genus, levels=rev(genus_summary_sort %&gt;% pull(genus)))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=genus, group=genus, color=phylum)) + scale_color_manual(values=phylum_colors) + geom_jitter(alpha=0.5) + facet_grid(.~season)+ theme_minimal() + theme( axis.text = element_text(size=6), )+ labs(y=&quot;Genus&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) 5.1.4 Archaea 9 "],["alpha-diversity.html", "Chapter 6 Alpha diversity 6.1 Types of pond 6.2 Season 6.3 Mixed models 6.4 Archaea diversity", " Chapter 6 Alpha diversity load(&quot;data/data.Rdata&quot;) # Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 0) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(richness = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(neutral = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, tree = genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(phylogenetic = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) # Aggregate basal GIFT into elements dist &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) %&gt;% traits2dist(., method = &quot;gower&quot;) functional &lt;- genome_counts_filt %&gt;% filter(genome %in% rownames(dist)) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, dist = dist) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(functional = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) %&gt;% mutate(functional = if_else(is.nan(functional), 1, functional)) # Merge all metrics alpha_div &lt;- richness %&gt;% full_join(neutral, by = join_by(sample == sample)) %&gt;% full_join(phylogenetic, by = join_by(sample == sample)) %&gt;% full_join(functional, by = join_by(sample == sample)) 6.1 Types of pond alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;alpha&quot;, values_to = &quot;value&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(alpha)%&gt;% summarise( natural_mean=mean(value[type==&quot;natural&quot;], na.rm=T), natural_sd=sd(value[type==&quot;natural&quot;], na.rm=T), protected_mean=mean(value[type==&quot;protected&quot;], na.rm=T), protected_sd=sd(value[type==&quot;protected&quot;], na.rm=T), urban_mean=mean(value[type==&quot;urban&quot;], na.rm=T), urban_sd=sd(value[type==&quot;urban&quot;], na.rm=T)) %&gt;% mutate( natural=str_c(round(natural_mean,2),&quot;±&quot;,round(natural_sd,2)), protected=str_c(round(protected_mean,2),&quot;±&quot;,round(protected_sd,2)), urban=str_c(round(urban_mean,2),&quot;±&quot;,round(urban_sd,2))) %&gt;% arrange(-natural_mean) %&gt;% dplyr::select(alpha,natural,protected,urban) %&gt;% tt() tinytable_vvnd3e5fo9oyxln7cm95 .table td.tinytable_css_mrtb4mxzpu7yqedye034, .table th.tinytable_css_mrtb4mxzpu7yqedye034 { border-bottom: solid 0.1em #d3d8dc; } alpha natural protected urban richness 145.35±68.16 144.62±85.26 217.74±86.34 neutral 60.95±35.84 60.27±38.1 97.94±54.33 phylogenetic 5.83±2.04 4.68±1.76 6.04±1.65 functional 1.51±0.11 1.5±0.13 1.53±0.04 6.1.1 Mixed models Call: glm.nb(formula = richness ~ type, data = alpha_div_meta, trace = TRUE, init.theta = 2.275508311, link = log) Coefficients: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 4.97914 0.10563 47.136 &lt;2e-16 *** typeprotected -0.00503 0.16294 -0.031 0.9754 typeurban 0.40415 0.17454 2.315 0.0206 * --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 (Dispersion parameter for Negative Binomial(2.2755) family taken to be 1) Null deviance: 107.32 on 91 degrees of freedom Residual deviance: 100.51 on 89 degrees of freedom AIC: 1100.1 Number of Fisher Scoring iterations: 1 Theta: 2.276 Std. Err.: 0.329 2 x log-likelihood: -1092.109 $emmeans type emmean SE df asymp.LCL asymp.UCL natural 4.98 0.106 Inf 4.77 5.19 protected 4.97 0.124 Inf 4.73 5.22 urban 5.38 0.139 Inf 5.11 5.66 Results are given on the log (not the response) scale. Confidence level used: 0.95 $contrasts contrast estimate SE df z.ratio p.value natural - protected 0.00503 0.163 Inf 0.031 0.9995 natural - urban -0.40415 0.175 Inf -2.315 0.0537 protected - urban -0.40918 0.186 Inf -2.197 0.0717 Results are given on the log (not the response) scale. P value adjustment: tukey method for comparing a family of 3 estimates Call: lm(formula = neutral ~ type, data = alpha_div_meta) Residuals: Min 1Q Median 3Q Max -88.737 -26.937 3.549 31.364 85.693 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 60.9496 6.6128 9.217 1.34e-14 *** typeprotected -0.6816 10.2003 -0.067 0.94687 typeurban 36.9903 10.9444 3.380 0.00108 ** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 41.82 on 89 degrees of freedom Multiple R-squared: 0.1335, Adjusted R-squared: 0.114 F-statistic: 6.854 on 2 and 89 DF, p-value: 0.001704 $emmeans type emmean SE df lower.CL upper.CL natural 60.9 6.61 89 47.8 74.1 protected 60.3 7.77 89 44.8 75.7 urban 97.9 8.72 89 80.6 115.3 Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value natural - protected 0.682 10.2 89 0.067 0.9975 natural - urban -36.990 10.9 89 -3.380 0.0031 protected - urban -37.672 11.7 89 -3.226 0.0050 P value adjustment: tukey method for comparing a family of 3 estimates Call: lm(formula = phylogenetic ~ type, data = alpha_div_meta) Residuals: Min 1Q Median 3Q Max -4.402 -1.413 0.164 1.367 4.652 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 5.8334 0.2947 19.797 &lt;2e-16 *** typeprotected -1.1581 0.4545 -2.548 0.0125 * typeurban 0.2054 0.4877 0.421 0.6747 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 1.864 on 89 degrees of freedom Multiple R-squared: 0.09065, Adjusted R-squared: 0.07022 F-statistic: 4.436 on 2 and 89 DF, p-value: 0.01457 $emmeans type emmean SE df lower.CL upper.CL natural 5.83 0.295 89 5.25 6.42 protected 4.68 0.346 89 3.99 5.36 urban 6.04 0.389 89 5.27 6.81 Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value natural - protected 1.158 0.455 89 2.548 0.0333 natural - urban -0.205 0.488 89 -0.421 0.9070 protected - urban -1.363 0.520 89 -2.620 0.0276 P value adjustment: tukey method for comparing a family of 3 estimates Call: lm(formula = functional ~ type, data = alpha_div_meta) Residuals: Min 1Q Median 3Q Max -0.50240 -0.04366 0.00296 0.04548 0.30361 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 1.50882 0.01674 90.147 &lt;2e-16 *** typeprotected -0.00642 0.02582 -0.249 0.804 typeurban 0.02055 0.02770 0.742 0.460 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 0.1059 on 89 degrees of freedom Multiple R-squared: 0.009947, Adjusted R-squared: -0.0123 F-statistic: 0.4471 on 2 and 89 DF, p-value: 0.6409 $emmeans type emmean SE df lower.CL upper.CL natural 1.51 0.0167 89 1.48 1.54 protected 1.50 0.0197 89 1.46 1.54 urban 1.53 0.0221 89 1.49 1.57 Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value natural - protected 0.00642 0.0258 89 0.249 0.9665 natural - urban -0.02055 0.0277 89 -0.742 0.7392 protected - urban -0.02697 0.0296 89 -0.913 0.6338 P value adjustment: tukey method for comparing a family of 3 estimates 6.2 Season alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;alpha&quot;, values_to = &quot;value&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(alpha)%&gt;% summarise( spring_mean=mean(value[season==&quot;spring&quot;], na.rm=T), spring_sd=sd(value[season==&quot;spring&quot;], na.rm=T), autumn_mean=mean(value[season==&quot;autumn&quot;], na.rm=T), autumn_sd=sd(value[season==&quot;autumn&quot;], na.rm=T)) %&gt;% mutate( spring=str_c(round(spring_mean,2),&quot;±&quot;,round(spring_sd,2)), autumn=str_c(round(autumn_mean,2),&quot;±&quot;,round(autumn_sd,2))) %&gt;% arrange(-spring_mean) %&gt;% dplyr::select(alpha,spring,autumn) %&gt;% tt() tinytable_uf7h4p7fjun3s5vfz38o .table td.tinytable_css_4pms07a00lleh53ezfsf, .table th.tinytable_css_4pms07a00lleh53ezfsf { border-bottom: solid 0.1em #d3d8dc; } alpha spring autumn richness 197.69±74.91 144.83±83.13 neutral 87.9±43.14 60.42±42.43 phylogenetic 6.37±1.49 5.07±2 functional 1.56±0.08 1.49±0.11 6.3 Mixed models Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(2.3372) ( log ) Formula: richness ~ season + (1 | region) Data: alpha_div_meta AIC BIC logLik deviance df.resid 1018.8 1028.5 -505.4 1010.8 81 Scaled residuals: Min 1Q Median 3Q Max -1.5013 -0.4107 0.1176 0.4930 1.4350 Random effects: Groups Name Variance Std.Dev. region (Intercept) 0.04928 0.222 Number of obs: 85, groups: region, 7 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 5.2868 0.1506 35.105 &lt;2e-16 *** seasonautumn -0.3553 0.1550 -2.291 0.0219 * --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) seasonautmn -0.677 Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 859.4568 869.1322 -425.7284 Random effects: Formula: ~1 | region (Intercept) Residual StdDev: 25.64075 36.43845 Fixed effects: neutral ~ season Value Std.Error DF t-value p-value (Intercept) 89.82463 11.888700 77 7.555463 0e+00 seasonautumn -30.15753 8.422162 77 -3.580735 6e-04 Correlation: (Intr) seasonautumn -0.474 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.4214707 -0.6488946 -0.1162460 0.8242623 2.2066427 Number of Observations: 85 Number of Groups: 7 Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 347.8052 357.4806 -169.9026 Random effects: Formula: ~1 | region (Intercept) Residual StdDev: 0.562179 1.740439 Fixed effects: phylogenetic ~ season Value Std.Error DF t-value p-value (Intercept) 6.410124 0.3915769 77 16.370026 0e+00 seasonautumn -1.492438 0.4020437 77 -3.712129 4e-04 Correlation: (Intr) seasonautumn -0.687 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.2720804 -0.5606016 -0.1095446 0.6383481 2.9697247 Number of Observations: 85 Number of Groups: 7 Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik -126.7179 -117.0425 67.35894 Random effects: Formula: ~1 | region (Intercept) Residual StdDev: 0.00578872 0.1026646 Fixed effects: functional ~ season Value Std.Error DF t-value p-value (Intercept) 1.5472387 0.01952476 77 79.24495 0.0000 seasonautumn -0.0596479 0.02369410 77 -2.51742 0.0139 Correlation: (Intr) seasonautumn -0.814 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -4.7315335 -0.3336353 -0.0652115 0.5090626 2.5724735 Number of Observations: 85 Number of Groups: 7 6.4 Archaea diversity sample richness neutral phylogenetic functional 1 EHI02583 2 1.996870 2.348233 1.279113 2 EHI02588 1 1.000000 1.000000 1.000000 3 EHI02643 1 1.000000 1.000000 1.000000 4 EHI02593 2 1.328193 1.409535 1.220665 5 EHI01585 1 1.000000 1.000000 1.000000 6 EHI02608 1 1.000000 1.000000 1.000000 7 EHI02611 1 1.000000 1.000000 1.000000 8 EHI02641 1 1.000000 1.000000 1.000000 9 EHI02571 2 1.139191 1.235919 1.081231 10 EHI02620 1 1.000000 1.000000 1.000000 11 EHI01449 1 1.000000 1.000000 1.000000 12 EHI02609 1 1.000000 1.000000 1.000000 13 EHI02572 3 2.112285 1.493212 1.293984 14 EHI01613 1 1.000000 1.000000 1.000000 15 EHI01618 1 1.000000 1.000000 1.000000 16 EHI01447 1 1.000000 1.000000 1.000000 17 EHI01627 1 1.000000 1.000000 1.000000 18 EHI02642 2 1.473791 1.756593 1.120537 19 EHI02646 4 2.604054 1.431005 1.596528 20 EHI02109 1 1.000000 1.000000 1.000000 21 EHI02579 1 1.000000 1.000000 1.000000 22 EHI02599 1 1.000000 1.000000 1.000000 23 EHI01628 1 1.000000 1.000000 1.000000 24 EHI01611 2 1.998461 1.563175 1.560517 25 EHI02637 1 1.000000 1.000000 1.000000 26 EHI01443 1 1.000000 1.000000 1.000000 27 EHI02638 3 1.730503 1.722158 1.387103 28 EHI02595 1 1.000000 1.000000 1.000000 29 EHI02574 1 1.000000 1.000000 1.000000 30 EHI02629 1 1.000000 1.000000 1.000000 31 EHI02631 1 1.000000 1.000000 1.000000 32 EHI02621 2 1.962914 1.943525 1.738397 33 EHI01442 2 1.989078 1.562265 1.554603 34 EHI02601 1 1.000000 1.000000 1.000000 35 EHI01438 NA NA NA 1.000000 36 EHI01612 NA NA NA 1.000000 37 EHI02095 NA NA NA 1.000000 38 EHI02596 NA NA NA 1.000000 39 EHI02635 NA NA NA 1.000000 40 EHI02104 NA NA NA 1.000000 41 EHI01631 NA NA NA 1.000000 42 EHI02597 NA NA NA 1.000000 43 EHI01450 NA NA NA 1.000000 44 EHI01610 NA NA NA 1.000000 45 EHI01436 NA NA NA 1.000000 46 EHI01437 NA NA NA 1.000000 47 EHI01440 NA NA NA 1.000000 48 EHI02586 NA NA NA 1.000000 49 EHI02628 NA NA NA 1.000000 50 EHI01451 NA NA NA 1.000000 51 EHI02591 NA NA NA 1.000000 52 EHI02581 NA NA NA 1.000000 53 EHI02115 NA NA NA 1.000000 54 EHI01619 NA NA NA 1.000000 55 EHI02610 NA NA NA 1.000000 56 EHI01439 NA NA NA 1.000000 57 EHI02128 NA NA NA 1.000000 58 EHI01617 NA NA NA 1.000000 59 EHI02626 NA NA NA 1.000000 60 EHI01620 NA NA NA 1.000000 61 EHI02606 NA NA NA 1.000000 62 EHI02604 NA NA NA 1.000000 63 EHI01444 NA NA NA 1.000000 64 EHI02085 NA NA NA 1.000000 65 EHI02616 NA NA NA 1.000000 66 EHI02594 NA NA NA 1.000000 67 EHI02613 NA NA NA 1.000000 68 EHI01625 NA NA NA 1.000000 69 EHI01448 NA NA NA 1.000000 70 EHI02589 NA NA NA 1.000000 71 EHI01623 NA NA NA 1.000000 72 EHI02634 NA NA NA 1.000000 73 EHI02640 NA NA NA 1.000000 74 EHI02636 NA NA NA 1.000000 75 EHI02578 NA NA NA 1.000000 76 EHI01616 NA NA NA 1.000000 77 EHI01584 NA NA NA 1.000000 78 EHI01445 NA NA NA 1.000000 79 EHI02622 NA NA NA 1.000000 80 EHI02614 NA NA NA 1.000000 81 EHI02580 NA NA NA 1.000000 82 EHI02627 NA NA NA 1.000000 83 EHI02618 NA NA NA 1.000000 84 EHI01441 NA NA NA 1.000000 85 EHI02605 NA NA NA 1.000000 86 EHI02573 NA NA NA 1.000000 87 EHI02577 NA NA NA 1.000000 88 EHI02576 NA NA NA 1.000000 89 EHI02623 NA NA NA 1.000000 90 EHI02600 NA NA NA 1.000000 91 EHI01621 NA NA NA 1.000000 92 EHI02575 NA NA NA 1.000000 6.4.1 Richness 6.4.2 Neutral 6.4.3 Phylogenetic "],["beta-diversity.html", "Chapter 7 Beta diversity 7.1 Permanova analysis 7.2 Beta diversity plots", " Chapter 7 Beta diversity load(&quot;data/data.Rdata&quot;) beta_q0n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 0) beta_q1n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1) beta_q1p &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, tree = genome_tree) genome_counts_filt_func &lt;- genome_counts_filt[genome_counts_filt$genome %in% rownames(genome_gifts),] beta_q1f &lt;- genome_counts_filt_func %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, dist = dist) 7.1 Permanova analysis sample_metadata_row&lt;- column_to_rownames(sample_metadata, &quot;sample&quot;) sample_metadata_row &lt;- sample_metadata_row[labels(beta_q0n$S), ] adonis2(beta_q0n$S ~ type*season, data = sample_metadata_row[labels(beta_q0n$S), ], permutations = 999, strata =sample_metadata_row$region) %&gt;% as.data.frame() Df SumOfSqs R2 F Pr(&gt;F) type 2 2.624800 0.07517287 3.759794 0.001 season 1 1.250006 0.03579951 3.581047 0.001 type:season 2 1.022745 0.02929087 1.464992 0.009 Residual 86 30.019299 0.85973675 NA NA Total 91 34.916849 1.00000000 NA NA pairwise.adonis(beta_q0n$S , sample_metadata_row$type, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 natural vs protected 1 1.4945608 3.928722 0.05538972 0.001 0.003 * 2 natural vs urban 1 1.4295754 3.980519 0.06125711 0.001 0.003 * 3 protected vs urban 1 0.9287237 2.701616 0.05126248 0.001 0.003 * adonis2(beta_q1n$S ~ type*season, data = sample_metadata_row[labels(beta_q1n$S), ], permutations = 999, strata =sample_metadata_row$region) %&gt;% as.data.frame() Df SumOfSqs R2 F Pr(&gt;F) type 2 2.9072765 0.08668888 4.395775 0.001 season 1 1.2163206 0.03626813 3.678130 0.001 type:season 2 0.9739734 0.02904184 1.472639 0.008 Residual 86 28.4393308 0.84800115 NA NA Total 91 33.5369012 1.00000000 NA NA pairwise.adonis(beta_q1n$S , sample_metadata_row$type, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 natural vs protected 1 1.825070 5.049915 0.07008912 0.001 0.003 * 2 natural vs urban 1 1.542930 4.372906 0.06689172 0.001 0.003 * 3 protected vs urban 1 0.852596 2.746432 0.05206859 0.002 0.006 * adonis2(beta_q1p$S ~ type*season, data = sample_metadata_row[labels(beta_q1p$S), ], permutations = 999, strata =sample_metadata_row$region) %&gt;% as.data.frame() Df SumOfSqs R2 F Pr(&gt;F) type 2 0.4864510 0.04998793 2.380091 0.046 season 1 0.2397501 0.02463683 2.346082 0.011 type:season 2 0.2166819 0.02226634 1.060174 0.259 Residual 86 8.7884847 0.90310890 NA NA Total 91 9.7313676 1.00000000 NA NA pairwise.adonis(beta_q1p$S , sample_metadata_row$type, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 natural vs protected 1 0.35879978 3.176095 0.04525894 0.010 0.030 . 2 natural vs urban 1 0.23973529 2.115983 0.03352531 0.062 0.186 3 protected vs urban 1 0.09409578 1.173328 0.02292850 0.316 0.948 adonis2(beta_q1f$S ~ type*season, data = sample_metadata_row[labels(beta_q1f$S), ], permutations = 999, strata =sample_metadata_row$region) %&gt;% as.data.frame() Df SumOfSqs R2 F Pr(&gt;F) type 2 0.308924953 0.067474181 3.1812415 0.579 season 1 0.008915335 0.001947253 0.1836163 0.761 type:season 2 0.084920076 0.018547911 0.8744883 0.415 Residual 86 4.175656857 0.912030655 NA NA Total 91 4.578417221 1.000000000 NA NA pairwise.adonis(beta_q1f$S , sample_metadata_row$type, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 natural vs protected 1 0.1456045 2.383894 0.03435803 0.111 0.333 2 natural vs urban 1 0.1339354 6.924509 0.10194419 0.025 0.075 3 protected vs urban 1 0.1910856 2.924612 0.05525996 0.074 0.222 #Richness betadisper(beta_q0n$S, sample_metadata$type) %&gt;% permutest(., pairwise = TRUE) adonis2(beta_q0n$S ~ type, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q0n$S))), permutations = 999, strata = sample_metadata %&gt;% arrange(match(sample,labels(beta_q0n$S))) %&gt;% pull(type)) %&gt;% broom::tidy() %&gt;% tt() #Neutral diversity betadisper(beta_q1n$S, sample_metadata$type) %&gt;% permutest(., pairwise = TRUE) adonis2(beta_q1n$S ~ type, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1n$S))), permutations = 999, strata = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1n$S))) %&gt;% pull(type)) %&gt;% broom::tidy() %&gt;% tt() #Phylogenetic diversity betadisper(beta_q1p$S, sample_metadata$type) %&gt;% permutest(., pairwise = TRUE) adonis2(beta_q1p$S ~ type, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1p$S))), permutations = 999, strata = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1p$S))) %&gt;% pull(type)) %&gt;% broom::tidy() %&gt;% tt() #Functional diversity betadisper(beta_q1f$S, sample_metadata$type) %&gt;% permutest(., pairwise = TRUE) adonis2(beta_q1f$S ~ type, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1f$S))), permutations = 999, strata = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1f$S))) %&gt;% pull(type)) %&gt;% broom::tidy() %&gt;% tt() 7.2 Beta diversity plots 7.2.1 Richness beta_q0n$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(season) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = season, fill = season, shape = as.factor(type))) + geom_point(size = 4) + scale_color_manual(values = season_colors) + #scale_shape_manual(values = 1:10) # stat_ellipse(aes(color = beta_q1n_nmds$Groups))+ geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9) + theme_classic() + theme( axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12), axis.title = element_text(size = 20, face = &quot;bold&quot;), axis.text = element_text(face = &quot;bold&quot;, size = 18), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 16), legend.title = element_text(size = 18), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(shape=&quot;Type of pond&quot;) 7.2.2 Neutral beta_q1n$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% # filter(!sample %in% c(&quot;EHI01629&quot;, &quot;EHI01630&quot;, &quot;EHI01614&quot;, &quot;EHI01662&quot;, &quot;EHI01446&quot;, &quot;EHI01624&quot;)) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = type, shape = as.factor(season))) + geom_point(size = 4) + # stat_ellipse(aes(color = beta_q1n_nmds$Groups))+ geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + scale_color_manual(values=type_colors)+ theme_classic() + theme( axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12), axis.title = element_text(size = 20, face = &quot;bold&quot;), axis.text = element_text(face = &quot;bold&quot;, size = 18), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 16), legend.title = element_text(size = 18), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(shape=&quot;Season&quot;,color=&#39;Type of pond&#39;) 7.2.2.1 In spring beta_q1n$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% # filter(!sample %in% c(&quot;EHI01629&quot;, &quot;EHI01630&quot;, &quot;EHI01614&quot;, &quot;EHI01662&quot;, &quot;EHI01446&quot;, &quot;EHI01624&quot;)) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% filter(!region %in% c(&quot;Eskoriatza&quot;,&quot;Villabona&quot;)) %&gt;% # filter(season==&quot;autumn&quot;) %&gt;% filter(season==&quot;spring&quot;) %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = type)) +#, shape = as.factor(type) geom_point(size = 4) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + scale_color_manual(values=type_colors)+ theme_classic() + theme( axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12), axis.title = element_text(size = 20, face = &quot;bold&quot;), axis.text = element_text(face = &quot;bold&quot;, size = 18), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 16), legend.title = element_text(size = 18), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(color=&#39;Type of pond&#39;) 7.2.2.2 In autumn beta_q1n$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% # filter(!sample %in% c(&quot;EHI01629&quot;, &quot;EHI01630&quot;, &quot;EHI01614&quot;, &quot;EHI01662&quot;, &quot;EHI01446&quot;, &quot;EHI01624&quot;)) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% filter(!region %in% c(&quot;Eskoriatza&quot;,&quot;Villabona&quot;)) %&gt;% filter(season==&quot;autumn&quot;) %&gt;% # filter(season==&quot;spring&quot;) %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = type)) + geom_point(size = 4) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + scale_color_manual(values=type_colors)+ theme_classic() + theme( axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12), axis.title = element_text(size = 20, face = &quot;bold&quot;), axis.text = element_text(face = &quot;bold&quot;, size = 18), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 16), legend.title = element_text(size = 18), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(color=&#39;Type of pond&#39;) 7.2.3 Phylogenetic beta_q1p$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% # filter(!sample %in% c(&quot;EHI01629&quot;, &quot;EHI01630&quot;, &quot;EHI01614&quot;, &quot;EHI01662&quot;, &quot;EHI01446&quot;, &quot;EHI01624&quot;)) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(season) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = season, shape = as.factor(type))) + geom_point(size = 4) + # stat_ellipse(aes(color = beta_q1n_nmds$Groups))+ geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + scale_color_manual(values=season_colors)+ theme_classic() + theme( axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12), axis.title = element_text(size = 20, face = &quot;bold&quot;), axis.text = element_text(face = &quot;bold&quot;, size = 18), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 16), legend.title = element_text(size = 18), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(shape=&quot;Type of pond&quot;,color=&#39;Season&#39;) beta_q1p$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% # filter(!sample %in% c(&quot;EHI01629&quot;, &quot;EHI01630&quot;, &quot;EHI01614&quot;, &quot;EHI01662&quot;, &quot;EHI01446&quot;, &quot;EHI01624&quot;)) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(region) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = region, shape = as.factor(season))) + geom_point(size = 4) + # stat_ellipse(aes(color = beta_q1n_nmds$Groups))+ geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + scale_color_manual(values=location_colors)+ theme_classic() + theme( axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12), axis.title = element_text(size = 20, face = &quot;bold&quot;), axis.text = element_text(face = &quot;bold&quot;, size = 18), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 16), legend.title = element_text(size = 18), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(shape=&quot;Season&quot;,color=&#39;Type of pond&#39;) 7.2.4 Functional beta_q1f$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% # filter(!sample %in% c(&quot;EHI01629&quot;, &quot;EHI01630&quot;, &quot;EHI01614&quot;, &quot;EHI01662&quot;, &quot;EHI01446&quot;, &quot;EHI01624&quot;)) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = type, shape = season)) + geom_point(size = 4) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + scale_color_manual(values=type_colors)+ theme_classic() + theme( axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12), axis.title = element_text(size = 20, face = &quot;bold&quot;), axis.text = element_text(face = &quot;bold&quot;, size = 18), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 16), legend.title = element_text(size = 18), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(shape=&quot;Season&quot;,color=&#39;Type of pond&#39;) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
