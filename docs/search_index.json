[["index.html", "AlberdiLab | Aizpurua et al. 2024 New pond metagenomics Chapter 1 Introduction 1.1 Prepare the R environment", " AlberdiLab | Aizpurua et al. 2024 New pond metagenomics Ostaizka Aizpurua1 Carlos Cabido2 Garazi Martin Bideguren3 Antton Alberdi4 2024-06-07 Chapter 1 Introduction This webbook contains all the code used for data analysis in study of gut microbiomes of newts across ponds included in a restoration plan. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/alberdilab/newt_pond_metagenomics.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(rairtable) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(ANCOMBC) library(lme4) University of Copenhagen, ostaizka.aizpurua@sund.ku.dk↩︎ Aranzadi Science Society↩︎ University of Copenhagen, garazi.bideguren@sund.ku.dk↩︎ University of Copenhagen, antton.alberdi@sund.ku.dk↩︎ "],["prepare-data.html", "Chapter 2 Prepare data 2.1 Load data 2.2 Create working objects 2.3 Prepare color scheme 2.4 Wrap working objects", " Chapter 2 Prepare data 2.1 Load data Load the original data files outputted by the bioinformatic pipeline. 2.1.1 Sample metadata sample_metadata &lt;- read_tsv(&quot;data/DMB0157_metadata.tsv.gz&quot;) %&gt;% rename(sample=1) %&gt;% mutate(season = case_when( startsWith(sample, &quot;EHI01&quot;) ~ &quot;spring&quot;, startsWith(sample, &quot;EHI02&quot;) ~ &quot;autumn&quot;, TRUE ~ NA_character_ # Default case if no match )) %&gt;% mutate(type = case_when( region %in% c(&quot;Villabona&quot;,&quot;Oñati&quot;,&quot;Irun&quot;,&quot;Usurbil&quot;) ~ &quot;natural&quot;, region %in% c(&quot;Eskoriatza&quot;,&quot;Aia&quot;,&quot;Errenteria&quot;,&quot;Zarautz&quot;) ~ &quot;protected&quot;, region %in% c(&quot;Donostia&quot;,&quot;Orio&quot;) ~ &quot;urban&quot;, TRUE ~ NA_character_ # Default case if no match )) 2.1.2 Read counts read_counts &lt;- read_tsv(&quot;data/DMB0157_counts.tsv.gz&quot;) %&gt;% rename(genome=1) 2.1.3 Genome base hits genome_coverage &lt;- read_tsv(&quot;data/DMB0157_coverage.tsv.gz&quot;) %&gt;% rename(genome=1) 2.1.4 Genome taxonomy genome_metadata &lt;- read_tsv(&quot;data/DMB0157_mag_info.tsv.gz&quot;) %&gt;% rename(length=mag_size) 2.1.5 Genome tree genome_tree &lt;- read_tree(&quot;data/DMB0157.tree&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names genome_tree &lt;- keep.tip(genome_tree, tip=genome_metadata$genome) # keep only MAG tips 2.1.6 Genome annotations genome_annotations &lt;- read_tsv(&quot;data/genome_annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) 2.2 Create working objects Transform the original data files into working objects for downstream analyses. 2.2.1 Filter reads by coverage min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.2.2 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 2.2.3 Distill annotations into GIFTs genome_gifts &lt;- distill(genome_annotations,GIFT_db,genomecol=2,annotcol=c(9,10,19), verbosity=F) 2.3 Prepare color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) 2.4 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, genome_gifts, phylum_colors, file = &quot;data/data.Rdata&quot;) "],["data-statistics.html", "Chapter 3 Data statistics 3.1 Sequencing reads statistics 3.2 DNA fractions 3.3 Recovered microbial fraction", " Chapter 3 Data statistics load(&quot;data/data.Rdata&quot;) 3.1 Sequencing reads statistics sample_metadata %&gt;% summarise(Total=sum(reads_post_fastp * 150 / 1000000000) %&gt;% round(2), mean=mean(reads_post_fastp * 150 / 1000000000) %&gt;% round(2), sd=sd(reads_post_fastp * 150 / 1000000000) %&gt;% round(2)) %&gt;% unite(&quot;Average&quot;,mean, sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% tt() tinytable_90vtzznoxtpz7tguzvgl .table td.tinytable_css_2wc7ixobhgoaykq84y71, .table th.tinytable_css_2wc7ixobhgoaykq84y71 { border-bottom: solid 0.1em #d3d8dc; } Total Average 430.45 4.26 ± 1.42 3.2 DNA fractions sequence_fractions &lt;- read_counts %&gt;% pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;value&quot;) %&gt;% group_by(sample) %&gt;% summarise(mags = sum(value)) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% select(sample,mags,metagenomic_bases,host_bases,bases_lost_fastp_percent) %&gt;% mutate(mags_bases = mags*146) %&gt;% mutate(lowqual_bases = ((metagenomic_bases+host_bases)/(1-bases_lost_fastp_percent))-(metagenomic_bases+host_bases)) %&gt;% mutate(unmapped_bases = metagenomic_bases - mags_bases) %&gt;% mutate(unmapped_bases = ifelse(unmapped_bases &lt; 0, 0, unmapped_bases)) %&gt;% select(sample, lowqual_bases, host_bases, unmapped_bases, mags_bases) sequence_fractions %&gt;% mutate_at(vars(-sample), ~./1000000000) %&gt;% rename(&quot;Sample&quot;=1, &quot;Low quality&quot;=2, &quot;Mapped to host&quot;=3, &quot;Unmapped&quot;=4, &quot;Mapped to MAGs&quot;=5) %&gt;% tt() tinytable_ysy2e6pvge6cseb6ppyx .table td.tinytable_css_iqzx8s559tvq28gayv7n, .table th.tinytable_css_iqzx8s559tvq28gayv7n { border-bottom: solid 0.1em #d3d8dc; } Sample Low quality Mapped to host Unmapped Mapped to MAGs EHI01436 0.10323450 0.002155664 1.9223563 0.14057376 EHI01437 0.14688974 0.001776019 1.3951997 3.75777530 EHI01438 0.11341031 0.001443667 1.0781908 2.93324556 EHI01439 0.09710566 0.000553848 0.7633965 2.39854085 EHI01440 0.08161119 0.000412702 0.6588022 2.80294070 EHI01441 0.09842650 0.001532668 0.9259464 2.26467053 EHI01442 0.09044909 0.003948668 1.3099571 1.91223033 EHI01443 0.08349080 0.001670709 0.7703155 1.97118600 EHI01444 0.15356698 0.008828658 1.8761546 2.25276496 EHI01445 0.24321310 0.000493809 0.6808145 2.86800064 EHI01446 0.17727243 0.070186879 3.8648901 0.15680269 EHI01447 0.07308100 0.000928745 0.5335369 1.86430335 EHI01448 0.16654049 0.001447619 1.2343569 4.00302946 EHI01449 0.08086772 0.000712056 1.9015472 0.56772173 EHI01450 0.09513485 0.000808493 0.6801877 2.40271908 EHI01451 0.15486528 0.006054971 1.2002374 3.09457074 EHI01584 0.31311426 0.001124632 1.1945509 4.46459065 EHI01585 0.43461750 0.010705116 4.7173126 5.56319787 EHI01610 0.09609182 0.002231717 0.7319288 2.22137350 EHI01611 0.12854248 0.002113926 2.0768251 1.11056915 EHI01612 0.09445979 0.000396947 0.8434826 2.27477884 EHI01613 0.11771235 0.003535185 0.8236243 2.34411760 EHI01614 0.15445312 0.058376688 3.1939022 0.10383885 EHI01615 0.26775560 0.083411317 4.5157066 0.13781889 EHI01616 0.13311594 0.000846441 1.0689190 2.28105071 EHI01617 0.10496582 0.000600034 0.7624687 1.66612338 EHI01618 0.15796519 0.001938639 1.4700412 1.45306500 EHI01619 0.21423836 0.001610432 2.1137921 2.57152267 EHI01620 0.15125219 0.002882104 1.5452853 1.20720363 EHI01621 0.14437434 0.000908440 0.8938030 2.84473642 EHI01622 0.16010359 0.063264765 3.5165558 0.10927355 EHI01623 0.13905131 0.000111578 0.8158237 2.89356495 EHI01624 0.18884989 0.063242557 3.4202961 0.10582109 EHI01625 0.13457413 0.004361014 0.9973074 3.14405452 EHI01626 0.14690235 0.061394825 3.1827381 0.09642935 EHI01627 0.11510846 0.000652453 0.8491846 2.40277675 EHI01628 0.13073679 0.002521283 1.2403353 1.86084796 EHI01629 0.14403646 0.052425047 2.8388237 0.08990987 EHI01630 0.11791092 0.042159742 2.3372056 0.07658488 EHI01631 0.09932800 0.001705834 0.8044096 1.77531722 EHI02085 0.57919563 0.018462021 2.6410532 1.29059649 EHI02095 0.48834211 0.013513952 3.4049831 3.18378200 EHI02104 0.53195157 0.007010599 2.7354830 0.81316072 EHI02109 1.28374828 0.008847543 4.9223937 0.24490536 EHI02115 0.92901178 0.003428911 3.9141515 0.19065498 EHI02128 0.96743572 0.007418441 4.7627289 0.16898799 EHI02571 0.13287769 0.000830065 1.3326271 2.42337662 EHI02572 0.23097718 0.001104376 4.2180228 0.66197962 EHI02573 0.23772138 0.000919831 1.4201215 2.90177102 EHI02574 0.18641515 0.001105944 1.2909807 2.51445595 EHI02575 0.16800006 0.000451116 0.7701716 3.10908854 EHI02576 0.27054446 0.001466596 1.2373298 4.37179582 EHI02577 0.13875010 0.000159264 0.6656173 3.11920576 EHI02578 0.18840997 0.000370817 0.9281657 3.79342865 EHI02579 0.17040671 0.000316117 1.1304582 2.89912711 EHI02580 0.14585212 0.002285096 1.1005491 2.55888783 EHI02581 0.31534501 0.004222759 1.1406810 3.45948869 EHI02583 0.19024490 0.002688647 2.5186672 1.41498835 EHI02586 0.16808497 0.000634686 1.2191413 2.86012073 EHI02588 0.22724830 0.000620576 1.3616533 3.96253913 EHI02589 0.17868765 0.001172553 1.3032228 2.88262020 EHI02590 0.18001338 0.000416849 3.4818120 0.01003195 EHI02591 0.24672078 0.005870858 5.1327559 0.11609000 EHI02593 0.28535188 0.001047289 1.7734727 3.51223396 EHI02594 0.14799113 0.001254245 2.2455458 0.78283346 EHI02595 0.17594927 0.000390443 0.8947388 2.65116816 EHI02596 0.19552510 0.000402096 0.8853602 3.90930111 EHI02597 0.16997179 0.003302624 1.8718822 2.27029869 EHI02599 0.24535794 0.002994709 1.6290468 3.25617683 EHI02600 0.16539330 0.000372951 2.5885522 0.78914504 EHI02601 0.20440033 0.000546487 1.2005389 3.29478799 EHI02604 0.13350290 0.000033019 0.5459000 2.24831357 EHI02605 0.23336073 0.000578456 0.7867636 4.00240210 EHI02606 0.21269906 0.000840830 0.9069484 4.52838330 EHI02608 0.16608092 0.000868246 1.2007537 2.21539480 EHI02609 0.18162303 0.000620091 1.2032065 3.45803993 EHI02610 0.18029349 0.000359149 1.0625221 3.04269811 EHI02611 0.14935861 0.000280047 0.9678059 2.31031466 EHI02613 0.13705908 0.001431597 0.6736314 2.75385288 EHI02614 0.18096790 0.000783821 1.1284081 2.27501989 EHI02616 0.14713007 0.000239190 0.5108695 2.35465880 EHI02618 0.17147141 0.000675857 0.9085123 2.63753628 EHI02620 0.15234767 0.000669926 0.8504433 2.26631084 EHI02621 0.18176981 0.000880545 2.0099358 2.33263631 EHI02622 0.20546598 0.000285185 1.1929782 3.39019490 EHI02623 0.14304619 0.000230072 0.5719310 2.72557253 EHI02626 0.20016240 0.000600853 0.9178175 2.61054132 EHI02627 0.16663385 0.001572916 2.4785902 0.65110510 EHI02628 0.14066292 0.000620136 0.5260281 1.86407529 EHI02629 0.15442873 0.001035638 1.3085973 2.62663840 EHI02631 0.28751065 0.003383238 4.2392404 1.34326512 EHI02634 0.27934868 0.001091891 2.4750414 3.24088595 EHI02635 0.30611130 0.001240215 1.3218018 4.73514062 EHI02636 0.33858819 0.000408731 1.2870087 6.26143207 EHI02637 0.25767107 0.000313024 1.3477516 5.69477117 EHI02638 0.26777696 0.001869868 1.9786471 3.30618562 EHI02640 0.20192954 0.002568987 1.1840044 3.29878050 EHI02641 0.53193661 0.006973676 3.8010965 4.56692336 EHI02642 0.35162886 0.000765507 5.4173877 1.45875812 EHI02643 0.33426863 0.001865962 5.7701855 1.11141741 EHI02646 0.35059944 0.008032777 6.5018324 1.15256692 sequence_fractions %&gt;% mutate_at(vars(-sample), ~./1000000000) %&gt;% rename(&quot;Sample&quot;=1, &quot;Low quality&quot;=2, &quot;Mapped to host&quot;=3, &quot;Unmapped&quot;=4, &quot;Mapped to MAGs&quot;=5) %&gt;% summarise(across(where(is.numeric), mean, na.rm = TRUE)) %&gt;% tt() tinytable_2bj8bga6v3nyh4wsrfe0 .table td.tinytable_css_tv922qi78hfzrgihwu4m, .table th.tinytable_css_tv922qi78hfzrgihwu4m { border-bottom: solid 0.1em #d3d8dc; } Low quality Mapped to host Unmapped Mapped to MAGs 0.2211859 0.006932909 1.856909 2.31753 sequence_fractions %&gt;% pivot_longer(!sample, names_to = &quot;fraction&quot;, values_to = &quot;value&quot;) %&gt;% mutate(value = value / 1000000000) %&gt;% mutate(fraction = factor(fraction, levels = c(&quot;lowqual_bases&quot;,&quot;host_bases&quot;,&quot;unmapped_bases&quot;,&quot;mags_bases&quot;))) %&gt;% ggplot(., aes(x = sample, y = value, fill=fraction)) + geom_bar(position=&quot;stack&quot;, stat = &quot;identity&quot;) + scale_fill_manual(name=&quot;Sequence type&quot;, breaks=c(&quot;lowqual_bases&quot;,&quot;host_bases&quot;,&quot;unmapped_bases&quot;,&quot;mags_bases&quot;), labels=c(&quot;Low quality&quot;,&quot;Mapped to host&quot;,&quot;Unmapped&quot;,&quot;Mapped to MAGs&quot;), values=c(&quot;#CCCCCC&quot;, &quot;#bcdee1&quot;, &quot;#d8b8a3&quot;,&quot;#93655c&quot;))+ labs(x = &quot;Samples&quot;, y = &quot;Amount of data (GB)&quot;) + theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size=6),legend.position = &quot;bottom&quot;) 3.3 Recovered microbial fraction singlem_table &lt;- sequence_fractions %&gt;% mutate(mags_proportion = round((mags_bases / (mags_bases + unmapped_bases))*100,2)) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% mutate(singlem_proportion = round(singlem_fraction*100,2)) %&gt;% select(sample,mags_proportion,singlem_proportion) %&gt;% mutate(mags_proportion = ifelse(singlem_proportion == 0, 0, mags_proportion)) %&gt;% #convert zeros to NA mutate(singlem_proportion = ifelse(singlem_proportion == 0, NA, singlem_proportion)) %&gt;% #convert zeros to NA mutate(singlem_proportion = ifelse(singlem_proportion &lt; mags_proportion, NA, singlem_proportion)) %&gt;% #if singlem is smaller, then NA, to simplify plot mutate(singlem_proportion = ifelse(singlem_proportion &gt; 100, 100, singlem_proportion)) #simplify singlem_table %&gt;% pivot_longer(!sample, names_to = &quot;proportion&quot;, values_to = &quot;value&quot;) %&gt;% mutate(proportion = factor(proportion, levels = c(&quot;mags_proportion&quot;,&quot;singlem_proportion&quot;))) %&gt;% ggplot(., aes(x = value, y = sample, color=proportion)) + geom_line(aes(group = sample), color = &quot;#f8a538&quot;) + geom_point() + scale_color_manual(name=&quot;Proportion&quot;, breaks=c(&quot;mags_proportion&quot;,&quot;singlem_proportion&quot;), labels=c(&quot;Recovered&quot;,&quot;Estimated&quot;), values=c(&quot;#52e1e8&quot;, &quot;#876b53&quot;))+ theme_classic() + labs(y = &quot;Samples&quot;, x = &quot;Prokaryotic fraction (%)&quot;) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size=6),legend.position = &quot;right&quot;) damr &lt;- singlem_table %&gt;% mutate(damr=ifelse(is.na(singlem_proportion),100,mags_proportion/singlem_proportion*100)) %&gt;% select(sample,damr) damr %&gt;% tt() tinytable_chwv2bko5smypgmbsipw .table td.tinytable_css_0com5pzhdgzzoy306f31, .table th.tinytable_css_0com5pzhdgzzoy306f31 { border-bottom: solid 0.1em #d3d8dc; } sample damr EHI01436 14.4986161 EHI01437 99.1164877 EHI01438 98.8375237 EHI01439 100.0000000 EHI01440 100.0000000 EHI01441 100.0000000 EHI01442 95.6024485 EHI01443 100.0000000 EHI01444 95.8538299 EHI01445 100.0000000 EHI01446 100.0000000 EHI01447 94.7477456 EHI01448 100.0000000 EHI01449 39.2588798 EHI01450 100.0000000 EHI01451 100.0000000 EHI01584 100.0000000 EHI01585 100.0000000 EHI01610 100.0000000 EHI01611 59.1009330 EHI01612 100.0000000 EHI01613 100.0000000 EHI01614 100.0000000 EHI01615 100.0000000 EHI01616 100.0000000 EHI01617 100.0000000 EHI01618 100.0000000 EHI01619 100.0000000 EHI01620 100.0000000 EHI01621 100.0000000 EHI01622 100.0000000 EHI01623 100.0000000 EHI01624 100.0000000 EHI01625 100.0000000 EHI01626 100.0000000 EHI01627 100.0000000 EHI01628 100.0000000 EHI01629 100.0000000 EHI01630 100.0000000 EHI01631 100.0000000 EHI02085 100.0000000 EHI02095 100.0000000 EHI02104 46.5839772 EHI02109 12.5996810 EHI02115 8.5419735 EHI02128 8.2432108 EHI02571 100.0000000 EHI02572 24.1803279 EHI02573 100.0000000 EHI02574 85.8070380 EHI02575 100.0000000 EHI02576 100.0000000 EHI02577 100.0000000 EHI02578 100.0000000 EHI02579 100.0000000 EHI02580 100.0000000 EHI02581 100.0000000 EHI02583 64.4854787 EHI02586 100.0000000 EHI02588 100.0000000 EHI02589 100.0000000 EHI02590 0.6833176 EHI02591 79.2114695 EHI02593 100.0000000 EHI02594 48.3901161 EHI02595 100.0000000 EHI02596 100.0000000 EHI02597 100.0000000 EHI02599 100.0000000 EHI02600 41.9163826 EHI02601 100.0000000 EHI02604 100.0000000 EHI02605 100.0000000 EHI02606 100.0000000 EHI02608 100.0000000 EHI02609 100.0000000 EHI02610 100.0000000 EHI02611 100.0000000 EHI02613 100.0000000 EHI02614 100.0000000 EHI02616 100.0000000 EHI02618 100.0000000 EHI02620 100.0000000 EHI02621 100.0000000 EHI02622 100.0000000 EHI02623 100.0000000 EHI02626 100.0000000 EHI02627 38.0534211 EHI02628 100.0000000 EHI02629 100.0000000 EHI02631 42.9642857 EHI02634 100.0000000 EHI02635 100.0000000 EHI02636 100.0000000 EHI02637 100.0000000 EHI02638 93.1506849 EHI02640 100.0000000 EHI02641 98.7158618 EHI02642 36.7527292 EHI02643 49.3280391 EHI02646 28.0603689 damr %&gt;% filter(damr&gt;95) %&gt;% nrow() [1] 80 damr %&gt;% summarise(mean=mean(damr),sd=sd(damr)) %&gt;% tt() tinytable_s2kgo9p6v7tyzyb2dnxs .table td.tinytable_css_kjj4qav4mkddw0ryp46z, .table th.tinytable_css_kjj4qav4mkddw0ryp46z { border-bottom: solid 0.1em #d3d8dc; } mean sd 88.1652 26.13339 "],["mag-catalogue.html", "Chapter 4 MAG catalogue 4.1 Genome phylogeny", " Chapter 4 MAG catalogue load(&quot;data/data.Rdata&quot;) 4.1 Genome phylogeny # Generate the phylum color heatmap phylum_heatmap &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(genome,phylum) %&gt;% mutate(phylum = factor(phylum, levels = unique(phylum))) %&gt;% column_to_rownames(var = &quot;genome&quot;) # Generate basal tree circular_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% # extend to ultrametric for the sake of visualisation ggtree(., layout=&quot;fan&quot;, open.angle=10, size=0.5) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** # Add phylum ring circular_tree &lt;- gheatmap(circular_tree, phylum_heatmap, offset=0.55, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + geom_tiplab2(size=1, hjust=-0.1) + theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) # Flush color scale to enable a new color scheme in the next ring circular_tree &lt;- circular_tree + new_scale_fill() # Add completeness ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_gradient(low = &quot;#d1f4ba&quot;, high = &quot;#f4baba&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=completeness, y=genome, fill=contamination), offset = 0.55, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add genome-size ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_manual(values = &quot;#cccccc&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=length, y=genome), offset = 0.05, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add text circular_tree &lt;- circular_tree + annotate(&#39;text&#39;, x=2.7, y=0, label=&#39; Phylum&#39;, family=&#39;arial&#39;, size=3.5) + annotate(&#39;text&#39;, x=3.1, y=0, label=&#39; Genome quality&#39;, family=&#39;arial&#39;, size=3.5) + annotate(&#39;text&#39;, x=3.5, y=0, label=&#39; Genome size&#39;, family=&#39;arial&#39;, size=3.5) #Plot circular tree circular_tree %&gt;% open_tree(30) %&gt;% rotate_tree(90) ## Taxonomy overview 4.1.1 Domains genome_metadata %&gt;% group_by(domain) %&gt;% summarise(mag_n=n()) %&gt;% arrange(-mag_n) %&gt;% tt() tinytable_xr9nl919jfd36g1qeqte .table td.tinytable_css_mui1hll4rn08yubq2bul, .table th.tinytable_css_mui1hll4rn08yubq2bul { border-bottom: solid 0.1em #d3d8dc; } domain mag_n d__Bacteria 1026 d__Archaea 9 4.1.2 Archaea genome_metadata %&gt;% filter(domain == &quot;d__Archaea&quot;) %&gt;% group_by(phylum) %&gt;% summarise(mag_n=n()) %&gt;% arrange(-mag_n) %&gt;% tt() tinytable_m3tsy20yj49g7g2ffsd9 .table td.tinytable_css_wrceh56hl2dprk3cebje, .table th.tinytable_css_wrceh56hl2dprk3cebje { border-bottom: solid 0.1em #d3d8dc; } phylum mag_n p__Halobacteriota 4 p__Thermoproteota 2 p__Iainarchaeota 1 p__Methanobacteriota 1 p__Nanoarchaeota 1 "],["bacteria.html", "Chapter 5 Bacteria 5.1 Genome quality 5.2 Functional overview 5.3 Functional ordination", " Chapter 5 Bacteria genome_metadata %&gt;% filter(domain == &quot;d__Bacteria&quot;) %&gt;% group_by(phylum) %&gt;% summarise(mag_n=n()) %&gt;% arrange(-mag_n) %&gt;% tt() tinytable_pvwa2q2q6tldh3gob0d1 .table td.tinytable_css_h2qj4hlvt7sm1obiayvr, .table th.tinytable_css_h2qj4hlvt7sm1obiayvr { border-bottom: solid 0.1em #d3d8dc; } phylum mag_n p__Bacteroidota 369 p__Bacillota_A 251 p__Pseudomonadota 157 p__Bacillota 54 p__Desulfobacterota 37 p__Verrucomicrobiota 29 p__Patescibacteria 27 p__Cyanobacteriota 23 p__Fusobacteriota 12 p__Chloroflexota 10 p__Bacillota_C 9 p__Deferribacterota 8 p__Acidobacteriota 6 p__Bacillota_B 5 p__Desulfobacterota_F 5 p__Actinomycetota 4 p__Planctomycetota 4 p__Spirochaetota 4 p__Campylobacterota 3 p__Myxococcota 2 p__ 1 p__Chlamydiota 1 p__Desulfobacterota_G 1 p__Fibrobacterota 1 p__J088 1 p__JAKLEM01 1 p__Omnitrophota 1 5.1 Genome quality genome_metadata %&gt;% summarise(completeness_mean=mean(completeness) %&gt;% round(2) %&gt;% as.character(), completeness_sd=sd(completeness) %&gt;% round(2) %&gt;% as.character(), contamination_mean=mean(contamination) %&gt;% round(2), contamination_sd=sd(contamination) %&gt;% round(2)) %&gt;% unite(&quot;Completeness&quot;,completeness_mean, completeness_sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% unite(&quot;Contamination&quot;,contamination_mean, contamination_sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% tt() tinytable_pgxhjh0q91rhuge3usrz .table td.tinytable_css_z5lingq4tm9xthsyx7kv, .table th.tinytable_css_z5lingq4tm9xthsyx7kv { border-bottom: solid 0.1em #d3d8dc; } Completeness Contamination 82.78 ± 17.27 1.9 ± 2.36 #Generate quality biplot genome_biplot &lt;- genome_metadata %&gt;% select(c(genome,domain,phylum,completeness,contamination,length)) %&gt;% arrange(match(genome, rev(genome_tree$tip.label))) %&gt;% #sort MAGs according to phylogenetic tree ggplot(aes(x=completeness,y=contamination,size=length,color=phylum)) + geom_point(alpha=0.7) + ylim(c(10,0)) + scale_color_manual(values=phylum_colors) + labs(y= &quot;Contamination&quot;, x = &quot;Completeness&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;) #Generate contamination boxplot genome_contamination &lt;- genome_metadata %&gt;% ggplot(aes(y=contamination)) + ylim(c(10,0)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0.40, 0),&quot;inches&quot;)) #add bottom-margin (top, right, bottom, left) #Generate completeness boxplot genome_completeness &lt;- genome_metadata %&gt;% ggplot(aes(x=completeness)) + xlim(c(50,100)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0, 0.50),&quot;inches&quot;)) #add left-margin (top, right, bottom, left) #Render composite figure grid.arrange(grobs = list(genome_completeness,genome_biplot,genome_contamination), layout_matrix = rbind(c(1,1,1,1,1,1,1,1,1,1,1,4), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3))) 5.2 Functional overview # Aggregate basal GIFT into elements function_table &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) # Generate basal tree function_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% ggtree(., size = 0.3) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** #Add phylum colors next to the tree tips function_tree &lt;- gheatmap(function_tree, phylum_heatmap, offset=0, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + labs(fill=&quot;Phylum&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() #Add functions heatmap function_tree &lt;- gheatmap(function_tree, function_table, offset=0.5, width=3.5, colnames=FALSE) + vexpand(.08) + coord_cartesian(clip = &quot;off&quot;) + scale_fill_gradient(low = &quot;#f4f4f4&quot;, high = &quot;steelblue&quot;, na.value=&quot;white&quot;) + labs(fill=&quot;GIFT&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() # Add completeness barplots function_tree &lt;- function_tree + geom_fruit(data=genome_metadata, geom=geom_bar, grid.params=list(axis=&quot;x&quot;, text.size=2, nbreak = 1), axis.params=list(vline=TRUE), mapping = aes(x=length, y=genome, fill=completeness), offset = 3.8, orientation=&quot;y&quot;, stat=&quot;identity&quot;) + scale_fill_gradient(low = &quot;#cf8888&quot;, high = &quot;#a2cc87&quot;) + labs(fill=&quot;Genome\\ncompleteness&quot;) function_tree 5.3 Functional ordination # Generate the tSNE ordination tSNE_function &lt;- Rtsne(X=function_table, dims = 2, check_duplicates = FALSE) # Plot the ordination function_ordination &lt;- tSNE_function$Y %&gt;% as.data.frame() %&gt;% mutate(genome=rownames(function_table)) %&gt;% inner_join(genome_metadata, by=&quot;genome&quot;) %&gt;% rename(tSNE1=&quot;V1&quot;, tSNE2=&quot;V2&quot;) %&gt;% select(genome,phylum,tSNE1,tSNE2, length) %&gt;% ggplot(aes(x = tSNE1, y = tSNE2, color = phylum, size=length))+ geom_point(shape=16, alpha=0.7) + scale_color_manual(values=phylum_colors) + theme_minimal() + labs(color=&quot;Phylum&quot;, size=&quot;Genome size&quot;) + guides(color = guide_legend(override.aes = list(size = 5))) # enlarge Phylum dots in legend function_ordination "],["community-composition.html", "Chapter 6 Community composition 6.1 Taxonomy overview 6.2 Taxonomy boxplot", " Chapter 6 Community composition load(&quot;data/data.Rdata&quot;) 6.1 Taxonomy overview 6.1.1 Stacked barplot genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata filter(count &gt; 0) %&gt;% #filter 0 counts filter(!region %in% c(&quot;Eskoriatza&quot;,&quot;Villabona&quot;)) %&gt;% mutate(season=factor(season,levels=c(&quot;spring&quot;,&quot;autumn&quot;))) %&gt;% ggplot(., aes(x=sample,y=count, fill=phylum, group=phylum)) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1) + #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + facet_nested(. ~ region + season, scales=&quot;free&quot;) + #facet per day and treatment guides(fill = guide_legend(ncol = 1)) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;)) + labs(fill=&quot;Phylum&quot;,y = &quot;Relative abundance&quot;,x=&quot;Samples&quot;) 6.1.2 Phylum relative abundances phylum_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% group_by(sample,phylum) %&gt;% summarise(relabun=sum(count)) phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(mean=mean(relabun, na.rm=T),sd=sd(relabun, na.rm=T)) %&gt;% arrange(-mean) %&gt;% tt() tinytable_c68egya5dt87b32yf8v6 .table td.tinytable_css_ybfqcmys3hcczvgk1bqs, .table th.tinytable_css_ybfqcmys3hcczvgk1bqs { border-bottom: solid 0.1em #d3d8dc; } phylum mean sd p__Bacteroidota 5.343095e-01 0.2519907920 p__Pseudomonadota 1.645302e-01 0.2419531297 p__Bacillota_A 1.173726e-01 0.1119657856 p__Verrucomicrobiota 6.425495e-02 0.1307490386 p__Bacillota 3.864721e-02 0.0557437562 p__Desulfobacterota 2.040387e-02 0.0455321718 p__Cyanobacteriota 1.229173e-02 0.0511979549 p__Chloroflexota 9.260914e-03 0.0348103508 p__Bacillota_C 7.321975e-03 0.0141655787 p__Fusobacteriota 5.510315e-03 0.0138032117 p__Acidobacteriota 4.080066e-03 0.0190287052 p__Myxococcota 4.068355e-03 0.0400686546 p__Deferribacterota 3.293351e-03 0.0101979152 p__Halobacteriota 2.359186e-03 0.0198236928 p__Planctomycetota 2.008858e-03 0.0118013745 p__Bacillota_B 1.960581e-03 0.0031366435 p__Patescibacteria 1.911343e-03 0.0075513434 p__Desulfobacterota_F 1.150444e-03 0.0052791223 p__Omnitrophota 9.022635e-04 0.0055473998 p__Spirochaetota 7.487452e-04 0.0040145371 p__Thermoproteota 6.566364e-04 0.0024634359 p__Methanobacteriota 5.711150e-04 0.0038712346 p__Campylobacterota 5.678102e-04 0.0028643134 p__ 4.695129e-04 0.0039676126 p__Fibrobacterota 3.213383e-04 0.0031648149 p__Actinomycetota 3.002860e-04 0.0015353729 p__Nanoarchaeota 2.012785e-04 0.0017966105 p__Desulfobacterota_G 1.890416e-04 0.0015463557 p__J088 1.850776e-04 0.0009813572 p__Chlamydiota 9.517468e-05 0.0004833040 p__JAKLEM01 3.852292e-05 0.0003794068 p__Iainarchaeota 1.778707e-05 0.0001338011 phylum_arrange &lt;- phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(mean=mean(relabun)) %&gt;% arrange(-mean) %&gt;% select(phylum) %&gt;% pull() phylum_summary %&gt;% filter(phylum %in% phylum_arrange) %&gt;% mutate(phylum=factor(phylum,levels=rev(phylum_arrange))) %&gt;% ggplot(aes(x=relabun, y=phylum, group=phylum, color=phylum)) + scale_color_manual(values=phylum_colors[rev(phylum_arrange)]) + geom_jitter(alpha=0.5) + theme_minimal() + theme(legend.position=&quot;none&quot;) + labs(y=&quot;Phylum&quot;,x=&quot;Relative abundance&quot;) 6.2 Taxonomy boxplot 6.2.1 Family family_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,family) %&gt;% summarise(relabun=sum(count)) family_summary %&gt;% group_by(family) %&gt;% summarise(mean=mean(relabun, na.rm=T),sd=sd(relabun, na.rm=T)) %&gt;% arrange(-mean) %&gt;% tt() tinytable_6owp328en39o6hkorigv .table td.tinytable_css_wphl3doss8utwkfr21p5, .table th.tinytable_css_wphl3doss8utwkfr21p5 { border-bottom: solid 0.1em #d3d8dc; } family mean sd f__Bacteroidaceae 2.102427e-01 1.955594e-01 f__Rikenellaceae 1.611894e-01 1.562459e-01 f__Tannerellaceae 7.299129e-02 6.664188e-02 f__Aeromonadaceae 5.225319e-02 1.358185e-01 f__Akkermansiaceae 4.800341e-02 1.226970e-01 f__Marinifilaceae 4.290443e-02 4.962259e-02 f__Lachnospiraceae 3.407472e-02 4.248629e-02 f__Ruminococcaceae 3.081005e-02 2.965309e-02 f__Deianiraeaceae 2.805932e-02 1.434462e-01 f__Mycoplasmoidaceae 2.649540e-02 4.798929e-02 f__Enterobacteriaceae 2.607933e-02 7.653830e-02 f__ 2.249364e-02 2.866260e-02 f__Clostridiaceae 1.941957e-02 4.169059e-02 f__Chromatiaceae 1.597569e-02 6.719385e-02 f__Desulfovibrionaceae 1.448492e-02 1.705853e-02 f__Erysipelotrichaceae 1.104908e-02 1.821438e-02 f__Butyricicoccaceae 9.720683e-03 4.494263e-02 f__Diplorickettsiaceae 8.263333e-03 7.249115e-02 f__Chlorobiaceae 8.082269e-03 5.368685e-02 f__CAIVKH01 6.960373e-03 4.385676e-02 f__Chromobacteriaceae 5.687977e-03 3.831936e-02 f__Fusobacteriaceae 5.510315e-03 1.380321e-02 f__Cellulosilyticaceae 5.241853e-03 9.208240e-03 f__VadinHA17 5.088929e-03 1.977358e-02 f__P3 5.008918e-03 1.069121e-02 f__FACHB-T130 4.282697e-03 4.152157e-02 f__Smithellaceae 4.231674e-03 3.872303e-02 f__Oscillospiraceae 4.122127e-03 4.776696e-03 f__Polyangiaceae 4.068355e-03 4.006865e-02 f__SHND01 4.066311e-03 2.670163e-02 f__CAG-239 3.660798e-03 6.287971e-03 f__Chitinophagaceae 3.547368e-03 1.671262e-02 f__Rhodocyclaceae 3.546631e-03 1.999856e-02 f__Methylomonadaceae 3.358104e-03 2.173751e-02 f__Gastranaerophilaceae 3.310922e-03 6.652166e-03 f__Mucispirillaceae 3.293351e-03 1.019792e-02 f__Microcoleaceae 3.259645e-03 2.029315e-02 f__UBA6186 2.990942e-03 2.556453e-02 f__EnvOPS12 2.866794e-03 9.720216e-03 f__UBA11358 2.831247e-03 1.079693e-02 f__Anaerovoracaceae 2.355592e-03 2.819219e-03 f__UBA1997 2.353806e-03 6.323583e-03 f__Peptostreptococcaceae 2.204895e-03 8.095665e-03 f__Pumilibacteraceae 2.190757e-03 6.124917e-03 f__CHK158-818 2.050734e-03 3.904830e-03 f__Peptococcaceae 1.960581e-03 3.136644e-03 f__Muribaculaceae 1.944857e-03 3.177931e-03 f__Methanotrichaceae 1.861022e-03 1.802606e-02 f__Burkholderiaceae_B 1.860907e-03 8.600392e-03 f__Methylococcaceae 1.799044e-03 1.156777e-02 f__Palsa-965 1.607561e-03 1.047557e-02 f__Competibacteraceae 1.594056e-03 1.515395e-02 f__UBA3637 1.458445e-03 3.362239e-03 f__Prolixibacteraceae 1.429249e-03 6.122270e-03 f__UBA5704 1.424231e-03 1.402705e-02 f__B-1AR 1.402641e-03 1.006339e-02 f__Chloroflexaceae 1.400177e-03 1.355414e-02 f__Succinispiraceae 1.397250e-03 2.545125e-03 f__B-17BO 1.328598e-03 8.384278e-03 f__Microcystaceae_B 1.272683e-03 1.173539e-02 f__FEN-979 1.241677e-03 7.686017e-03 f__Pirellulaceae 1.154158e-03 9.332434e-03 f__Massilibacillaceae 1.109284e-03 5.877503e-03 f__Methylophilaceae 1.037785e-03 5.355410e-03 f__Beijerinckiaceae 1.035186e-03 4.457229e-03 f__CAG-465 9.274101e-04 4.611188e-03 f__Ignavibacteriaceae 9.217538e-04 8.213255e-03 f__Anaerotignaceae 9.086293e-04 1.650081e-03 f__Profunditerraquicolaceae 9.022635e-04 5.547400e-03 f__Pseudopelobacteraceae 8.857441e-04 5.074400e-03 f__UBA4417 8.455976e-04 5.163518e-03 f__UBA5066 8.403140e-04 5.601038e-03 f__UBA3700 8.067207e-04 2.729698e-03 f__Pyrinomonadaceae 7.220263e-04 5.094091e-03 f__Opitutaceae 7.101304e-04 6.993974e-03 f__Victivallaceae 7.026208e-04 3.743327e-03 f__Thermoanaerobaculaceae 6.814796e-04 6.711796e-03 f__HGW-15 6.374558e-04 4.579831e-03 f__4484-276 6.317310e-04 4.568187e-03 f__Acutalibacteraceae 6.098025e-04 4.563323e-03 f__Paludibacteraceae 5.835103e-04 5.070989e-03 f__Methanobacteriaceae 5.711150e-04 3.871235e-03 f__UBA10030 5.519425e-04 3.031739e-03 f__OLB5 5.252756e-04 3.582377e-03 f__UBA3830 5.136412e-04 1.407875e-03 f__F082 4.928572e-04 3.895817e-03 f__Shewanellaceae 4.927823e-04 2.267869e-03 f__DYRC01 4.772738e-04 4.700602e-03 f__Sedimentibacteraceae 4.667661e-04 1.389224e-03 f__JADJPG01 4.263615e-04 2.960895e-03 f__UBA932 4.156228e-04 1.178640e-03 f__Fen-1058 4.086113e-04 3.836266e-03 f__Arcobacteraceae 3.795084e-04 2.546493e-03 f__UBA927 3.720772e-04 1.914678e-03 f__Rectinemataceae 3.564056e-04 3.510188e-03 f__WRBN01 3.333468e-04 1.999495e-03 f__GWF2-50-10 3.327121e-04 2.480457e-03 f__Steroidobacteraceae 3.265626e-04 2.177059e-03 f__Hepatoplasmataceae 2.940398e-04 2.271892e-03 f__Planctomycetaceae 2.891817e-04 2.848110e-03 f__Methanocorpusculaceae 2.866192e-04 1.094065e-03 f__UBA4823 2.816756e-04 2.774183e-03 f__Staskawiczbacteraceae 2.657578e-04 2.400392e-03 f__CAIRTM01 2.647003e-04 1.610403e-03 f__UBA4778 2.605813e-04 1.471595e-03 f__Coprobacillaceae 2.512556e-04 7.367047e-04 f__JAAUTT01 2.497687e-04 1.342951e-03 f__Spirosomaceae 2.470890e-04 1.347542e-03 f__JAAYKM01 2.396380e-04 2.360160e-03 f__UBA3254 2.373440e-04 1.827176e-03 f__Gemmataceae 2.328062e-04 2.292876e-03 f__Saprospiraceae 2.317820e-04 1.292124e-03 f__UBA660 2.309557e-04 1.425198e-03 f__Holophagaceae 2.166536e-04 2.133790e-03 f__UBA12108 2.154250e-04 1.514456e-03 f__2-12-FULL-35-15 2.127537e-04 1.727718e-03 f__Methanoregulaceae 2.115446e-04 1.818352e-03 f__GW2011-AR1 2.012785e-04 1.796610e-03 f__Terrimicrobiaceae 1.978209e-04 7.709831e-04 f__Acidobacteriaceae 1.953616e-04 1.924089e-03 f__Syntrophorhabdaceae 1.890416e-04 1.546356e-03 f__UBA6016 1.883018e-04 1.303750e-03 f__UBA3375 1.862708e-04 7.937741e-04 f__Flavobacteriaceae 1.829016e-04 1.620468e-03 f__DUVY01 1.822525e-04 5.064739e-04 f__SHXO01 1.797211e-04 8.927506e-04 f__RUG14156 1.657852e-04 9.670025e-04 f__UBA2023 1.651542e-04 1.140732e-03 f__SPBP01 1.589463e-04 1.014813e-03 f__LL51 1.572266e-04 9.059455e-04 f__Crocinitomicaceae 1.549871e-04 1.052732e-03 f__2-12-FULL-60-25 1.541342e-04 1.081327e-03 f__Lutisporaceae 1.460459e-04 3.785647e-04 f__Aestuariivirgaceae 1.447142e-04 5.908593e-04 f__Eubacteriaceae 1.393410e-04 4.869468e-04 f__SG8-41 1.297459e-04 9.992533e-04 f__UBA9973 1.294228e-04 9.028722e-04 f__UBA5976 1.252602e-04 7.247546e-04 f__UBA1820 1.181123e-04 2.910814e-04 f__Sphingomonadaceae 1.152657e-04 5.446202e-04 f__Absconditicoccaceae 1.132011e-04 8.067896e-04 f__Ilumatobacteraceae 1.119473e-04 7.628420e-04 f__TH1-2 1.094839e-04 6.706470e-04 f__Rhabdochlamydiaceae 9.517468e-05 4.833040e-04 f__Amoebophilaceae 9.033159e-05 5.611765e-04 f__Mycoplasmataceae 8.841740e-05 5.867263e-04 f__Burkholderiaceae 8.225897e-05 3.422233e-04 f__JAGQMS01 7.555860e-05 3.616569e-04 f__JAFDDL01 7.232997e-05 7.123676e-04 f__Tenuifilaceae 7.192224e-05 5.390355e-04 f__Burkholderiaceae_A 6.890317e-05 6.000937e-04 f__Rhizobiaceae 6.770667e-05 3.322745e-04 f__UBA5272 6.344839e-05 5.321556e-04 f__JAGOQP01 6.336248e-05 6.240480e-04 f__Microbacteriaceae 6.307851e-05 4.535380e-04 f__SZUA-47 6.279603e-05 3.586105e-04 f__Moraxellaceae 5.992173e-05 4.649041e-04 f__Brevinemataceae 5.899281e-05 3.455812e-04 f__CAG-508 5.239573e-05 3.378165e-04 f__UBA1709 5.179159e-05 5.100880e-04 f__UBA1568 4.952088e-05 2.986606e-04 f__XYD1-FULL-46-19 4.915817e-05 4.354164e-04 f__JAKLEM01 3.852292e-05 3.794068e-04 f__CAIOMD01 3.103415e-05 1.937893e-04 f__GWA2-36-10 2.884440e-05 2.345672e-04 f__PALSA-1337 2.249398e-05 1.820714e-04 f__UBA12049 1.906267e-05 1.685139e-04 f__JAAZKV01 1.778707e-05 1.338011e-04 f__Zambryskibacteraceae 1.740558e-05 1.410053e-04 f__UBA920 1.348493e-05 9.984023e-05 family_arrange &lt;- family_summary %&gt;% group_by(family) %&gt;% summarise(mean=sum(relabun)) %&gt;% arrange(-mean) %&gt;% select(family) %&gt;% pull() # Per origin family_summary %&gt;% left_join(genome_metadata %&gt;% select(family,phylum) %&gt;% unique(),by=join_by(family==family)) %&gt;% left_join(sample_metadata,by=join_by(sample==sample)) %&gt;% filter(family %in% family_arrange[1:20]) %&gt;% mutate(family=factor(family,levels=rev(family_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=family, group=family, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + facet_grid(.~region)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) # Per season family_summary %&gt;% left_join(genome_metadata %&gt;% select(family,phylum) %&gt;% unique(),by=join_by(family==family)) %&gt;% left_join(sample_metadata,by=join_by(sample==sample)) %&gt;% filter(family %in% family_arrange[1:20]) %&gt;% mutate(family=factor(family,levels=rev(family_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=family, group=family, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + facet_grid(.~season)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) 6.2.2 Genus genus_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,phylum,genus) %&gt;% summarise(relabun=sum(count)) %&gt;% filter(genus != &quot;g__&quot;) %&gt;% mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) genus_summary_sort &lt;- genus_summary %&gt;% group_by(genus) %&gt;% summarise(mean=mean(relabun, na.rm=T),sd=sd(relabun, na.rm=T)) %&gt;% arrange(-mean) genus_summary_sort %&gt;% tt() tinytable_bd153y65zlbpszmi5qc6 .table td.tinytable_css_kidw3zf5crti2rjm6rah, .table th.tinytable_css_kidw3zf5crti2rjm6rah { border-bottom: solid 0.1em #d3d8dc; } genus mean sd Bacteroides 2.046402e-01 1.953733e-01 Mucinivorans 9.924394e-02 1.365473e-01 Parabacteroides 6.237195e-02 5.788498e-02 Aeromonas 5.225319e-02 1.358185e-01 CAJQOT01 2.805932e-02 1.434462e-01 Odoribacter 2.218113e-02 3.013106e-02 Luteolibacter 2.154040e-02 1.200740e-01 Mycoplasma_L 2.040488e-02 4.176073e-02 Akkermansia 1.792041e-02 3.645298e-02 JADFUS01 1.681497e-02 1.658130e-02 Rikenella 1.564868e-02 2.937705e-02 Clostridium 1.199086e-02 2.212868e-02 Thiodictyon 1.147645e-02 4.824596e-02 Parabacteroides_B 1.010987e-02 1.489169e-02 Hafnia 9.663663e-03 3.830939e-02 UBA866 9.264589e-03 1.479609e-02 Aquirickettsiella 8.263333e-03 7.249115e-02 Sarcina 7.428710e-03 2.241766e-02 CAIVKH01 6.960373e-03 4.385676e-02 SZUA-378 6.661372e-03 1.838064e-02 Buttiauxella 6.566993e-03 2.598993e-02 Malacoplasma 6.090519e-03 2.462978e-02 Chlorobaculum 5.395630e-03 3.800456e-02 LD21 5.088929e-03 1.977358e-02 Citrobacter 4.984853e-03 4.796159e-02 Clostridium_Q 4.898432e-03 5.777642e-03 Alistipes 4.515880e-03 6.268518e-03 Hydrogenoanaerobacterium 4.388173e-03 9.024943e-03 FACHB-831 4.282697e-03 4.152157e-02 Vogesella 4.209095e-03 3.678975e-02 Smithella 4.156714e-03 3.798709e-02 SHND01 4.066311e-03 2.670163e-02 OM05-12 3.832406e-03 7.079937e-03 Angelakisella 3.793239e-03 4.933497e-03 Mobilisporobacter 3.653987e-03 1.032287e-02 Hungatella_A 3.630470e-03 6.092968e-03 RUG14305 3.311659e-03 4.971494e-03 JAGNZR01 3.281321e-03 9.557152e-03 Planktothrix 3.259645e-03 2.029315e-02 Tidjanibacter 3.180993e-03 5.865598e-03 UBA6186 2.990942e-03 2.556453e-02 FEN-1139 2.985961e-03 2.940831e-02 UMGS1251 2.826349e-03 4.504858e-03 UBA4132 2.776893e-03 1.944849e-02 Chlorobium 2.686638e-03 1.735463e-02 Butyribacter 2.665450e-03 2.625164e-02 Anaerorhabdus 2.588275e-03 9.581133e-03 Budvicia 2.586054e-03 9.218207e-03 Anaerotruncus 2.560824e-03 3.945328e-03 Dielma 2.369700e-03 3.784755e-03 Cetobacterium 2.216413e-03 6.456951e-03 Bilophila 2.076060e-03 3.433354e-03 HGM05232 1.944857e-03 3.177931e-03 JJ008 1.922642e-03 1.060181e-02 Gallalistipes 1.872220e-03 5.691823e-03 Methanothrix 1.861022e-03 1.802606e-02 Alistipes_A 1.829938e-03 3.396041e-03 Gallibacteroides 1.761646e-03 3.783251e-03 OLB14 1.748534e-03 7.893428e-03 CAKVBE01 1.683165e-03 5.685339e-03 GCA-2737665 1.607561e-03 1.047557e-02 RXIV01 1.594056e-03 1.515395e-02 Craterilacuibacter 1.478882e-03 1.128967e-02 FEN-1279 1.402641e-03 1.006339e-02 Chloroploca 1.400177e-03 1.355414e-02 Avirikenella 1.328205e-03 3.941073e-03 FEN-979 1.241677e-03 7.686017e-03 Intestinimonas 1.237653e-03 2.071632e-03 JADLHS01 1.230710e-03 7.499137e-03 Aureliella 1.154158e-03 9.332434e-03 Amedibacillus 1.048792e-03 3.272116e-03 Lamprocystis 1.048543e-03 4.898854e-03 Methylocystis 1.035186e-03 4.457229e-03 Novimethylophilus 9.868698e-04 5.353028e-03 CAJGBR01 9.829659e-04 1.426779e-03 UBA2475 9.743695e-04 6.097399e-03 Edwardsiella 9.489498e-04 3.070027e-03 RGIG5057 9.274101e-04 4.611188e-03 IGN3 9.217538e-04 8.213255e-03 Phocea 9.159914e-04 1.927484e-03 Romboutsia_D 8.946029e-04 1.950782e-03 UMGS1202 8.728213e-04 1.804112e-03 Romboutsia_A 8.584861e-04 5.034388e-03 UBA5066 8.403140e-04 5.601038e-03 UBA11358 8.313474e-04 4.169886e-03 CAIPUE01 8.191449e-04 2.427991e-03 Ferruginibacter 8.056303e-04 3.536915e-03 Anaerovorax 7.982578e-04 1.578540e-03 Azonexus 7.884278e-04 3.623383e-03 JABFSR01 7.691890e-04 3.989412e-03 JAGAJR01 7.650787e-04 1.550967e-03 Ruthenibacterium 7.410260e-04 2.767581e-03 UBA12294 7.405956e-04 3.885705e-03 OLB17 7.220263e-04 5.094091e-03 Bacteroides_G 7.161553e-04 3.813060e-03 JADKHC01 7.101304e-04 6.993974e-03 RGIG7389 6.985219e-04 1.404616e-03 Spyradomonas 6.922726e-04 2.236942e-03 Aminipila 6.825982e-04 9.886491e-04 UBA7488 6.802755e-04 2.335154e-03 Pseudoflavonifractor 6.421531e-04 1.658772e-03 Draconibacterium 6.410029e-04 2.707084e-03 Harryflintia 6.363666e-04 1.746416e-03 Evtepia 6.322927e-04 1.259868e-03 CAJATL01 6.317310e-04 4.568187e-03 Rhodoferax_C 6.305115e-04 4.874058e-03 RGIG5270 6.160249e-04 3.441629e-03 Methyloglobulus 5.812108e-04 2.705964e-03 UBA3961 5.724647e-04 2.628789e-03 Methanobacterium_A 5.711150e-04 3.871235e-03 Anaerotignum 5.595837e-04 1.290580e-03 Bacilliculturomica 5.428876e-04 1.259364e-03 Robinsoniella 5.385790e-04 2.056733e-03 14-2 5.263276e-04 2.565653e-03 OLB5 5.252756e-04 3.582377e-03 Hylemonella 5.252227e-04 5.172844e-03 Paludibacter 5.231717e-04 5.042377e-03 Scandinavium 5.102891e-04 3.105545e-03 JAERTD01 4.928572e-04 3.895817e-03 Shewanella 4.927823e-04 2.267869e-03 DYRC01 4.772738e-04 4.700602e-03 Copranaerobaculum 4.711817e-04 1.711813e-03 CAIPTY01 4.631029e-04 2.626182e-03 Eubacterium_R 4.598877e-04 4.529369e-03 WRKB01 4.365612e-04 8.420634e-04 JACRCG01 4.226413e-04 2.489191e-03 SKHV01 4.204799e-04 4.141246e-03 Egerieousia 4.156228e-04 1.178640e-03 JAGOBP01 4.086113e-04 3.836266e-03 Limnohabitans 4.058024e-04 2.403611e-03 RPPU01 4.053898e-04 3.992626e-03 JAKAJH01 3.996183e-04 2.723998e-03 Aliarcobacter 3.795084e-04 2.546493e-03 UBA5195 3.776642e-04 2.283696e-03 UBA6024 3.677665e-04 2.219403e-03 JAJBUQ01 3.634658e-04 7.678166e-04 UBA1306 3.564056e-04 3.510188e-03 AM-1111 3.542287e-04 2.303794e-03 Scatenecus 3.470350e-04 1.621431e-03 UBA1794 3.361116e-04 1.492346e-03 JAHHUI01 3.333468e-04 1.999495e-03 GWF2-50-10 3.327121e-04 2.480457e-03 CADEED01 3.265626e-04 2.177059e-03 CAZU01 3.230268e-04 1.502801e-03 JAGPHI01 3.061219e-04 1.510001e-03 UBA4417 2.893080e-04 2.849353e-03 TH-plancto1 2.891817e-04 2.848110e-03 JAAYQI01 2.884768e-04 1.172060e-03 CALXSC01 2.872357e-04 1.380046e-03 Methanocorpusculum 2.866192e-04 1.094065e-03 CAIQJJ01 2.816756e-04 2.774183e-03 Massiliimalia 2.770692e-04 1.158610e-03 CALURL01 2.735772e-04 1.381541e-03 Negativibacillus 2.673534e-04 8.605906e-04 CAIRTM01 2.647003e-04 1.610403e-03 JAEUNJ01 2.643866e-04 1.186509e-03 CAJLXD01 2.616752e-04 9.849718e-04 UBA2192 2.605813e-04 1.471595e-03 Coprobacillus 2.512556e-04 7.367047e-04 Plesiomonas 2.510777e-04 2.472828e-03 Leadbetterella 2.470890e-04 1.347542e-03 Lacibacter 2.466315e-04 2.198721e-03 JAAYKM01 2.396380e-04 2.360160e-03 UBA3254 2.373440e-04 1.827176e-03 WRDF01 2.355657e-04 7.059549e-04 RGDT01 2.328062e-04 2.292876e-03 JAHHTP01 2.321481e-04 7.443505e-04 JAFGIC01 2.320661e-04 2.285586e-03 M3007 2.317820e-04 1.292124e-03 Serratia_A 2.209635e-04 1.348450e-03 Holophaga 2.166536e-04 2.133790e-03 CAJAUT01 2.154250e-04 1.514456e-03 2-12-FULL-35-15 2.127537e-04 1.727718e-03 Methanoregula 2.115446e-04 1.818352e-03 CAIQQL01 2.012785e-04 1.796610e-03 Terracidiphilus 1.953616e-04 1.924089e-03 Syntrophorhabdus 1.890416e-04 1.546356e-03 Flavobacterium 1.829016e-04 1.620468e-03 UBA5026 1.821910e-04 1.348509e-03 Rahnella 1.803689e-04 1.253661e-03 SHXO01 1.797211e-04 8.927506e-04 CHH4-2 1.708571e-04 4.697032e-04 Morganella 1.661144e-04 1.371676e-03 Sulfuritalea 1.582309e-04 8.944958e-04 IOR16 1.569932e-04 3.560310e-04 Hespellia 1.564312e-04 8.181518e-04 M0103 1.549871e-04 1.052732e-03 MWCR01 1.541342e-04 1.081327e-03 JACRFF01 1.523242e-04 7.683019e-04 Avimicrobium 1.513856e-04 3.128958e-04 Rhodoferax 1.497042e-04 1.117247e-03 Aestuariivirga 1.447142e-04 5.908593e-04 PALSA-1004 1.297459e-04 9.992533e-04 Intestinibacillus 1.212242e-04 4.281023e-04 Aquisediminimonas 1.152657e-04 5.446202e-04 UBA668 1.119473e-04 7.628420e-04 Vitreimonas 1.094839e-04 6.706470e-04 Fluviibacter 1.058202e-04 3.751332e-04 JAGOMW01 1.026608e-04 7.766701e-04 PALSA-1444 9.517468e-05 4.833040e-04 Merdenecus 9.435047e-05 3.854333e-04 Massilioclostridium 9.062086e-05 2.962613e-04 Cardinium 9.033159e-05 5.611765e-04 UBA9973 8.917879e-05 8.783093e-04 Polynucleobacter 8.225897e-05 3.422233e-04 RGIG4140 8.096121e-05 5.359455e-04 UBA10108 7.929866e-05 7.810012e-04 JAGQMS01 7.555860e-05 3.616569e-04 Hepatoplasma 7.517161e-05 7.403545e-04 JAJQEJ01 7.487018e-05 2.711640e-04 Anaerobium 7.329179e-05 2.450951e-04 UBA8529 7.192224e-05 5.390355e-04 JAAYCI01 7.014809e-05 2.914153e-04 CAJBLF01 7.012992e-05 6.906996e-04 MGBC133411 6.940542e-05 4.023300e-04 JAEZVV01 6.890317e-05 6.000937e-04 UBA11704 6.344839e-05 5.321556e-04 RFTN01 6.279603e-05 3.586105e-04 JAFGVL01 6.033861e-05 5.942663e-04 Acinetobacter 5.992173e-05 4.649041e-04 RGIG8482 5.239573e-05 3.378165e-04 Methylopumilus_A 5.091526e-05 3.564476e-04 HGM16780 5.028810e-05 2.219329e-04 SSEF01 4.952088e-05 2.986606e-04 JAKJEI01 4.915817e-05 4.354164e-04 MGBC102946 4.876472e-05 4.802768e-04 Lumbricidophila 4.561574e-05 4.492630e-04 Brevinema 4.071840e-05 2.975509e-04 UBA8515 4.024405e-05 2.258398e-04 GWA2-36-10 2.884440e-05 2.345672e-04 JACRJP01 2.249398e-05 1.820714e-04 2-01-FULL-39-10-A 1.906267e-05 1.685139e-04 JAAZKV01 1.778707e-05 1.338011e-04 Aurantimicrobium 1.746277e-05 7.395454e-05 C7867-006 1.740558e-05 1.410053e-04 Cetobacterium_A 1.258077e-05 7.242913e-05 genus_arrange &lt;- genus_summary %&gt;% group_by(genus) %&gt;% summarise(mean=sum(relabun)) %&gt;% filter(genus != &quot;g__&quot;)%&gt;% arrange(-mean) %&gt;% select(genus) %&gt;% mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) %&gt;% pull() #Per pond genus_summary %&gt;% left_join(sample_metadata,by=join_by(sample==sample)) %&gt;% mutate(genus=factor(genus, levels=rev(genus_summary_sort %&gt;% pull(genus)))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=genus, group=genus, color=phylum)) + scale_color_manual(values=phylum_colors) + geom_jitter(alpha=0.5) + facet_grid(.~region)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) "],["alpha-diversity.html", "Chapter 7 Alpha diversity", " Chapter 7 Alpha diversity load(&quot;data/data.Rdata&quot;) # Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 0) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(richness = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(neutral = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, tree = genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(phylogenetic = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) # Aggregate basal GIFT into elements dist &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) %&gt;% traits2dist(., method = &quot;gower&quot;) functional &lt;- genome_counts_filt %&gt;% filter(genome %in% rownames(dist)) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, dist = dist) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(functional = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) %&gt;% mutate(functional = if_else(is.nan(functional), 1, functional)) # Merge all metrics alpha_div &lt;- richness %&gt;% full_join(neutral, by = join_by(sample == sample)) %&gt;% full_join(phylogenetic, by = join_by(sample == sample)) %&gt;% full_join(functional, by = join_by(sample == sample)) #Richness alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(!region %in% c(&quot;Eskoriatza&quot;,&quot;Villabona&quot;)) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% ggplot(aes(y = value, x = region, group=region, color=region, fill=region)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1) ) #Neutral alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(!region %in% c(&quot;Eskoriatza&quot;,&quot;Villabona&quot;)) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% ggplot(aes(y = value, x = region, group=region, color=region, fill=region)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1) ) #Phylogenetic alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(!region %in% c(&quot;Eskoriatza&quot;,&quot;Villabona&quot;)) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% ggplot(aes(y = value, x = region, group=region, color=region, fill=region)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1) ) #Functional alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(!region %in% c(&quot;Eskoriatza&quot;,&quot;Villabona&quot;)) %&gt;% filter(metric==&quot;functional&quot;) %&gt;% ggplot(aes(y = value, x = region, group=region, color=region, fill=region)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1) ) "],["beta-diversity.html", "Chapter 8 Beta diversity", " Chapter 8 Beta diversity load(&quot;data/data.Rdata&quot;) beta_q0n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 0) beta_q1n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1) beta_q1p &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, tree = genome_tree) beta_q1f &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, dist = dist) 8.0.1 Permanova #Richness betadisper(beta_q0n$C, sample_metadata$Origin) %&gt;% permutest(., pairwise = TRUE) adonis2(beta_q0n$C ~ Origin, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1n$C))), permutations = 999, strata = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1n$C))) %&gt;% pull(Location)) %&gt;% broom::tidy() %&gt;% tt() #Neutral diversity betadisper(beta_q1n$C, sample_metadata$Origin) %&gt;% permutest(., pairwise = TRUE) adonis2(beta_q1n$C ~ Origin, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1n$C))), permutations = 999, strata = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1n$C))) %&gt;% pull(Location)) %&gt;% broom::tidy() %&gt;% tt() #Phylogenetic diversity betadisper(beta_q1p$C, sample_metadata$Origin) %&gt;% permutest(., pairwise = TRUE) adonis2(beta_q1p$C ~ Origin, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1n$C))), permutations = 999, strata = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1n$C))) %&gt;% pull(Location)) %&gt;% broom::tidy() %&gt;% tt() #Functional diversity betadisper(beta_q1f$C, sample_metadata$Origin) %&gt;% permutest(., pairwise = TRUE) adonis2(beta_q1f$C ~ Origin, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1n$C))), permutations = 999, strata = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1n$C))) %&gt;% pull(Location)) %&gt;% broom::tidy() %&gt;% tt() 8.0.2 Richness diversity plot beta_q0n$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(Origin,Location) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = Origin, fill = Origin, shape = as.factor(Location))) + scale_color_manual(name=&quot;Origin&quot;, breaks=c(&quot;Tame&quot;,&quot;Feral&quot;), values=c(&quot;#6A9AC3&quot;,&quot;#F3B942&quot;)) + scale_fill_manual(name=&quot;Origin&quot;, breaks=c(&quot;Tame&quot;,&quot;Feral&quot;), values=c(&quot;#6A9AC350&quot;,&quot;#F3B94250&quot;)) + geom_point(size = 4) + # stat_ellipse(aes(color = beta_q1n_nmds$Groups))+ geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9) + theme_classic() + theme( axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12), axis.title = element_text(size = 20, face = &quot;bold&quot;), axis.text = element_text(face = &quot;bold&quot;, size = 18), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 16), legend.title = element_text(size = 18), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(shape=&quot;Individual&quot;) 8.0.3 Neutral diversity plot beta_q1n$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(Origin,Location) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = Origin, fill = Origin, shape = as.factor(Location))) + scale_color_manual(name=&quot;Origin&quot;, breaks=c(&quot;Tame&quot;,&quot;Feral&quot;), values=c(&quot;#6A9AC3&quot;,&quot;#F3B942&quot;)) + scale_fill_manual(name=&quot;Origin&quot;, breaks=c(&quot;Tame&quot;,&quot;Feral&quot;), values=c(&quot;#6A9AC350&quot;,&quot;#F3B94250&quot;)) + geom_point(size = 4) + # stat_ellipse(aes(color = beta_q1n_nmds$Groups))+ geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9) + theme_classic() + theme( axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12), axis.title = element_text(size = 20, face = &quot;bold&quot;), axis.text = element_text(face = &quot;bold&quot;, size = 18), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 16), legend.title = element_text(size = 18), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(shape=&quot;Individual&quot;) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
